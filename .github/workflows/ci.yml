name: JDBC Unit Tests
on: [push, pull_request]

jobs:
  extension-tests:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Clone, build, and run tests for Postgres engine
        id: postgres
        if: always()
        run: |
          cd ..
          git clone --branch BABEL_1_2_STABLE__PG_13_6 https://github.com/babelfish-for-postgresql/postgresql_modified_for_babelfish.git
          sudo apt-get update
          sudo apt-get install uuid-dev openjdk-8-jre libicu-dev libxml2-dev openssl libssl-dev python-dev libossp-uuid-dev libpq-dev cmake pkg-config g++ build-essential bison 
          cd postgresql_modified_for_babelfish
          ./configure --prefix=$HOME/postgres/ --with-python PYTHON=/usr/bin/python2.7 --enable-debug CFLAGS="-ggdb" --with-libxml --with-uuid=ossp --with-icu
          make -j 4 2>error.txt
          make install
          make check
          cd contrib && make && sudo make install
      - name: Compile ANTLR
        id: compile-antlr
        if: always() && steps.postgres.outcome == 'success'
        run: |
          ANTLR_VERSION=4.9.3
        
          cd contrib/babelfishpg_tsql/antlr/thirdparty/antlr/
          sudo cp "antlr-$ANTLR_VERSION-complete.jar" /usr/local/lib
          cd ..
          wget "http://www.antlr.org/download/antlr4-cpp-runtime-$ANTLR_VERSION-source.zip"
          unzip -d antlr4 "antlr4-cpp-runtime-$ANTLR_VERSION-source.zip"
          cd antlr4
          mkdir build && cd build
          cmake .. -D ANTLR_JAR_LOCATION="/usr/local/lib/antlr-$ANTLR_VERSION-complete.jar" -DCMAKE_INSTALL_PREFIX=/usr/local -DWITH_DEMO=True
          make
          sudo make install
          cp "/usr/local/lib/libantlr4-runtime.so.$ANTLR_VERSION" ~/postgres/lib/
      - name: Set env variables and build extensions
        run: |
          export PG_CONFIG=~/postgres/bin/pg_config
          export PG_SRC=~/work/babelfish_extensions/postgresql_modified_for_babelfish
          export cmake=$(which cmake)
          cd contrib/babelfishpg_money
          make && make install
          cd ../babelfishpg_common
          make && make install
          cd ../babelfishpg_tds
          make && make install
          echo Now building bbf_tsql
          cd ../babelfishpg_tsql
          make && make install
      - name: Install extensions
        run: |
          cd ~
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
          sudo apt-get install mssql-tools unixodbc-dev
          export PATH=/opt/mssql-tools/bin:$PATH
          ~/postgres/bin/initdb -D ~/postgres/data/
          ~/postgres/bin/pg_ctl -D ~/postgres/data/ -l logfile start
          cd postgres/data
          sudo sed -i "s/#listen_addresses = 'localhost'/listen_addresses = '*'/g" postgresql.conf
          sudo sed -i "s/#shared_preload_libraries = ''/shared_preload_libraries = 'babelfishpg_tds'/g" postgresql.conf
          ipaddress=$(ifconfig eth0 | grep 'inet ' | cut -d: -f2 | awk '{ print $2}')
          sudo echo "host    all             all             $ipaddress/32            trust" >> pg_hba.conf
          ~/postgres/bin/pg_ctl -D ~/postgres/data/ -l logfile restart
          sudo ~/postgres/bin/psql -d postgres -U runner -c "CREATE USER jdbc_user WITH SUPERUSER CREATEDB CREATEROLE PASSWORD '12345678' INHERIT;"
          sudo ~/postgres/bin/psql -d postgres -U runner -c "DROP DATABASE IF EXISTS jdbc_testdb;"
          sudo ~/postgres/bin/psql -d postgres -U runner -c "CREATE DATABASE jdbc_testdb OWNER jdbc_user;"
          sudo ~/postgres/bin/psql -d jdbc_testdb -U runner -c "set allow_system_table_mods = on;"
          sudo ~/postgres/bin/psql -d jdbc_testdb -U runner -c "CREATE EXTENSION IF NOT EXISTS "babelfishpg_tds" CASCADE;"
          sudo ~/postgres/bin/psql -d jdbc_testdb -U runner -c "GRANT ALL ON SCHEMA sys to jdbc_user;"
          sudo ~/postgres/bin/psql -d jdbc_testdb -U runner -c "ALTER USER jdbc_user CREATEDB;"
          sudo ~/postgres/bin/psql -d jdbc_testdb -U runner -c "ALTER SYSTEM SET babelfishpg_tsql.database_name = 'jdbc_testdb';"
          sudo ~/postgres/bin/psql -d jdbc_testdb -U runner -c "SELECT pg_reload_conf();"
          sudo ~/postgres/bin/psql -d jdbc_testdb -U runner -c "CALL sys.initialize_babelfish('jdbc_user');"
          sqlcmd -S localhost -U jdbc_user -P 12345678 -Q "SELECT @@version GO"
      - name: Run JDBC test framework
        timeout-minutes: 15
        run: |
          cd test/JDBC/
          mvn test
      - name: Upload log
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: postgres-log
          path: ~/postgres/data/logfile
      # The test summary files contain paths with ':' characters, which is not allowed with the upload-artifact actions
      - name: Rename test summary files
        if: ${{ failure() }}
        run: |
          cd test/JDBC/Info
          timestamp=`ls -Art | tail -n 1`
          cd $timestamp
          mv $timestamp.diff ../output-diff.diff
          mv "$timestamp"_runSummary.log ../run-summary.log
      - name: Upload run summary 
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: run-summary.log
          path: test/JDBC/Info/run-summary.log
      - name: Upload output diff
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: output-diff.diff
          path: test/JDBC/Info/output-diff.diff
