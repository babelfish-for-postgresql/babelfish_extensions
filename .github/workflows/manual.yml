# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      commiter:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Alias of the commiter'
        # Default value if no value is explicitly provided
        default: 'nirmisha'
        # Input has to be provided for the workflow to run
        required: true
      target_branch:
        description: 'Branch Where to do version bump'
        default: 'BABEL_2_X_DEV'
        required: false


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  Auto-Bump-Version:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Checkout Extensions
      uses: actions/checkout@v3
      with:
        branch: ${{ github.event.inputs.target_branch}}
      id: checkout

    - name: Check Current Version
      if: always() && steps.checkout.outcome == 'success'
      id: bump_version
      run: |
        vfile=contrib/babelfishpg_tsql/src/babelfish_version.h
        # bump babelfish internal version
        bbf_int_pre_version=$(awk '/BABELFISH_INTERNAL_VERSION_STR/ {print $4}' $vfile | sed 's/\"//')
        echo "bbf_int_old_version=$bbf_int_pre_version" >> $GITHUB_ENV
        sed -i -r 's/(.*)(BABELFISH_INTERNAL_VERSION_STR )"(Babelfish )([0-9]+.[0-9]+.)([0-9]+)(.[0-9]+)"/echo "\1\2\\"\3\4$((\5+1))\6\\""/ge' $vfile
        bbf_int_post_version=$(awk '/BABELFISH_INTERNAL_VERSION_STR/ {print $4}' $vfile | sed 's/\"//')
        echo "bbf_int_new_version=$bbf_int_post_version" >> $GITHUB_ENV
        # bump babelfish version
        bbf_pre_version=$(awk '/BABELFISH_VERSION_STR/ {print $3}' $vfile | sed 's/\"//')
        echo "bbf_old_version=$bbf_pre_version" >> $GITHUB_ENV
        sed -i -r 's/(.*)(BABELFISH_VERSION_STR )"([0-9]+.[0-9]+.)([0-9]+)"/echo "\1\2\\"\3$((\4+1))\\""/ge' $vfile
        bbf_post_version=$(awk '/BABELFISH_VERSION_STR/ {print $3}' $vfile | sed 's/\"//')
        echo "bbf_new_version=$bbf_post_version" >> $GITHUB_ENV
        git status
        git add .

    - name : Create Pull Request
      if: always() && steps.bump_version.outcome == 'success'
      uses: peter-evans/create-pull-request@v4
      with:
        token: ${{ secrets.MACHINE_PAT }}
        push-to-fork: ahmed-shameem/babelfish_extensions_machine
        commit-message: Bump Babelfish Version to ${{ env.bbf_new_version }}
        title: Bump Babelfish  Version to ${{ env.bbf_new_version }}
        branch: bump-vers-${{ env.bbf_new_version }}
        base: ${{ github.event.inputs.target_branch }}
        delete-branch: true
        body: Automated Version Bump to  ${{ env.bbf_new_version }} also update Internal Version to ${{ env.bbf_int_new_version }}
