name: Version Upgrade Test Framework
on:
  push:
    branches:
      - BABEL_2_X_DEV_upgrade_test
  pull_request:
    branches:
      - BABEL_2_X_DEV_upgrade_test

jobs:
  version-upgrade-tests:
    name: Upgrade version and test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Install Dependencies
        id: install-dependencies
        if: always()
        uses: ./.github/composite-actions/install-dependencies

      - name: Install yq - yaml parser
        id: install-yq
        if: always()
        run: pip3 install yq

      - name: read base version
        id: read-base-version
        if: always() && steps.install-yq.outcome == 'success'
        run: > 
          echo "::set-output name=base-version::$(
            yq '."upgrade-version"[0]' ${{ github.workspace }}/.github/configuration/upgrade-test-configuration.yml
          )"

      - name: find-branch
        id: find-branch
        if: always() && steps.read-base-version.outcome == 'success'
        run: >
          echo "::set-output name=base-engine-branch::$(
            yq -r '."${{ steps.read-base-version.outputs.base-version }}".engine_branch' ${{ github.workspace }}/.github/template/version-branch-template.yml
          )" &&
          echo "::set-output name=base-extension-branch::$(
            yq -r '."${{ steps.read-base-version.outputs.base-version }}".extension_branch' ${{ github.workspace }}/.github/template/version-branch-template.yml
          )" &&
          echo "::set-output name=base-dir::$(echo postgres$(awk '{$0=int($0)}1' <<< ${{ steps.read-base-version.outputs.base-version }}))"

      - name: Setup Base Version and Runs Tests
        id: setup-base-version
        timeout-minutes: 30
        if: always() && steps.install-dependencies.outcome == 'success' && steps.find-branch.outcome == 'success'
        uses: ./.github/composite-actions/setup-base-version
        with:
          engine_branch: ${{ steps.find-branch.outputs.base-engine-branch }}
          extension_branch: ${{ steps.find-branch.outputs.base-extension-branch }}
          install_dir: ${{ steps.find-branch.outputs.base-dir }}

      - name: Setup Upgrade Version Composite Action
        id: setup-upgrade-ver-ca
        if: always() && steps.install-yq.outcome == 'success' && steps.setup-base-version.outcome == 'success'
        uses: ./.github/composite-actions/setup-upgrade-version-ca
        with: 
          base_version: ${{ steps.read-base-version.outputs.base-version }}

      - name: Upgrade and Test
        id: upgrade-and-test
        if: always() && steps.setup-upgrade-ver-ca.outcome == 'success'
        uses: ./.github/composite-actions/upgrade-version

      - name: Cleanup Upgrade Version Composite Action
        id: cleanup-upgrade-version-ca
        if: always() && steps.upgrade-and-test.outcome == 'success'
        run: |
          git branch
          rm -r ./.github/composite-actions/upgrade-version

      - name: Rename Test Summary Files
        id: test-file-rename
        if: always() && steps.upgrade-and-test.outcome == 'failure'
        run: |
          cd test/JDBC/Info
          timestamp=`ls -Art | tail -n 1`
          cd $timestamp
          mkdir -p ~/upgrade
          mv $timestamp.diff ~/upgrade/output-diff.diff
          mv "$timestamp"_runSummary.log ~/upgrade/run-summary.log
  
      - name: Upload Logs
        if: always() && steps.test-file-rename.outcome == 'success'
        uses: actions/upload-artifact@v2
        with:
          name: upgrade-logs
          path: |
            ~/upgrade/*.log
            ~/upgrade/*.diff
            ~/postgres*/data/logfile