name: ODBC Tests
on: [push, pull_request]

jobs:
  odbc:
    name: ODBC
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Clone, build, and run tests for Postgres engine
        run: |
          cd ..
          git clone https://github.com/babelfish-for-postgresql/postgresql_modified_for_babelfish.git
          sudo apt-get update
          sudo apt-get install uuid-dev openjdk-8-jre libicu-dev libxml2-dev openssl libssl-dev python-dev libossp-uuid-dev libpq-dev cmake pkg-config g++ build-essential bison 
          cd postgresql_modified_for_babelfish
          ./configure --prefix=$HOME/postgres/ --with-python PYTHON=/usr/bin/python2.7 --enable-debug CFLAGS="-ggdb" --with-libxml --with-uuid=ossp --with-icu
          make -j 4 2>error.txt
          make install
          cd contrib && make && sudo make install
      - name: Copy ANTLR jar file
        run: |
          cd contrib/babelfishpg_tsql/antlr/thirdparty/antlr/
          sudo cp antlr-4.9.2-complete.jar /usr/local/lib
      - name: Compile ANTLR
        run: |
          cd ..
          wget http://www.antlr.org/download/antlr4-cpp-runtime-4.9.2-source.zip
          unzip -d antlr4 antlr4-cpp-runtime-4.9.2-source.zip 
          cd antlr4
          mkdir build && cd build 
          cmake .. -D ANTLR_JAR_LOCATION=/usr/local/lib/antlr-4.9.2-complete.jar -DCMAKE_INSTALL_PREFIX=/usr/local -DWITH_DEMO=True
          make
          sudo make install
          cp /usr/local/lib/libantlr4-runtime.so.4.9.2 ~/postgres/lib/
      - name: Set env variables and build extensions
        run: |
          export PG_CONFIG=~/postgres/bin/pg_config
          export PG_SRC=~/work/babelfish_extensions/postgresql_modified_for_babelfish
          export cmake=$(which cmake)
          cd contrib/babelfishpg_money
          make && make install
          cd ../babelfishpg_common
          make && make install
          cd ../babelfishpg_tds
          make && make install
          cd ../babelfishpg_tsql
          make && make install
      - name: Install extensions
        run: |
          cd ~
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
          sudo apt-get install mssql-tools unixodbc-dev
          export PATH=/opt/mssql-tools/bin:$PATH
          ~/postgres/bin/initdb -D ~/postgres/data/
          ~/postgres/bin/pg_ctl -D ~/postgres/data/ -l logfile start
          cd postgres/data
          sudo sed -i "s/#listen_addresses = 'localhost'/listen_addresses = '*'/g" postgresql.conf
          sudo sed -i "s/#shared_preload_libraries = ''/shared_preload_libraries = 'babelfishpg_tds'/g" postgresql.conf
          ipaddress=$(ifconfig eth0 | grep 'inet ' | cut -d: -f2 | awk '{ print $2}')
          sudo echo "host    all             all             $ipaddress/32            trust" >> pg_hba.conf
          ~/postgres/bin/pg_ctl -D ~/postgres/data/ -l logfile restart
          cd ~/work/babelfish_extensions/babelfish_extensions/
          sudo ~/postgres/bin/psql -d postgres -U runner -v user="odbc_user" -v db="odbc_testdb" -f .github/scripts/create_extension.sql
          sqlcmd -S localhost -U odbc_user -P 12345678 -Q "SELECT @@version GO"
      - name: Install ODBC driver
        run: |
          cd ~
          sudo apt-get install msodbcsql17
      - name: Run ODBC tests
        run: |
          cd test/odbc
          cmake -S . -B build
          cmake --build build
          BABEL_DB_SERVER=localhost \
            BABEL_DB_PORT=1433 \
            BABEL_DB_USER=odbc_user \
            BABEL_DB_PASSWORD=12345678 \
            BABEL_DB_NAME=master \
            ./build/main
