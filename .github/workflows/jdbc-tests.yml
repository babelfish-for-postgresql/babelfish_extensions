name: JDBC Tests
on: [push, pull_request]

jobs:
  run-babelfish-jdbc-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        id: checkout

      - name: Install Dependencies
        id: install-dependencies
        if: always()
        uses: ./.github/composite-actions/install-dependencies

      - name: Build Modified Postgres
        id: build-modified-postgres
        if: always() && steps.install-dependencies.outcome == 'success'
        uses: ./.github/composite-actions/build-modified-postgres
      
      - name: Compile ANTLR
        id: compile-antlr
        if: always() && steps.build-modified-postgres.outcome == 'success'
        uses: ./.github/composite-actions/compile-antlr
      
      - name: Build Extensions
        id: build-extensions
        if: always() && steps.compile-antlr.outcome == 'success'
        uses: ./.github/composite-actions/build-extensions
      
      - name: Install Extensions
        id: install-extensions
        if: always() && steps.build-extensions.outcome == 'success'
        uses: ./.github/composite-actions/install-extensions
            
      - name: Initiate Core Dump
        id: core-dump
        run: |
          ulimit -c unlimited
          ulimit -c
          sqlcmd -S localhost -U "jdbc_user" -P 12345678 -Q "DECLARE @retVal nvarchar(512); EXECUTE master.dbo.xp_instance_regread N'RootKey', N'Key', N'ServiceName', @retVal OUT; "
        shell: bash

      - name: Upload Core Dumps
        if: always() && steps.core-dump.outcome == 'failure'
        uses: actions/upload-artifact@v2
        with:
          name: core-dumps
          path: /var/coredumps/core-postgres-*
      
      - name: Setup upterm session
        if: always()
        uses: lhotari/action-upterm@v1