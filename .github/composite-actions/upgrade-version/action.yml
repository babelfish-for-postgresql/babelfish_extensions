name: 'Upgrade Version'
inputs:
  engine_branch: 
    description: "Engine Branch"
    required: true
  extension_branch: 
    description: "Extension Branch"
    required: true
  is_final_ver:
    description: "Is this the final version"
    required: true

runs:
  using: "composite"
  steps:    
    - name: Build and run tests for Postgres engine using ${{ inputs.engine_branch }}
      run: |
        cd ../postgresql_modified_for_babelfish
        git checkout ${{ inputs.engine_branch }}
        ./configure --prefix=$HOME/postgres/ --with-python PYTHON=/usr/bin/python2.7 --enable-debug CFLAGS="-ggdb" --with-libxml --with-uuid=ossp --with-icu
        make clean
        make -j 4 2>error.txt
        make install
        make check
        cd contrib && make && sudo make install
      shell: bash

    - uses: actions/checkout@v2
      with:
        repository: babelfish-for-postgresql/babelfish_extensions
        ref: ${{ inputs.extension_branch }}

    - name: Set env variables and build extensions using ${{ inputs.extension_branch }}
      id: build-extensions-newer
      run: |
        export PG_CONFIG=~/postgres/bin/pg_config
        export PG_SRC=~/work/babelfish_extensions/postgresql_modified_for_babelfish
        export cmake=$(which cmake)
        cd contrib/babelfishpg_money
        make && make install
        cd ../babelfishpg_common
        make && make install
        cd ../babelfishpg_tds
        make && make install
        cd ../babelfishpg_tsql
        make && make install
      shell: bash
      #uses: ./.github/composite-actions/build-extensions

    - name: Update extensions
      if: always() && steps.build-extensions-newer.outcome == 'success'
      run: |
        cd ~
        ~/postgres/bin/pg_ctl -D ~/postgres/data/ -l logfile restart
        sudo ~/postgres/bin/psql -d jdbc_testdb -U runner -c "\dx"
        sudo ~/postgres/bin/psql -d jdbc_testdb -U runner -c "ALTER EXTENSION "babelfishpg_common" UPDATE; ALTER EXTENSION "babelfishpg_tsql" UPDATE;"
        sudo ~/postgres/bin/psql -d jdbc_testdb -U runner -c "\dx"
        sqlcmd -S localhost -U jdbc_user -P 12345678 -Q "SELECT @@version GO"
      shell: bash

    - name: Run JDBC Standard Tests
      id: jdbc-standard-tests
      if: always() && inputs.is_final_ver
      run: |
        cd test/JDBC/
        mvn test
      shell: bash

    - uses: actions/checkout@v2

    - name: Run JDBC Upgrade Tests
      id: jdbc-upgrade-tests
      run: |
        cd test/JDBC/
        sudo sed -i 's/inputFilesPath = input/inputFilesPath = upgrade\/verification/g' src/main/resources/config.txt
        mvn test
        sudo sed -i 's/inputFilesPath = upgrade\/verification/inputFilesPath = input/g' src/main/resources/config.txt
      shell: bash
    
    - name: Run JDBC Cleanup Tests
      id: jdbc-cleanup-tests
      if: always() && steps.jdbc-upgrade-tests.outcome == 'success' && inputs.is_final_ver
      run: |
        sudo sed -i 's/inputFilesPath = input/inputFilesPath = upgrade\/cleanup/g' src/main/resources/config.txt
        mvn test
        sudo sed -i 's/inputFilesPath = upgrade\/cleanup/inputFilesPath = input/g' src/main/resources/config.txt
      shell: bash