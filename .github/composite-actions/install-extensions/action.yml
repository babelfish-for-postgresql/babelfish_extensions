name: 'Install Extensions'

inputs:
  install_dir:
    description: 'Engine install directory'
    required: no
    default: psql
  migration_mode:
    description: 'Database migration mode'
    required: no
    default: "single-db"
  parallel_query_mode:
    description: 'Postgres Parallel Query Mode'
    required: no
    default: false
  server_collation_name:
    description: "Server collation name which need to be set in postgresql.conf"
    required: false
    default: "default"
  psql_port:
    description: "Postgres port"
    required: false
    default: 5432
  tsql_port:
    description: "TDS port"
    required: false
    default: 1433
  wal_level:
    description: "wal_level GUC setting"
    required: false
    default: replica

runs:
  using: "composite"
  steps:
    - name: Install Extensions
      run: |
        ulimit -c unlimited
        cd ~
        export PATH=/opt/mssql-tools/bin:$PATH

        # add port as suffix in data directory name to make it unique
        if [[ ${{inputs.psql_port}} != 5432 ]];then
          export DATADIR=data_${{inputs.psql_port}}
        else
          export DATADIR=data
        fi

        ~/${{inputs.install_dir}}/bin/initdb -D ~/${{inputs.install_dir}}/$DATADIR/
        cd ${{inputs.install_dir}}/$DATADIR
        sudo sed -i "s/#listen_addresses = 'localhost'/listen_addresses = '*'/g" postgresql.conf
        sudo sed -i "s/#shared_preload_libraries = ''/shared_preload_libraries = 'babelfishpg_tds, pg_stat_statements'/g" postgresql.conf
        sudo sed -i "s/#port = 5432/port = ${{inputs.psql_port}}/g" postgresql.conf
        sudo sed -i "s/#wal_level = replica/wal_level = ${{inputs.wal_level}}/g" postgresql.conf
        ipaddress=$(ifconfig eth0 | grep 'inet ' | cut -d: -f2 | awk '{ print $2}')
        # Allow only runner to have trust authentication, all other users must provide a password
        {
          sudo echo "local   all             runner                                   trust"
          sudo echo "local   all             all                                      md5"
          sudo echo "host    all             runner          127.0.0.1/32             trust"
          sudo echo "host    all             runner          $ipaddress/32            trust"
          sudo echo "host    all             all             0.0.0.0/0                md5"
          sudo echo "host    all             all             ::/0                     md5"
        } > pg_hba.conf
        if [[ ${{ inputs.server_collation_name }} != "default" ]]; then
          sudo echo "babelfishpg_tsql.server_collation_name = '${{ inputs.server_collation_name }}'" >> postgresql.conf
        fi
        ~/${{inputs.install_dir}}/bin/pg_ctl -c -D ~/${{inputs.install_dir}}/$DATADIR/ -l logfile start
        cd ~/work/babelfish_extensions/babelfish_extensions/
        sudo ~/${{inputs.install_dir}}/bin/psql -d postgres -U runner -p ${{inputs.psql_port}} -v user="jdbc_user" -v db="jdbc_testdb" -v migration_mode=${{inputs.migration_mode}} -v tsql_port=${{inputs.tsql_port}} -v parallel_query_mode=${{inputs.parallel_query_mode}} -f .github/scripts/create_extension.sql
        ~/${{inputs.install_dir}}/bin/pg_ctl -c -D ~/${{inputs.install_dir}}/$DATADIR/ -l logfile restart
        sqlcmd -S localhost,${{inputs.tsql_port}} -U "jdbc_user" -P 12345678 -Q "SELECT @@version GO"
      shell: bash
