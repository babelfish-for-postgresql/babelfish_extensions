name: 'Build Modified Postgres'
inputs:
  engine_branch:
    description: 'Engine Branch'
    required: no
    default: 'latest'
  install_dir:
    description: 'Engine install directory'
    required: no
    default: postgres

runs:
  using: "composite"
  steps:
    - name: Checkout, Build, and Install the Modified PostgreSQL Instance and Run Tests
      run: |
        cd ..
        rm -rf postgresql_modified_for_babelfish
        
        if [[ $GITHUB_EVENT_NAME == "pull_request" ]]; then
          if [[ ${{inputs.engine_branch}} == "latest" ]]; then
            ENGINE_BRANCH=$GITHUB_HEAD_REF
          else
            ENGINE_BRANCH=${{inputs.engine_branch}}
          fi            
          REPOSITORY_OWNER=$HEAD_OWNER
        else
          if [[ ${{inputs.engine_branch}} == "latest" ]]; then
            ENGINE_BRANCH=$GITHUB_REF_NAME
          else
            ENGINE_BRANCH=${{inputs.engine_branch}}
          fi
          REPOSITORY_OWNER=$GITHUB_REPOSITORY_OWNER
        fi

        $GITHUB_WORKSPACE/.github/scripts/clone_engine_repo "$REPOSITORY_OWNER" "$ENGINE_BRANCH"
        cd postgresql_modified_for_babelfish
        ./configure --prefix=$HOME/${{ inputs.install_dir }}/ --with-python PYTHON=/usr/bin/python2.7 --enable-debug --enable-cassert CFLAGS="-ggdb" --with-libxml --with-uuid=ossp --with-icu
        make -j 4 2>error.txt
        make install
        make check
        cd contrib && make && sudo make install

        if [[ ${{inputs.engine_branch}} != *"__PG_13_"* ]]; then
          cd ../..
          rm -rf pg_hint_plan
          git clone --depth 1 --branch REL14_1_4_0 https://github.com/ossc-db/pg_hint_plan.git
          cd pg_hint_plan
          export PATH=$HOME/${{ inputs.install_dir }}/bin:$PATH
          make
          make install
        fi
      env:
        HEAD_OWNER: ${{ github.event.pull_request.head.repo.owner.login }}
      shell: bash

    - name: Enable Ubuntu Core Dump
      run: |
        sudo mkdir -p /var/coredumps
        sudo chmod a+w /var/coredumps
        sudo sysctl kernel.core_pattern=/var/coredumps/core-%e-%p
        echo 'kernel.core_pattern=/var/coredumps/core-%e-%p' | sudo tee -a /etc/sysctl.conf
        echo '* soft core unlimited' | sudo tee -a /etc/security/limits.conf
        sudo systemctl daemon-reload
        ulimit -c unlimited
        echo 'DefaultLimitCORE=Infinity' | sudo tee -a /etc/systemd/system.conf
        sudo systemctl daemon-reexec
      shell: bash