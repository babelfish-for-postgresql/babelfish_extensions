name: 'Setup Base Version'
inputs:
  engine_branch: 
    description: "Engine Branch"
    required: true
  extension_branch: 
    description: "Extension Branch"
    required: true
  pg_new_dir:
    description: "Install new version in this directory"
    required: true

runs:
  using: "composite"
  steps:
    - name: Build Modified Postgres using latest version
      id: build-modified-postgres-new
      if: always()
      uses: ./.github/composite-actions/build-modified-postgres
      with:
        engine_branch: ${{ inputs.engine_branch }}
        install_dir: ${{ inputs.pg_new_dir }}

    - name: Copy ANTLR
      id: copy-antlr
      if: always() && steps.build-modified-postgres-new.outcome == 'success'
      run: cp "/usr/local/lib/libantlr4-runtime.so.4.9.3" ~/${{ inputs.pg_new_dir }}/lib/
      shell: bash

    - name: Build Extensions
      id: build-extensions-new
      if: always() && steps.copy-antlr.outcome == 'success'
      uses: ./.github/composite-actions/build-extensions
      with:
        install_dir: ${{ inputs.pg_new_dir }}
        extension_branch: ${{ inputs.extension_branch }}

    - uses: actions/checkout@v2

    - name: Build tds_fdw Extension
      id: build-tds_fdw-extension
      if: always() && steps.build-extensions-new.outcome == 'success'
      uses: ./.github/composite-actions/build-tds_fdw-extension
      with:
        install_dir: ${{ inputs.pg_new_dir }}

    - name: Setup new data directory
      id: setup-new-datadir
      if: always() && steps.build-tds_fdw-extension.outcome == 'success'
      run: |
        cd ~
        ~/${{ inputs.pg_new_dir }}/bin/initdb -D ~/${{ inputs.pg_new_dir }}/data
        cd ~/${{ inputs.pg_new_dir }}/data
        sudo sed -i "s/#listen_addresses = 'localhost'/listen_addresses = '*'/g" postgresql.conf
        sudo sed -i "s/#shared_preload_libraries = ''/shared_preload_libraries = 'babelfishpg_tds, pg_stat_statements'/g" postgresql.conf
        ipaddress=$(ifconfig eth0 | grep 'inet ' | cut -d: -f2 | awk '{ print $2}')
        sudo echo "host    all             all             $ipaddress/32            md5" >> pg_hba.conf
      shell: bash
