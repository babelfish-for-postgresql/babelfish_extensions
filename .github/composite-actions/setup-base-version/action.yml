name: 'Setup Base Version and Run Tests'
inputs:
  engine_branch: 
    description: "Engine Branch"
    required: true
  extension_branch: 
    description: "Extension Branch"
    required: true

runs:
  using: "composite"
  steps:    
    - name: Clone, build, and run tests for Postgres engine using ${{ inputs.engine_branch }}
      id: build-modified-postgres
      run: |
        cd ..
        git clone --branch ${{ inputs.engine_branch }} https://github.com/babelfish-for-postgresql/postgresql_modified_for_babelfish.git
        cd postgresql_modified_for_babelfish
        ./configure --prefix=$HOME/postgres/ --with-python PYTHON=/usr/bin/python2.7 --enable-debug CFLAGS="-ggdb" --with-libxml --with-uuid=ossp --with-icu
        make -j 4 2>error.txt
        make install
        make check
        cd contrib && make && sudo make install
      shell: bash

    - name: Compile ANTLR
      id: compile-antlr
      if: always() && steps.build-modified-postgres.outcome == 'success'
      uses: ./.github/composite-actions/compile-antlr

    - uses: actions/checkout@v2
      with:
        repository: babelfish-for-postgresql/babelfish_extensions
        ref: ${{ inputs.extension_branch }}

    - name: Set env variables and build extensions using ${{ inputs.extension_branch }}
      if: always() && steps.compile-antlr.outcome == 'success'
      run: |
        export PG_CONFIG=~/postgres/bin/pg_config
        export PG_SRC=~/work/babelfish_extensions/postgresql_modified_for_babelfish
        export cmake=$(which cmake)
        cd contrib/babelfishpg_money
        make && make install
        cd ../babelfishpg_common
        make && make install
        cd ../babelfishpg_tds
        make && make install
        echo Now building bbf_tsql
        cd ../babelfishpg_tsql
        make && make install
      shell: bash

    - name: Install extensions
      run: |
        cd ~
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
        curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
        sudo apt-get install mssql-tools unixodbc-dev
        export PATH=/opt/mssql-tools/bin:$PATH
        ~/postgres/bin/initdb -D ~/postgres/data/
        ~/postgres/bin/pg_ctl -D ~/postgres/data/ -l logfile start
        cd postgres/data
        sudo sed -i "s/#listen_addresses = 'localhost'/listen_addresses = '*'/g" postgresql.conf
        sudo sed -i "s/#shared_preload_libraries = ''/shared_preload_libraries = 'babelfishpg_tds'/g" postgresql.conf
        ipaddress=$(ifconfig eth0 | grep 'inet ' | cut -d: -f2 | awk '{ print $2}')
        sudo echo "host    all             all             $ipaddress/32            trust" >> pg_hba.conf
        ~/postgres/bin/pg_ctl -D ~/postgres/data/ -l logfile restart
        sudo ~/postgres/bin/psql -d postgres -U runner -c "CREATE USER jdbc_user WITH SUPERUSER CREATEDB CREATEROLE PASSWORD '12345678' INHERIT;"
        sudo ~/postgres/bin/psql -d postgres -U runner -c "DROP DATABASE IF EXISTS jdbc_testdb;"
        sudo ~/postgres/bin/psql -d postgres -U runner -c "CREATE DATABASE jdbc_testdb OWNER jdbc_user;"
        sudo ~/postgres/bin/psql -d jdbc_testdb -U runner -c "set allow_system_table_mods = on;"
        sudo ~/postgres/bin/psql -d jdbc_testdb -U runner -c "CREATE EXTENSION "babelfishpg_tds" CASCADE;"
        sudo ~/postgres/bin/psql -d jdbc_testdb -U runner -c "GRANT ALL ON SCHEMA sys to jdbc_user;"
        sudo ~/postgres/bin/psql -d jdbc_testdb -U runner -c "ALTER USER jdbc_user CREATEDB;"
        sudo ~/postgres/bin/psql -d jdbc_testdb -U runner -c "ALTER SYSTEM SET babelfishpg_tsql.database_name = 'jdbc_testdb';"
        sudo ~/postgres/bin/psql -d jdbc_testdb -U runner -c "SELECT pg_reload_conf();"
        sudo ~/postgres/bin/psql -d jdbc_testdb -U runner -c "CALL sys.initialize_babelfish('jdbc_user');"
        sudo ~/postgres/bin/psql -d jdbc_testdb -U runner -c "\dx"
        sqlcmd -S localhost -U jdbc_user -P 12345678 -Q "SELECT @@version GO"
      shell: bash

    # - name: Run JDBC Standard Tests
    #   id: jdbc-standard-tests
    #   run: |
    #     cd test/JDBC/
    #     mvn test
    #   shell: bash

    - uses: actions/checkout@v2

    - name: Run JDBC Upgrade Tests
      id: jdbc-upgrade-tests
      run: |
        cd test/JDBC/
        sudo sed -i 's/inputFilesPath = input/inputFilesPath = upgrade\/preparation/g' src/main/resources/config.txt
        mvn test
        sudo sed -i 's/inputFilesPath = upgrade\/preparation/inputFilesPath = upgrade\/verification/g' src/main/resources/config.txt
        mvn test
        sudo sed -i 's/inputFilesPath = upgrade\/verification/inputFilesPath = input/g' src/main/resources/config.txt
      shell: bash