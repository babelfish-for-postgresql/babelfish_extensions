-- nvarchar is not supported in PG
create table testing1(col nvarchar(60)); -- expect this to fail in the Postgres dialect
ERROR:  type "nvarchar" does not exist
LINE 1: create table testing1(col nvarchar(60));
                                  ^
CREATE EXTENSION IF NOT EXISTS "babelfishpg_tsql" CASCADE;
NOTICE:  extension "babelfishpg_tsql" already exists, skipping
set babelfishpg_tsql.sql_dialect = "tsql";
-- nvarchar is supported in tsql dialect
create table testing1(col nvarchar(60));
insert into testing1 (col) select N'Muffler';
insert into testing1 (col) select N'Mülle';
insert into testing1 (col) select N'MX Systems';
insert into testing1 (col) select N'Magic';
select * from testing1 order by col;
    col     
------------
 Magic
 Muffler
 Mülle
 MX Systems
(4 rows)

-- test case insensitive collation
create table testing2 (col varchar(20) collate SQL_Latin1_General_CP1_CI_AS);
insert into testing2 values ('JONES');
insert into testing2 values ('jones');
insert into testing2 values ('Jones');
insert into testing2 values ('JoNes');
insert into testing2 values ('JoNés');
select * from testing2 where col collate BBF_Unicode_General_CS_AS = 'JoNes';
  col  
-------
 JoNes
(1 row)

select * from testing2 where col collate BBF_Unicode_General_CI_AS = 'JoNes';
  col  
-------
 JONES
 jones
 Jones
 JoNes
(4 rows)

select * from testing2 where col collate BBF_Unicode_General_CI_AI = 'JoNes';
  col  
-------
 JONES
 jones
 Jones
 JoNes
 JoNés
(5 rows)

select * from testing2 where col collate BBF_Unicode_General_CS_AI = 'JoNes';
  col  
-------
 JoNes
 JoNés
(2 rows)

-- test case insensitivity for default collation
create table testing3 (c1 varchar(20), c2 char(20), c3 nvarchar(20));
\d testing3
                       Table "public.testing3"
 Column |     Type      |       Collation       | Nullable | Default 
--------+---------------+-----------------------+----------+---------
 c1     | "varchar"(20) | bbf_unicode_cp1_ci_as |          | 
 c2     | bpchar(20)    | bbf_unicode_cp1_ci_as |          | 
 c3     | nvarchar(20)  | bbf_unicode_cp1_ci_as |          | 

insert into testing3 values ('JONES','JONES','JONES');
insert into testing3 values ('JoneS','JoneS','JoneS');
insert into testing3 values ('jOnes','jOnes','jOnes');
select c1 from testing3 where c1='jones';
  c1   
-------
 JONES
 JoneS
 jOnes
(3 rows)

select c2 from testing3 where c2='jones';
          c2          
----------------------
 JONES               
 JoneS               
 jOnes               
(3 rows)

select c3 from testing3 where c3='jones';
  c3   
-------
 JONES
 JoneS
 jOnes
(3 rows)

-- test LIKE to ILIKE transformation
create table testing4 (c1 varchar(20), c2 char(20), c3 nvarchar(20));
create index c1_idx on testing4 (c1);
insert into testing4 values ('JONES','JONES','JONES');
insert into testing4 values ('JoneS','JoneS','JoneS');
insert into testing4 values ('jOnes','jOnes','jOnes');
insert into testing4 values ('abcD','AbcD','ABCd');
insert into testing4 values ('äbĆD','äḃcD','äƀCd');
-- set enable_seqscan doesn't work from the TSQL dialect, so switch
-- dialects, disable sequential scan so we see some index-based plans,
-- then switch back to the TSQL dialect
--
reset babelfishpg_tsql.sql_dialect;
set enable_seqscan = false;
set babelfishpg_tsql.sql_dialect = "tsql";
-- test that like is case-insenstive
select c1 from testing4 where c1 LIKE 'jones'; -- this gets converted to '='
  c1   
-------
 JONES
 JoneS
 jOnes
(3 rows)

explain (costs false) select c1 from testing4 where c1 LIKE 'jones';
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Bitmap Heap Scan on testing4
   Filter: ((c1)::text = 'jones'::text)
   ->  Bitmap Index Scan on c1_idxtesting49a168d73f3ba5aacdfd495b931b8d187
(3 rows)

select c1 from testing4 where c1 LIKE 'Jon%';
  c1   
-------
 JONES
 JoneS
 jOnes
(3 rows)

explain (costs false) select c1 from testing4 where c1 LIKE 'Jon%';
                                                QUERY PLAN                                                 
-----------------------------------------------------------------------------------------------------------
 Bitmap Heap Scan on testing4
   Filter: (((c1)::text ~~* 'Jon%'::text) AND ((c1)::text >= 'Jon'::text) AND ((c1)::text < 'Jon￿'::text))
   ->  Bitmap Index Scan on c1_idxtesting49a168d73f3ba5aacdfd495b931b8d187
(3 rows)

select c1 from testing4 where c1 LIKE 'jone_';
  c1   
-------
 JONES
 JoneS
 jOnes
(3 rows)

explain (costs false) select c1 from testing4 where c1 LIKE 'jone_';
                                                  QUERY PLAN                                                  
--------------------------------------------------------------------------------------------------------------
 Bitmap Heap Scan on testing4
   Filter: (((c1)::text ~~* 'jone_'::text) AND ((c1)::text >= 'jone'::text) AND ((c1)::text < 'jone￿'::text))
   ->  Bitmap Index Scan on c1_idxtesting49a168d73f3ba5aacdfd495b931b8d187
(3 rows)

select c1 from testing4 where c1 LIKE '_one_';
  c1   
-------
 JONES
 JoneS
 jOnes
(3 rows)

explain (costs false) select c1 from testing4 where c1 LIKE '_one_';
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Bitmap Heap Scan on testing4
   Filter: ((c1)::text ~~* '_one_'::text)
   ->  Bitmap Index Scan on c1_idxtesting49a168d73f3ba5aacdfd495b931b8d187
(3 rows)

select c1 from testing4 where c1 LIKE '%on%s';
  c1   
-------
 JONES
 JoneS
 jOnes
(3 rows)

explain (costs false) select c1 from testing4 where c1 LIKE '%on%s';
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Bitmap Heap Scan on testing4
   Filter: ((c1)::text ~~* '%on%s'::text)
   ->  Bitmap Index Scan on c1_idxtesting49a168d73f3ba5aacdfd495b931b8d187
(3 rows)

-- test that like is accent-senstive for CI_AS collation
select c1 from testing4 where c1 LIKE 'ab%';
  c1  
------
 abcD
(1 row)

select c1 from testing4 where c1 LIKE 'äb%';
  c1  
------
 äbĆD
(1 row)

select c1 from testing4 where c1 LIKE 'äḃĆ_';
 c1 
----
(0 rows)

-- test not like
select c1 from testing4 where c1 NOT LIKE 'jones';
  c1  
------
 abcD
 äbĆD
(2 rows)

explain (costs false) select c1 from testing4 where c1 NOT LIKE 'jones';
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Bitmap Heap Scan on testing4
   Filter: ((c1)::text <> 'jones'::text)
   ->  Bitmap Index Scan on c1_idxtesting49a168d73f3ba5aacdfd495b931b8d187
(3 rows)

select c1 from testing4 where c1 NOT LIKE 'jone%';
  c1  
------
 abcD
 äbĆD
(2 rows)

explain (costs false) select c1 from testing4 where c1 NOT LIKE 'jone%';
                                                 QUERY PLAN                                                  
-------------------------------------------------------------------------------------------------------------
 Bitmap Heap Scan on testing4
   Filter: (((c1)::text !~~* 'jone%'::text) OR ((c1)::text < 'jone'::text) OR ((c1)::text >= 'jone￿'::text))
   ->  Bitmap Index Scan on c1_idxtesting49a168d73f3ba5aacdfd495b931b8d187
(3 rows)

select c1 from testing4 where c1 NOT LIKE 'ä%';
  c1   
-------
 JONES
 JoneS
 jOnes
 abcD
(4 rows)

explain (costs false) select c1 from testing4 where c1 NOT LIKE 'ä%';
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Bitmap Heap Scan on testing4
   Filter: (((c1)::text !~~* 'ä%'::text) OR ((c1)::text < 'ä'::text) OR ((c1)::text >= 'ä￿'::text))
   ->  Bitmap Index Scan on c1_idxtesting49a168d73f3ba5aacdfd495b931b8d187
(3 rows)

-- test escape function and wildcard literal
select c1 from testing4 where c1 LIKE E'\_ones';
  c1   
-------
 JONES
 JoneS
 jOnes
(3 rows)

explain (costs false) select c1 from testing4 where c1 LIKE E'\_ones';
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Bitmap Heap Scan on testing4
   Filter: ((c1)::text ~~* '_ones'::text)
   ->  Bitmap Index Scan on c1_idxtesting49a168d73f3ba5aacdfd495b931b8d187
(3 rows)

select c1 from testing4 where c1 LIKE E'\%ones';
  c1   
-------
 JONES
 JoneS
 jOnes
(3 rows)

explain (costs false) select c1 from testing4 where c1 LIKE E'\%ones';
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Bitmap Heap Scan on testing4
   Filter: ((c1)::text ~~* '%ones'::text)
   ->  Bitmap Index Scan on c1_idxtesting49a168d73f3ba5aacdfd495b931b8d187
(3 rows)

-- wild card literals are transformed to equal
select c1 from testing4 where c1 LIKE '\%ones';
 c1 
----
(0 rows)

explain(costs false) select c1 from testing4 where c1 LIKE '\%ones';
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Bitmap Heap Scan on testing4
   Filter: ((c1)::text = '%ones'::text)
   ->  Bitmap Index Scan on c1_idxtesting49a168d73f3ba5aacdfd495b931b8d187
(3 rows)

select c1 from testing4 where c1 LIKE '\_ones';
 c1 
----
(0 rows)

explain(costs false) select c1 from testing4 where c1 LIKE '\_ones';
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Bitmap Heap Scan on testing4
   Filter: ((c1)::text = '_ones'::text)
   ->  Bitmap Index Scan on c1_idxtesting49a168d73f3ba5aacdfd495b931b8d187
(3 rows)

-- test combining with other string functions
select c1 from testing4 where c1 LIKE lower('_ones');
  c1   
-------
 JONES
 JoneS
 jOnes
(3 rows)

select c1 from testing4 where c1 LIKE upper('_ones');
  c1   
-------
 JONES
 JoneS
 jOnes
(3 rows)

select c1 from testing4 where c1 LIKE concat('_on','_s');
  c1   
-------
 JONES
 JoneS
 jOnes
(3 rows)

select c1 from testing4 where c1 LIKE concat('a','%d');
  c1  
------
 abcD
(1 row)

select c1 from testing4 where c1 NOT LIKE lower('%s');
  c1  
------
 abcD
 äbĆD
(2 rows)

-- test sub-queries
Select * from testing4 where c1 LIKE (select c1 from testing4 where c1 LIKE 'AbcD');
  c1  |          c2          |  c3  
------+----------------------+------
 abcD | AbcD                 | ABCd
(1 row)

Select * from testing4 where c2 NOT LIKE (select c2 from testing4 where c2 NOT LIKE 'jo%' AND c2 NOT LIKE 'ä%');
  c1   |          c2          |  c3   
-------+----------------------+-------
 JONES | JONES                | JONES
 JoneS | JoneS                | JoneS
 jOnes | jOnes                | jOnes
 äbĆD  | äḃcD                 | äƀCd
(4 rows)

Select * from testing4 where c3 LIKE (select c3 from testing4 where c3 NOT LIKE'jo%' AND c3 NOT LIKE 'ä%');
  c1  |          c2          |  c3  
------+----------------------+------
 abcD | AbcD                 | ABCd
(1 row)

with p1 as (select c1 from testing4 where c1 LIKE '__Ć_'),
p2 as (select c3 from testing4 where c3 LIKE 'äƀ__')
select * from p1 union all select * from p2;
  c1  
------
 äbĆD
 äƀCd
(2 rows)

-- test case expression
select c1,(case c1 LIKE 'j%' when true then 1 when false then 2 end) from testing4;
  c1   | case 
-------+------
 JONES |    1
 JoneS |    1
 jOnes |    1
 abcD  |    2
 äbĆD  |    2
(5 rows)

select c2,(case when c2 LIKE '_bc%' then 1 when c2 LIKE 'jon%' then 2 when c3 LIKE 'ä%' then 3 end) from testing4;
          c2          | case 
----------------------+------
 JONES                |    2
 JoneS                |    2
 jOnes                |    2
 AbcD                 |    1
 äḃcD                 |    3
(5 rows)

-- test that LIKE transformation is applied only for CI_AS column
create table testing5(c1 varchar(20) COLLATE SQL_Latin1_General_CP1_CS_AS);
insert into testing5 values ('JONES');
insert into testing5 values ('JoneS');
insert into testing5 values ('abcD');
insert into testing5 values ('äbĆD');
select * from testing5 where c1 LIKE 'jo%'; -- does not use the transformation
 c1 
----
(0 rows)

explain(costs false) select * from testing5 where c1 LIKE 'jo%';
              QUERY PLAN               
---------------------------------------
 Seq Scan on testing5
   Filter: ((c1)::text ~~ 'jo%'::text)
(2 rows)

select * from testing5 where c1 NOT LIKE 'j%';
  c1   
-------
 JONES
 JoneS
 abcD
 äbĆD
(4 rows)

select * from testing5 where c1 LIKE 'AB%';
 c1 
----
(0 rows)

-- test explicitly specify collation as CI_AS, like transformation is also applied.
SELECT 'JONES' like 'jo%';
 ?column? 
----------
 t
(1 row)

SELECT 'JONES' COLLATE SQL_Latin1_General_CP1_CI_AS like 'jo%' ;
 ?column? 
----------
 t
(1 row)

-- test when pattern is empty string or NULL
SELECT 'JONES' like '';
 ?column? 
----------
 f
(1 row)

SELECT 'JONES' like NULL;
 ?column? 
----------
 
(1 row)

SELECT * from testing5 where c1 like '';
 c1 
----
(0 rows)

explain (costs false) SELECT * from testing5 where c1 like '';
             QUERY PLAN             
------------------------------------
 Seq Scan on testing5
   Filter: ((c1)::text ~~ ''::text)
(2 rows)

SELECT * from testing5 where c1 like NULL;
 c1 
----
(0 rows)

explain (costs false) SELECT * from testing5 where c1 like NULL;
        QUERY PLAN        
--------------------------
 Result
   One-Time Filter: false
(2 rows)

SELECT * FROM testing5 where c1 COLLATE French_CI_AS like 'jo%' ;
  c1   
-------
 JONES
 JoneS
(2 rows)

explain (costs false) SELECT * FROM testing5 where c1 COLLATE French_CI_AS like 'jo%' ;
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Seq Scan on testing5
   Filter: (((c1)::text ~~* 'jo%'::text) AND ((c1)::text >= 'jo'::text) AND ((c1)::text < 'jo￿'::text))
(2 rows)

SELECT * FROM testing5 where c1 COLLATE Chinese_PRC_CI_AS like 'jo%' ;
  c1   
-------
 JONES
 JoneS
(2 rows)

explain (costs false) SELECT * FROM testing5 where c1 COLLATE Chinese_PRC_CI_AS like 'jo%' ;
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Seq Scan on testing5
   Filter: (((c1)::text ~~* 'jo%'::text) AND ((c1)::text >= 'jo'::text) AND ((c1)::text < 'jo￿'::text))
(2 rows)

-- tsql collations
alter table testing1 alter column col nvarchar(60) collate Arabic_CS_AS;
alter table testing1 alter column col nvarchar(60) collate Chinese_PRC_CS_AS;
alter table testing1 alter column col nvarchar(60) collate Cyrillic_General_CS_AS;
alter table testing1 alter column col nvarchar(60) collate French_CS_AS;
alter table testing1 alter column col nvarchar(60) collate Korean_Wansung_CS_AS;
alter table testing1 alter column col nvarchar(60) collate Traditional_Spanish_CS_AS;
alter table testing1 alter column col nvarchar(60) collate Modern_Spanish_CS_AS;
alter table testing1 alter column col nvarchar(60) collate SQL_Latin1_General_CP1_CS_AS;
alter table testing1 alter column col nvarchar(60) collate SQL_Latin1_General_CP1_CI_AS;
alter table testing1 alter column col nvarchar(60) collate Traditional_Spanish_CS_AS;
alter table testing1 alter column col nvarchar(60) collate Thai_CS_AS;
alter table testing1 alter column col nvarchar(60) collate Turkish_CS_AS;
alter table testing1 alter column col nvarchar(60) collate Ukrainian_CS_AS;
alter table testing1 alter column col nvarchar(60) collate Vietnamese_CS_AS;
alter table testing1 alter column col nvarchar(60) collate Finnish_Swedish_CS_AS;
-- expect different result order from previous select
select * from testing1 order by col;
    col     
------------
 Magic
 Muffler
 MX Systems
 Mülle
(4 rows)

-- test expression level collate, expect the same result order
select * from testing1 order by col collate Finnish_Swedish_CS_AS;
    col     
------------
 Magic
 Muffler
 MX Systems
 Mülle
(4 rows)

-- test catalog
select * from sys.fn_helpcollations();
               name                |                                                             description                                                             
-----------------------------------+-------------------------------------------------------------------------------------------------------------------------------------
 arabic_cs_as                      | Arabic, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 arabic_ci_ai                      | Arabic, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 arabic_ci_as                      | Arabic, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_bin2                  | Unicode-General, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1250_ci_ai          | Default locale, code page 1250, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1250_ci_as          | Default locale, code page 1250, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1250_cs_ai          | Default locale, code page 1250, case-sensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1250_cs_as          | Default locale, code page 1250, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_pref_cp1250_cs_as     | Default locale, code page 1250, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive, uppercase-first
 bbf_unicode_cp1251_ci_ai          | Default locale, code page 1251, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1251_ci_as          | Default locale, code page 1251, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1251_cs_ai          | Default locale, code page 1251, case-sensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1251_cs_as          | Default locale, code page 1251, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_pref_cp1251_cs_as     | Default locale, code page 1251, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive, uppercase-first
 bbf_unicode_cp1253_ci_ai          | Default locale, code page 1253, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1253_ci_as          | Default locale, code page 1253, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1253_cs_ai          | Default locale, code page 1253, case-sensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1253_cs_as          | Default locale, code page 1253, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_pref_cp1253_cs_as     | Default locale, code page 1253, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive, uppercase-first
 bbf_unicode_cp1254_ci_ai          | Default locale, code page 1254, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1254_ci_as          | Default locale, code page 1254, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1254_cs_ai          | Default locale, code page 1254, case-sensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1254_cs_as          | Default locale, code page 1254, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_pref_cp1254_cs_as     | Default locale, code page 1254, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive, uppercase-first
 bbf_unicode_cp1255_ci_ai          | Default locale, code page 1255, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1255_ci_as          | Default locale, code page 1255, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1255_cs_ai          | Default locale, code page 1255, case-sensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1255_cs_as          | Default locale, code page 1255, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_pref_cp1255_cs_as     | Default locale, code page 1255, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive, uppercase-first
 bbf_unicode_cp1256_ci_ai          | Default locale, code page 1256, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1256_ci_as          | Default locale, code page 1256, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1256_cs_ai          | Default locale, code page 1256, case-sensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1256_cs_as          | Default locale, code page 1256, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_pref_cp1256_cs_as     | Default locale, code page 1256, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive, uppercase-first
 bbf_unicode_cp1257_ci_ai          | Default locale, code page 1257, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1257_ci_as          | Default locale, code page 1257, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1257_cs_ai          | Default locale, code page 1257, case-sensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1257_cs_as          | Default locale, code page 1257, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_pref_cp1257_cs_as     | Default locale, code page 1257, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive, uppercase-first
 bbf_unicode_cp1258_ci_ai          | Default locale, code page 1258, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1258_ci_as          | Default locale, code page 1258, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1258_cs_ai          | Default locale, code page 1258, case-sensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1258_cs_as          | Default locale, code page 1258, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_pref_cp1258_cs_as     | Default locale, code page 1258, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive, uppercase-first
 bbf_unicode_cp1_ci_ai             | Default locale, code page 1252, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1_ci_as             | Default locale, code page 1252, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1_cs_ai             | Default locale, code page 1252, case-sensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp1_cs_as             | Default locale, code page 1252, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_pref_cp1_cs_as        | Default locale, code page 1252, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive, uppercase-first
 bbf_unicode_cp847_ci_ai           | Default locale, code page 847, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp847_ci_as           | Default locale, code page 847, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp847_cs_ai           | Default locale, code page 847, case-sensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_cp847_cs_as           | Default locale, code page 847, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_pref_cp847_cs_as      | Default locale, code page 847, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive, uppercase-first
 bbf_unicode_general_ci_ai         | Default locale, default code page, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_general_ci_as         | Default locale, default code page, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_general_cs_ai         | Default locale, default code page, case-sensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_general_cs_as         | Default locale, default code page, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 bbf_unicode_general_pref_cs_as    | Default locale, default code page, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive, uppercase-first
 chinese_prc_cs_as                 | Chinese-PRC, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 chinese_prc_ci_ai                 | Chinese-PRC, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 chinese_prc_ci_as                 | Chinese-PRC, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 cyrillic_general_cs_as            | Cyrillic-General, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 cyrillic_general_ci_ai            | Cyrillic-General, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 cyrillic_general_ci_as            | Cyrillic-General, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 finnish_swedish_cs_as             | Finnish-Swedish, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 finnish_swedish_ci_as             | Finnish-Swedish, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 finnish_swedish_ci_ai             | Finnish-Swedish, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 french_cs_as                      | French, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 french_ci_as                      | French, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 french_ci_ai                      | French, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 korean_wansung_cs_as              | Korean-Wansung, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 korean_wansung_ci_as              | Korean-Wansung, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 korean_wansung_ci_ai              | Korean-Wansung, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 latin1_general_bin2               | Virtual, Unicode-General, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 latin1_general_90_bin2            | Virtual, Unicode-General, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 latin1_general_100_bin2           | Virtual, Unicode-General, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 latin1_general_140_bin2           | Virtual, Unicode-General, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 latin1_general_ci_ai              | Virtual, default locale, code page 1252, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 latin1_general_ci_as              | Virtual, default locale, code page 1252, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 latin1_general_cs_ai              | Virtual, default locale, code page 1252, case-sensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 latin1_general_cs_as              | Virtual, default locale, code page 1252, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 modern_spanish_cs_as              | Traditional-Spanish, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 modern_spanish_ci_as              | Traditional-Spanish, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 modern_spanish_ci_ai              | Traditional-Spanish, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 polish_cs_as                      | Polish, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 polish_ci_as                      | Polish, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 polish_ci_ai                      | Polish, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 sql_latin1_general_cp1250_ci_as   | Virtual, default locale, code page 1250, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 sql_latin1_general_cp1250_cs_as   | Virtual, default locale, code page 1250, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 sql_latin1_general_cp1251_ci_as   | Virtual, default locale, code page 1251, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 sql_latin1_general_cp1251_cs_as   | Virtual, default locale, code page 1251, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 sql_latin1_general_cp1_ci_ai      | Virtual, default locale, code page 1252, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 sql_latin1_general_cp1_ci_as      | Virtual, default locale, code page 1252, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 sql_latin1_general_cp1_ci_ai      | Virtual, default locale, code page 1252, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 sql_latin1_general_cp1_cs_as      | Virtual, default locale, code page 1252, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 sql_latin1_general_pref_cp1_cs_as | Virtual, default locale, code page 1252, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive, uppercase-first
 sql_latin1_general_cp1253_ci_as   | Virtual, default locale, code page 1253, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 sql_latin1_general_cp1253_cs_as   | Virtual, default locale, code page 1253, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 sql_latin1_general_cp1254_ci_as   | Virtual, default locale, code page 1254, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 sql_latin1_general_cp1254_cs_as   | Virtual, default locale, code page 1255, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 sql_latin1_general_cp1255_ci_as   | Virtual, default locale, code page 1255, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 sql_latin1_general_cp1255_cs_as   | Virtual, default locale, code page 1255, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 sql_latin1_general_cp1256_ci_as   | Virtual, default locale, code page 1256, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 sql_latin1_general_cp1256_cs_as   | Virtual, default locale, code page 1256, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 sql_latin1_general_cp1257_ci_as   | Virtual, default locale, code page 1257, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 sql_latin1_general_cp1257_cs_as   | Virtual, default locale, code page 1257, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 sql_latin1_general_cp1258_ci_as   | Virtual, default locale, code page 1258, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 sql_latin1_general_cp1258_cs_as   | Virtual, default locale, code page 1258, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 thai_cs_as                        | Thai, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 thai_ci_as                        | Thai, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 thai_ci_ai                        | Thai, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 traditional_spanish_cs_as         | Traditional-Spanish, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 traditional_spanish_ci_as         | Traditional-Spanish, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 traditional_spanish_ci_ai         | Traditional-Spanish, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 turkish_cs_as                     | Turkish, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 turkish_ci_as                     | Turkish, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 turkish_ci_ai                     | Turkish, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 ukrainian_cs_as                   | Ukrainian, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 ukrainian_ci_as                   | Ukrainian, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 ukrainian_ci_ai                   | Ukrainian, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
 vietnamese_cs_as                  | Vietnamese, case-sensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 vietnamese_ci_as                  | Vietnamese, case-insensitive, accent-sensitive, kanatype-insensitive, width-insensitive
 vietnamese_ci_ai                  | Vietnamese, case-insensitive, accent-insensitive, kanatype-insensitive, width-insensitive
(124 rows)

-- test the TYPE keyword is only required in postgres dialect, but not in tsql dialect
alter table testing1 alter column col varchar(60) collate Finnish_Swedish_CS_AS;
alter table testing1 alter column col TYPE varchar(60) collate Finnish_Swedish_CS_AS;
SELECT set_config('babelfishpg_tsql.sql_dialect', 'postgres', false);
 set_config 
------------
 postgres
(1 row)

alter table testing1 alter column col varchar(60) collate sys.Finnish_Swedish_CS_AS;
ERROR:  syntax error at or near "varchar"
LINE 1: alter table testing1 alter column col varchar(60) collate sy...
                                              ^
alter table testing1 alter column col TYPE varchar(60) collate sys.Finnish_Swedish_CS_AS;
SELECT set_config('babelfishpg_tsql.sql_dialect', 'tsql', false);
 set_config 
------------
 tsql
(1 row)

-- test collation list sys table
SELECT collation_name, l1_priority, l2_priority, l3_priority, l4_priority, l5_priority FROM sys.babelfish_collation_list() order by collation_name;
         collation_name         | l1_priority | l2_priority | l3_priority | l4_priority | l5_priority 
--------------------------------+-------------+-------------+-------------+-------------+-------------
 arabic_ci_ai                   |        1025 |           0 |      196608 |           0 |          15
 arabic_ci_as                   |        1025 |           0 |      196608 |           0 |          13
 arabic_cs_as                   |        1025 |           0 |      196608 |           0 |          12
 bbf_unicode_bin2               |        1033 |           0 |      196608 |          54 |         544
 bbf_unicode_cp1250_ci_ai       |        1045 |           0 |      196608 |          54 |          15
 bbf_unicode_cp1250_ci_as       |        1045 |           0 |      196608 |          52 |          13
 bbf_unicode_cp1250_cs_ai       |        1045 |           0 |      196608 |          51 |          14
 bbf_unicode_cp1250_cs_as       |        1045 |           0 |      196608 |          51 |          12
 bbf_unicode_cp1251_ci_ai       |        1049 |           0 |      196608 |          54 |          15
 bbf_unicode_cp1251_ci_as       |        1049 |           0 |      196608 |          52 |          13
 bbf_unicode_cp1251_cs_ai       |        1049 |           0 |      196608 |          51 |          14
 bbf_unicode_cp1251_cs_as       |        1049 |           0 |      196608 |          51 |          12
 bbf_unicode_cp1253_ci_ai       |        1032 |           0 |      196608 |          54 |          15
 bbf_unicode_cp1253_ci_as       |        1032 |           0 |      196608 |          52 |          13
 bbf_unicode_cp1253_cs_ai       |        1032 |           0 |      196608 |          51 |          14
 bbf_unicode_cp1253_cs_as       |        1032 |           0 |      196608 |          51 |          12
 bbf_unicode_cp1254_ci_ai       |        1055 |           0 |      196608 |          54 |          15
 bbf_unicode_cp1254_ci_as       |        1055 |           0 |      196608 |          52 |          13
 bbf_unicode_cp1254_cs_ai       |        1055 |           0 |      196608 |          51 |          14
 bbf_unicode_cp1254_cs_as       |        1055 |           0 |      196608 |          51 |          12
 bbf_unicode_cp1255_ci_ai       |        1037 |           0 |      196608 |          54 |          15
 bbf_unicode_cp1255_ci_as       |        1037 |           0 |      196608 |          52 |          13
 bbf_unicode_cp1255_cs_ai       |        1037 |           0 |      196608 |          51 |          14
 bbf_unicode_cp1255_cs_as       |        1037 |           0 |      196608 |          51 |          12
 bbf_unicode_cp1256_ci_ai       |        1025 |           0 |      196608 |          54 |          15
 bbf_unicode_cp1256_ci_as       |        1025 |           0 |      196608 |          52 |          13
 bbf_unicode_cp1256_cs_ai       |        1025 |           0 |      196608 |          51 |          14
 bbf_unicode_cp1256_cs_as       |        1025 |           0 |      196608 |          51 |          12
 bbf_unicode_cp1257_ci_ai       |        1061 |           0 |      196608 |          54 |          15
 bbf_unicode_cp1257_ci_as       |        1061 |           0 |      196608 |          52 |          13
 bbf_unicode_cp1257_cs_ai       |        1061 |           0 |      196608 |          51 |          14
 bbf_unicode_cp1257_cs_as       |        1061 |           0 |      196608 |          51 |          12
 bbf_unicode_cp1258_ci_ai       |        1066 |           0 |      196608 |          54 |          15
 bbf_unicode_cp1258_ci_as       |        1066 |           0 |      196608 |          52 |          13
 bbf_unicode_cp1258_cs_ai       |        1066 |           0 |      196608 |          51 |          14
 bbf_unicode_cp1258_cs_as       |        1066 |           0 |      196608 |          51 |          12
 bbf_unicode_cp1_ci_ai          |        1033 |           0 |      196608 |          54 |          15
 bbf_unicode_cp1_ci_as          |        1033 |           0 |      196608 |          52 |          13
 bbf_unicode_cp1_cs_ai          |        1033 |           0 |      196608 |          51 |          14
 bbf_unicode_cp1_cs_as          |        1033 |           0 |      196608 |          51 |          12
 bbf_unicode_cp874_ci_ai        |        1054 |           0 |      196608 |          54 |          15
 bbf_unicode_cp874_ci_as        |        1054 |           0 |      196608 |          52 |          13
 bbf_unicode_cp874_cs_ai        |        1054 |           0 |      196608 |          51 |          14
 bbf_unicode_cp874_cs_as        |        1054 |           0 |      196608 |          51 |          12
 bbf_unicode_general_ci_ai      |        1033 |           0 |      196608 |          54 |          15
 bbf_unicode_general_ci_as      |        1033 |           0 |      196608 |          52 |          13
 bbf_unicode_general_cs_ai      |        1033 |           0 |      196608 |          51 |          14
 bbf_unicode_general_cs_as      |        1033 |           0 |      196608 |          51 |          12
 bbf_unicode_general_pref_cs_as |        1033 |           0 |      196608 |          51 |          12
 bbf_unicode_pref_cp1250_cs_as  |        1045 |           0 |      196608 |          51 |          12
 bbf_unicode_pref_cp1251_cs_as  |        1049 |           0 |      196608 |          51 |          12
 bbf_unicode_pref_cp1253_cs_as  |        1032 |           0 |      196608 |          51 |          12
 bbf_unicode_pref_cp1254_cs_as  |        1055 |           0 |      196608 |          51 |          12
 bbf_unicode_pref_cp1255_cs_as  |        1037 |           0 |      196608 |          51 |          12
 bbf_unicode_pref_cp1256_cs_as  |        1025 |           0 |      196608 |          51 |          12
 bbf_unicode_pref_cp1257_cs_as  |        1061 |           0 |      196608 |          51 |          12
 bbf_unicode_pref_cp1258_cs_as  |        1066 |           0 |      196608 |          51 |          12
 bbf_unicode_pref_cp1_cs_as     |        1033 |           0 |      196608 |          51 |          12
 bbf_unicode_pref_cp874_cs_as   |        1054 |           0 |      196608 |          51 |          12
 chinese_prc_ci_ai              |        2052 |           0 |      196608 |           0 |          15
 chinese_prc_ci_as              |        2052 |           0 |      196608 |           0 |          13
 chinese_prc_cs_as              |        2052 |           0 |      196608 |           0 |          12
 cyrillic_general_ci_ai         |        1049 |           0 |      196608 |           0 |          15
 cyrillic_general_ci_as         |        1049 |           0 |      196608 |           0 |          13
 cyrillic_general_cs_as         |        1049 |           0 |      196608 |           0 |          12
 estonian_ci_ai                 |        1061 |           0 |      196608 |           0 |          15
 estonian_ci_as                 |        1061 |           0 |      196608 |           0 |          13
 estonian_cs_as                 |        1061 |           0 |      196608 |           0 |          12
 finnish_swedish_ci_ai          |        1035 |           0 |      196608 |           0 |          15
 finnish_swedish_ci_as          |        1035 |           0 |      196608 |           0 |          13
 finnish_swedish_cs_as          |        1035 |           0 |      196608 |           0 |          12
 french_ci_ai                   |        1036 |           0 |      196608 |           0 |          15
 french_ci_as                   |        1036 |           0 |      196608 |           0 |          13
 french_cs_as                   |        1036 |           0 |      196608 |           0 |          12
 greek_ci_ai                    |        1032 |           0 |      196608 |           0 |          15
 greek_ci_as                    |        1032 |           0 |      196608 |           0 |          13
 greek_cs_as                    |        1032 |           0 |      196608 |           0 |          12
 hebrew_ci_ai                   |        1037 |           0 |      196608 |           0 |          15
 hebrew_ci_as                   |        1037 |           0 |      196608 |           0 |          13
 hebrew_cs_as                   |        1037 |           0 |      196608 |           0 |          12
 korean_wansung_ci_ai           |        1042 |           0 |      196608 |           0 |          15
 korean_wansung_ci_as           |        1042 |           0 |      196608 |           0 |          13
 korean_wansung_cs_as           |        1042 |           0 |      196608 |           0 |          12
 modern_spanish_ci_ai           |        3082 |           0 |      196608 |           0 |          15
 modern_spanish_ci_as           |        3082 |           0 |      196608 |           0 |          13
 modern_spanish_cs_as           |        3082 |           0 |      196608 |           0 |          12
 mongolian_ci_ai                |        1104 |           0 |      196608 |           0 |          15
 mongolian_ci_as                |        1104 |           0 |      196608 |          52 |          13
 mongolian_cs_as                |        1104 |           0 |      196608 |          51 |          12
 polish_ci_ai                   |        1045 |           0 |      196608 |           0 |          15
 polish_ci_as                   |        1045 |           0 |      196608 |           0 |          13
 polish_cs_as                   |        1045 |           0 |      196608 |           0 |          12
 thai_ci_ai                     |        1054 |           0 |      196608 |           0 |          15
 thai_ci_as                     |        1054 |           0 |      196608 |           0 |          13
 thai_cs_as                     |        1054 |           0 |      196608 |           0 |          12
 traditional_spanish_ci_ai      |        1034 |           0 |      196608 |           0 |          15
 traditional_spanish_ci_as      |        1034 |           0 |      196608 |           0 |          13
 traditional_spanish_cs_as      |        1034 |           0 |      196608 |           0 |          12
 turkish_ci_ai                  |        1055 |           0 |      196608 |           0 |          15
 turkish_ci_as                  |        1055 |           0 |      196608 |           0 |          13
 turkish_cs_as                  |        1055 |           0 |      196608 |           0 |          12
 ukrainian_ci_ai                |        1058 |           0 |      196608 |           0 |          15
 ukrainian_ci_as                |        1058 |           0 |      196608 |           0 |          13
 ukrainian_cs_as                |        1058 |           0 |      196608 |           0 |          12
 vietnamese_ci_ai               |        1066 |           0 |      196608 |           0 |          15
 vietnamese_ci_as               |        1066 |           0 |      196608 |           0 |          13
 vietnamese_cs_as               |        1066 |           0 |      196608 |           0 |          12
(107 rows)

-- clean up
drop table testing1;
drop table testing2;
drop table testing3;
drop table testing4;
drop table testing5;
