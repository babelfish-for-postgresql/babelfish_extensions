# Schedule file for JDBC Test Framework running with jTDS driver instead of
# mssql-jdbc driver. When 'useJTDSInsteadOfMSSQLJDBC' config option is set to
# 'true' this file is used instead of 'jdbc_schedule' file.

# datatypes
TestInt
TestSmallInt
# Failure: Message: Data truncation
# TestTinyInt
TestBigInt
TestBIT
# Failure: discrepancy in jTDS behaviour between MSSQL and Babelfish
# TestDecimal
TestNumeric
TestMoney
TestFloat
TestReal
# jTDS reports out of range error on stmt.execute() instead of rs.next()
# thus columns headers are not printed on error.
jtds-TestDatetime
# jTDS date handling differs with mssql-jdbc, behavior on MSSQL and Babelfish is the same
jtds-TestDate
# Failure: jTDS behaviour differs from mssql-jdbc on both MSSQL and Babelfish in different way
# TestDatetime2
TestSmallDatetime
# Failure: jTDS behaviour differs from mssql-jdbc on both MSSQL and Babelfish in different way
# TestTime
# Failure: FATAL:  UTF16 output of varchar/bpchar exceeds max length
# TestDatetimeoffset-vu-prepare
# TestDatetimeoffset-vu-verify
# TestDatetimeoffset-vu-cleanup
# java.lang.StringIndexOutOfBoundsException: offset 0, count -17238, length 255
# TestVarChar
# Failures: stmt.setCharacterStream() is not supported in jTDS
# TestText
TestChar
TestBinary
TestImage-vu-prepare
TestImage-vu-verify
TestImage-vu-cleanup
# Failure: Message: Data truncation
# TestSQLVariant-vu-prepare
# TestSQLVariant-vu-verify
# TestSQLVariant-vu-cleanup
# Failure: conn.createSQLXML() is not supported in jTDS
# TestXML
# Failure: select output differs on jTDS
# TestTableType-vu-prepare
# TestTableType-vu-verify
# TestTableType-vu-cleanup
TestUniqueIdentifier

# sqlBatch
# jTDS reports column type as nvarchar instead of date, behavior on MSSQL and Babelfish is the same
jtds-TestSQLQueries

# errorHandling
# When error happens in a batch that contains DML operations, then in mssql-jdbc stmt.execute() returns
# successfully, number of updated rows can be read from stmt.getUpdateCount() and the Exception is thrown
# on stmt.getMoreResults() only after all successful update counts are read.
# Unlike this, in jTDS the Exception is thrown on stmt.execute() and then, if it is caught anf handled,
# update counts can be read with stmt.getUpdateCount().
jtds-TestSimpleErrors
# When "Uncommittable transaction is detected at the end of the batch" error happens,
# in mssql-jdbc stmt.execute() returns successfully, then all update counts and result sets
# can be read and the Exception is thrown on stmt.getMoreResults().
# In jTDS stmt.execute() also returns successfully and updated counts and result sets also
# can be read, but the Exception id thrown when rs.next() is called on last available result set
# after all the records are read.
jtds-TestErrorsWithTryCatch

# storedProcedures
# jTDS reports column type as nvarchar instead of date, behavior on MSSQL and Babelfish is the same
jtds-TestStoredProcedures

# cursors
# Failure: The CLOSE_CURSORS_AT_COMMIT option is not currently supported by the setHoldability method
# TestCursorFetchNext
# Failure: The CLOSE_CURSORS_AT_COMMIT option is not currently supported by the setHoldability method
# TestCursorPrepExecFetchNext

# transactions
TestTransactionsSQLBatch
# See comment to TestSimpleErrors above
jtds-TestTransactionSupportForProcedure

# temporary
jtds-varchar-max-length-check
jtds-nvarchar-max-length-check
jtds-nvarchar-max-length-check2
