-- single_db_mode_expected
-- tsql
USE MASTER;
GO

CREATE SCHEMA myschema;
GO

CREATE TABLE dbo.master_t1 (id int identity, a int);
GO

CREATE PROCEDURE dbo.master_p1
AS
SELECT a FROM dbo.master_t1;
GO

CREATE TABLE myschema.tab1( a int);
GO
 
CREATE PROCEDURE myschema.proc1
AS
INSERT INTO tab1 values(1);
SELECT * from tab1;
GO

CREATE PROCEDURE myschema.proc2
AS
CREATE TABLE tab1(a int, b int);
GO

CREATE PROCEDURE dbo.master_p2
AS
SELECT 1;
GO

CREATE PROCEDURE dbo.master_p3
AS
SELECT 1/0;
GO

CREATE DATABASE db1;
GO

USE db1;
GO

SELECT current_user;
GO

INSERT INTO master.dbo.master_t1 VALUES (10);
GO

SELECT * FROM master.dbo.master_t1 ORDER BY id;
GO

SELECT * FROM master..master_t1 ORDER BY id;
GO

EXEC master.dbo.master_p1
GO

master.dbo.master_p1
GO

EXEC master.dbo.master_p2
GO

-- tab1 resolves to master.myschema.tab1
EXEC master.myschema.proc1
GO

-- tab1 resolves to master.dbo.tab1
EXEC master.myschema.proc2
GO

SELECT * from master.dbo.tab1;
GO

-- runtime error
EXEC master.dbo.master_p3
GO

EXEC master..master_p2
GO

UPDATE master.dbo.master_t1
SET a = 11
WHERE id = 1;
GO

SELECT * FROM master.dbo.master_t1 ORDER BY id;
GO

DELETE FROM master.dbo.master_t1
WHERE id = 1;
GO

SELECT * FROM master.dbo.master_t1 ORDER BY id;
GO

SELECT current_user;
GO

CREATE PROCEDURE p1
AS
INSERT INTO master.dbo.master_t1 VALUES (10);
GO

EXEC p1;
GO

EXEC p1;
GO

EXEC p1;
GO

CREATE TABLE dbo.db1_t1 (a int);
GO

INSERT INTO dbo.db1_t1 (a)
SELECT (a) FROM master.dbo.master_t1;
GO

INSERT INTO dbo.db1_t1 (a)
OUTPUT inserted.a INTO master.dbo.master_t1 (a)
VALUES (30);
GO

-- Expect an error
INSERT INTO dbo.db1_t1 (a)
EXECUTE master.dbo.master_p1;
GO

EXECUTE master.dbo.master_p1;
GO

SELECT current_user;
GO

CREATE TABLE dbo.db1_t2 (a int);
GO

INSERT INTO dbo.db1_t2 VALUES (20);
GO

INSERT INTO master.dbo.master_t1 (a)
SELECT (a) FROM db1_t2;
GO

SELECT * FROM master.dbo.master_t1 ORDER BY id;
GO

USE MASTER;
GO

--tsql
USE MASTER;
GO

CREATE LOGIN johndoe WITH PASSWORD = '12345678';
GO

CREATE USER master_janedoe FOR LOGIN johndoe;
GO

USE db1;
GO

CREATE USER db1_janedoe FOR LOGIN johndoe;
GO

-- tsql    user=johndoe    password=12345678
USE MASTER;
GO

SELECT current_user;
GO

SELECT * FROM db1.dbo.db1_t1 ORDER BY a;
GO

USE db1;
GO

EXEC master.dbo.master_p2
GO

SELECT current_user;
GO

SELECT * FROM master.dbo.master_t1 ORDER BY id;
GO

-- tsql
USE MASTER;
GO

GRANT SELECT ON dbo.master_t1 TO master_janedoe;
GO

GRANT EXECUTE ON dbo.master_p2 TO master_janedoe;
GO

USE db1;
GO

GRANT SELECT ON dbo.db1_t1 TO db1_janedoe;
GO

-- tsql user=johndoe password=12345678
USE MASTER;
GO

USE db1;
GO

EXEC master.dbo.master_p2
GO

SELECT * FROM master.dbo.master_t1 ORDER BY id;
GO

USE master;
GO

-- tsql
USE db1;
GO

REVOKE SELECT ON dbo.db1_t1 FROM db1_janedoe;
GO

USE MASTER;
GO

DROP DATABASE db1;
GO

DROP TABLE dbo.master_t1;
GO

DROP PROC dbo.master_p1;
GO

DROP PROC dbo.master_p2;
GO

DROP PROC dbo.master_p3;
GO

DROP PROC myschema.proc1;
GO

DROP PROC myschema.proc2;
go

DROP TABLE tab1;
go

DROP TABLE myschema.tab1;
GO

DROP SCHEMA myschema;
GO

DROP USER master_janedoe;
GO

-- psql

-- Need to terminate active session before cleaning up the login
SELECT pg_terminate_backend(pid) FROM pg_stat_get_activity(NULL) 
WHERE sys.suser_name(usesysid) = 'johndoe' AND backend_type = 'client backend' AND usesysid IS NOT NULL;
GO
-- Wait to sync with another session
SELECT pg_sleep(1);
GO

-- tsql
DROP LOGIN johndoe;
GO

-- tsql
USE master;
GO

CREATE DATABASE db1;
GO

CREATE DATABASE db2;
GO

USE db1;
GO

CREATE PROCEDURE p1
AS
EXEC('USE db1');
SELECT 10;
GO

CREATE TABLE dbo.db1_t1 (id int identity, a int);
GO

USE db2;
GO

INSERT INTO db1.dbo.db1_t1 (a) VALUES (10);
GO

CREATE PROCEDURE p1
AS
INSERT INTO db1.dbo.db1_t1 VALUES (1);
GO

EXEC p1;
GO

EXEC p1;
GO

CREATE TABLE dbo.db2_t1 (b int);
GO

INSERT INTO dbo.db2_t1 (b)
SELECT a FROM db1.dbo.db1_t1
WHERE id = 1;
GO

SELECT * FROM dbo.db2_t1 ORDER BY b;
GO

EXEC db1.dbo.p1;
GO

DROP PROCEDURE p1
GO

-- tsql
USE db1;
GO

DROP TABLE db1_t1;
GO

USE master;
GO

DROP DATABASE db1;
GO

DROP DATABASE db2;
GO

-- BABEL-4934 Test blocking cross-db SELECT-INTO statement
CREATE DATABASE db_4934_1;
GO

CREATE DATABASE db_4934_2;
GO

USE master;
GO

CREATE TABLE t1(a int);
GO

CREATE TABLE t2(b int);
GO

USE db_4934_1;
GO

CREATE TABLE t1(a int);
GO

CREATE TABLE t2(b int);
GO

USE db_4934_2;
GO

CREATE TABLE t1(a int);
GO

CREATE TABLE t2(b int);
GO

USE db_4934_1;
GO

-- #4934.1 It should be blocked
SELECT * INTO t222 FROM master.dbo.t1; 
GO

SELECT * INTO t222 FROM master..t1;
GO

SELECT * INTO t222 FROM db_4934_2..t1;
GO

SELECT * INTO t222 FROM db_4934_2.dbo.t1;
GO

SELECT * INTO t222 FROM db_4934_2..t1, t1;
GO

SELECT * INTO t222 FROM t1, db_4934_1..t2;
GO

SELECT * INTO t222 FROM master..t1, db_4934_2..t1;
GO

SELECT * INTO t222 FROM (SELECT * FROM master..t1);
GO

SELECT * INTO t222 FROM (SELECT * FROM t1, master..t1);
GO

SELECT * INTO t222 FROM (SELECT *, (SELECT * FROM master..t1) FROM t1);
GO

SELECT * INTO t222 FROM (SELECT *, (SELECT * FROM t1) FROM master..t3);
GO

SELECT * INTO master..t222 FROM db_4934_2..t1;
GO

SELECT * INTO db_4934_1..t222 FROM db_4934_2..t1;
GO

SELECT * INTO master..t222 FROM master..t1;
GO

-- #4934.2 Following statements will succeed across same database
SELECT * INTO t3 FROM db_4934_1.dbo.t1;
GO

SELECT * INTO t4 FROM dbo.t1;
GO

SELECT * INTO t5 FROM db_4934_1..t1;
GO

SELECT * INTO t6 FROM db_4934_1..t1, db_4934_1..t2;
GO

SELECT * INTO t7 FROM (SELECT * FROM db_4934_1..t1);
GO

SELECT * INTO t8 FROM (SELECT *, (SELECT * FROM db_4934_1..t2) FROM db_4934_1..t1);
GO

-- validate the access
SELECT * FROM t3, t4, t5, t6, t7, t8;
GO

DROP TABLE t3, t4, t5, t6, t7, t8;
GO

-- #4934.3 Temporary table should not be blocked
SELECT * INTO #t1 FROM db_4934_1.dbo.t1;
GO

SELECT * INTO #t2 FROM (SELECT * FROM db_4934_1.dbo.t1);
GO

-- validate the access
SELECT * FROM #t1, #t2;
GO

DROP TABLE #t1, #t2;
GO

-- Even though this is same as above statement, this will still fail since
-- internally it considers as cross-db statement (This behaviour is general to
-- all of the applicable DMLs)
SELECT * INTO tempdb..#t3 FROM db_4934_1.dbo.t1;
GO


USE master;
GO

DROP TABLE t1, t2;
GO

DROP DATABASE db_4934_1;
GO

DROP DATABASE db_4934_2;
GO
