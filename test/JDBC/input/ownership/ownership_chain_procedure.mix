-- tsql
create database db3014;
go

use db3014;
go

create login la_3014 with password='123';
go

create user ownera_3014 for login la_3014;
go

create login lb_3014 with password='123';
go

create user ownerb_3014 for login lb_3014;
go

create login invoker_3014 with password='123';
go

create user invoker_3014 for login invoker_3014;
go

use master
go

-- psql
do
$$
declare username text;
begin
  SELECT rolname INTO username FROM sys.babelfish_authid_user_ext WHERE orig_username like '%ownera%';
  EXECUTE format('grant all on database jdbc_testdb to %I', username);
end;
$$
go

do
$$
declare username text;
begin
  SELECT rolname INTO username FROM sys.babelfish_authid_user_ext WHERE orig_username like '%ownerb%';
  EXECUTE format('grant all on database jdbc_testdb to %I', username);
end;
$$
go

-- tsql user=lb_3014 password=123
use db3014;
go

create schema hasownerb_3014;
go

create table hasownerb_3014.tbld_3014(a int, b int, c int);
go

insert into hasownerb_3014.tbld_3014 values(1, 1, 1);
go

create view hasownerb_3014.vwd_3014 as select current_user;
go

create proc hasownerb_3014.procd_3014 as select current_user;
go

create function hasownerb_3014.funcd_3014() returns sys.nvarchar(30) as
begin
	return 'inside function funcd_3014';
end;
go

-- tsql user=la_3014 password=123
use db3014;
go

create schema hasownera_3014;
go

create table hasownera_3014.tbls_3014(a int, b int, c int);
go

insert into hasownera_3014.tbls_3014 values(1, 1, 1);
go

create view hasownera_3014.vws_3014 as select current_user;
go

create proc hasownera_3014.procs_3014 as select current_user;
go

create function hasownera_3014.funcs_3014() returns sys.nvarchar(30) as
begin
	return 'inside function funcs_3014';
end;
go

-- create trigger hasownera_3014.trigs
-- on hasownera.tbls_3014
-- after insert
-- as select 'inside trigger trigs';
-- go

-- CASE 1
-- PROC/FUNC
-- 		SELECT/EXEC ON TABLE/VIEW/PROC/FUNC/TRIGGER
-- END
-- EXEC PROC/FUNC

-- Positive test for procedure
create proc hasownera_3014.pa1_3014 as
	select * from hasownera_3014.tbls_3014;
	select * from hasownera_3014.vws_3014;
	exec hasownera_3014.procs_3014;
	select hasownera_3014.funcs_3014();
	-- For trigger execution
	-- insert into hasownera_3014.tbls_3014 values(1,1,1);
go

grant exec on hasownera_3014.pa1_3014 to invoker_3014;
go

-- Positive test for function
create function hasownera_3014.fa1_3014() returns table as
return (select * from hasownera_3014.tbls_3014, hasownera_3014.vws_3014);
go

grant exec on hasownera_3014.fa1_3014 to invoker_3014;
go

create function hasownera_3014.fb1_3014() returns table as
return (select hasownera_3014.funcs_3014());
go

grant exec on hasownera_3014.fb1_3014 to invoker_3014;
go

create function hasownera_3014.fc1_3014() returns int
as
begin
	declare @temp_fb1 table(cur_user sys.sysname);
	insert into @temp_fb1 (cur_user) exec hasownera_3014.procs_3014;
	return (select count(*) from @temp_fb1);
end
go

grant exec on hasownera_3014.fc1_3014 to invoker_3014;
go

-- Negative test for table inside proc/func
create proc hasownera_3014.pb1_3014 as select * from hasownerb_3014.tbld_3014;
go

grant exec on hasownera_3014.pb1_3014 to invoker_3014;
go

-- Negative test for view inside proc/func
create proc hasownera_3014.pc1_3014 as select * from hasownerb_3014.vwd_3014;
go

grant exec on hasownera_3014.pc1_3014 to invoker_3014;
go

create function hasownera_3014.fe1_3014() returns table as
return (select * from hasownerb_3014.tbld_3014, hasownerb_3014.vwd_3014);
go

grant exec on hasownera_3014.fe1_3014 to invoker_3014;
go

-- Negative test for proc inside proc/func
create proc hasownera_3014.pd1_3014 as exec hasownerb_3014.procd_3014;
go

grant exec on hasownera_3014.pd1_3014 to invoker_3014;
go

create function hasownera_3014.ff1_3014() returns int
as
begin
	declare @temp_ff1 table(cur_user sys.sysname);
	insert into @temp_ff1 (cur_user) exec hasownerb_3014.procd_3014;
	return (select count(*) from @temp_ff1);
end
go

grant exec on hasownera_3014.ff1_3014 to invoker_3014;
go

-- Negative test for function inside proc/func
create proc hasownera_3014.pe1_3014 as select hasownerb_3014.funcd_3014();
go

grant exec on hasownera_3014.pe1_3014 to invoker_3014;
go

create function hasownera_3014.fg1_3014() returns table as
return (select hasownerb_3014.funcd_3014());
go

grant exec on hasownera_3014.fg1_3014 to invoker_3014;
go

-- tsql user=invoker_3014 password=123
use db3014;
go

select * from hasownera_3014.tbls_3014;
go

select * from hasownera_3014.vws_3014;
go

exec hasownera_3014.procs_3014;
go

select * from hasownera_3014.fa1_3014();
go

select * from hasownera_3014.fb1_3014();
go

select hasownera_3014.fc1_3014();
go

exec hasownera_3014.pa1_3014;
go

-- Execution using SP_PREPARE
DECLARE @handle int;
EXEC SP_PREPARE @handle OUT, NULL, 'EXEC hasownera_3014.pa1_3014;'
EXEC SP_EXECUTE @handle
EXEC SP_EXECUTE @handle
EXEC SP_EXECUTE @handle
EXEC SP_UNPREPARE @handle
GO

DECLARE @handle int;
EXEC SP_PREPARE @handle OUT, NULL, 'SELECT * from hasownera_3014.fa1_3014();'
EXEC SP_EXECUTE @handle
EXEC SP_EXECUTE @handle
EXEC SP_EXECUTE @handle
EXEC SP_UNPREPARE @handle
GO

-- Execution for negative tests
exec hasownera_3014.pb1_3014;
go

exec hasownera_3014.pc1_3014;
go

exec hasownera_3014.pd1_3014;
go

exec hasownera_3014.pe1_3014;
go

select * from hasownera_3014.fe1_3014();
go

select hasownera_3014.ff1_3014();
go

select * from hasownera_3014.fg1_3014();
go

-- tsql
use db3014;
go

drop proc hasownera_3014.pa1_3014, hasownera_3014.pb1_3014, hasownera_3014.pc1_3014, hasownera_3014.pd1_3014, hasownera_3014.pe1_3014;
go

drop function hasownera_3014.fa1_3014, hasownera_3014.fb1_3014, hasownera_3014.fc1_3014, hasownera_3014.fe1_3014, hasownera_3014.ff1_3014, hasownera_3014.fg1_3014;
go

use master;
go

-- CASE 2
-- PROC1 with ownerB
--		PROC2 with ownerA
--			SELECT ON TABLE/VIEW/PROC with ownerA
-- GRANT EXEC ON PROC1 to invoker
-- GRANT EXEC ON PROC2 to inovker
-- EXEC PROC1 

-- tsql user=la_3014 password=123
use db3014;
go

create proc hasownera_3014.pa2_3014 as begin
	select * from hasownera_3014.tbls_3014;
	select * from hasownera_3014.vws_3014;
	exec hasownera_3014.procs_3014;
end;
go

grant exec on hasownera_3014.pa2_3014 to invoker_3014;
go

-- tsql user=lb_3014 password=123
use db3014;
go

create proc hasownerb_3014.pb2_3014 as exec hasownera_3014.pa2_3014;
go

grant exec on hasownerb_3014.pb2_3014 to invoker_3014;
go

-- tsql user=invoker_3014 password=123
use db3014;
go

exec hasownerb_3014.pb2_3014;
go

-- tsql
use db3014;
go

drop proc hasownerb_3014.pb2_3014;
go

drop proc hasownera_3014.pa2_3014;
go

use master;
go

-- CASE 3
-- PROC->VIEW->VIEW->TABLE
-- PROCA
--	SELECT FROM VIEWB
-- VIEWB
-- 	SELECT FROM VIEWA
-- VIEWA
-- SELECT FROM TABLEA

-- tsql user=la_3014 password=123
use db3014;
go

create view hasownera_3014.vwa3_3014 as select * from hasownera_3014.tbls_3014;
go

create view hasownera_3014.vwb3_3014 as select * from hasownera_3014.vwa3_3014;
go

create proc hasownera_3014.pa3_3014 as begin
	select * from hasownera_3014.vwb3_3014;
end;
go

grant exec on hasownera_3014.pa3_3014 to invoker_3014;
go

-- tsql user=invoker_3014 password=123
use db3014;
go

exec hasownera_3014.pa3_3014;
go

select * from hasownera_3014.tbls_3014;
go

select * from hasownera_3014.vwa3_3014;
go

select * from hasownera_3014.vwb3_3014;
go

-- tsql
use db3014;
go

drop proc hasownera_3014.pa3_3014;
go

drop view hasownera_3014.vwb3_3014;
go

drop view hasownera_3014.vwa3_3014;
go

use master;
go

-- CASE 4
-- PROC/FUNC
--	EXEC(SELECT FROM TABLE)
-- ownership chain shouldn't work for this case
-- tsql user=la_3014 password=123
use db3014;
go

create proc hasownera_3014.pa4_3014 as begin
	exec('select * from hasownera_3014.tbls_3014');
end;
go

grant exec on hasownera_3014.pa4_3014 to invoker_3014;
go

-- tsql user=invoker_3014 password=123
use db3014;
go

exec hasownera_3014.pa4_3014;
go

-- tsql
use db3014;
go

drop proc hasownera_3014.pa4_3014;
go

use master;
go

-- CASE 5
-- PROC/FUNC
--	DDLs
-- ownership chain shouldn't work for this case
-- tsql user=la_3014 password=123
use db3014;
go

create proc hasownera_3014.pa5_3014 as begin
	alter table hasownera_3014.tbls_3014 add e int;
end;
go

grant exec on hasownera_3014.pa5_3014 to invoker_3014;
go

-- tsql user=invoker_3014 password=123
use db3014;
go

exec hasownera_3014.pa5_3014;
go

-- tsql
use db3014;
go

drop proc hasownera_3014.pa5_3014;
go

use master;
go

-- CASE 6
-- PROC/FUNC
--	 UPDATE/INSERT on specific columns
-- tsql user=la_3014 password=123
use db3014;
go

create table hasownera_3014.ta6_3014(a int, b int, c int);
go

grant update(a) on hasownera_3014.ta6_3014 to invoker_3014;
go

create proc hasownera_3014.pa6_3014 as begin
	update hasownera_3014.ta6_3014 set b = 0;
end;
go

grant exec on hasownera_3014.pa6_3014 to invoker_3014;
go

-- tsql user=invoker_3014 password=123
use db3014;
go

exec hasownera_3014.pa6_3014;
go

update hasownera_3014.ta6_3014 set b = 0;
go

-- tsql
use db3014;
go

drop proc hasownera_3014.pa6_3014;
go

drop table hasownera_3014.ta6_3014;
go

use master;
go

-- CASE 7
-- PROC/FUNC
--	TRUNCATE table
-- ownership chain shouldn't work for this case
-- tsql user=la_3014 password=123
use db3014;
go

create proc hasownera_3014.pa7_3014 as begin
	truncate table hasownera_3014.tbls_3014;
end;
go

grant exec on hasownera_3014.pa7_3014 to invoker_3014;
go

-- tsql user=invoker_3014 password=123
use db3014;
go

exec hasownera_3014.pa7_3014;
go

truncate table hasownera_3014.tbls_3014;
go

-- tsql
use db3014;
go

drop proc hasownera_3014.pa7_3014;
go

use master;
go


-- Cleanup
-- psql
-- Need to terminate active session before cleaning up the login
SELECT pg_terminate_backend(pid) FROM pg_stat_get_activity(NULL)
WHERE sys.suser_name(usesysid) in ('la_3014','lb_3014','invoker_3014') AND backend_type = 'client backend' AND usesysid IS NOT NULL;
GO

-- Wait to sync with another session
SELECT pg_sleep(1);
GO

do
$$
declare username text;
begin
  SELECT rolname INTO username FROM sys.babelfish_authid_user_ext WHERE orig_username like '%ownera%';
  EXECUTE format('revoke all on database jdbc_testdb from %I', username);
end;
$$
go

do
$$
declare username text;
begin
  SELECT rolname INTO username FROM sys.babelfish_authid_user_ext WHERE orig_username like '%ownerb%';
  EXECUTE format('revoke all on database jdbc_testdb from %I', username);
end;
$$
go

-- tsql
use db3014;
go

-- drop trigger hasownera_3014.trigs;
-- go

drop function hasownera_3014.funcs_3014;
go

drop proc hasownera_3014.procs_3014;
go

drop view hasownera_3014.vws_3014;
go

drop table hasownera_3014.tbls_3014;
go

drop function hasownerb_3014.funcd_3014;
go

drop proc hasownerb_3014.procd_3014;
go

drop view hasownerb_3014.vwd_3014;
go

drop table hasownerb_3014.tbld_3014;
go

drop schema hasownerb_3014;
go

drop schema hasownera_3014;
go

drop user ownera_3014;
go

drop user ownerb_3014;
go

drop user invoker_3014;
go

use master;
go

drop database db3014;
go

drop login la_3014;
go

drop login lb_3014;
go

drop login invoker_3014;
go

