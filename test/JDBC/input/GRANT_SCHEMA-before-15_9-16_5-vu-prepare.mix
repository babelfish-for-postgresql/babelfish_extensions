-- tsql
-- create database, login, users
create database babel_5172_db
go

use babel_5172_db
go

create login babel_5172_l1 with password = '123'
go

create user babel_5172_u1 for login babel_5172_l1;
go

create login babel_5172_l2 with password = '123';
go

create user babel_5172_u2 for login babel_5172_l2;
go

-- create schema with authorization
create schema babel_5172_s1 authorization babel_5172_u1
go

-- create objects with dbo user
create table babel_5172_s1.t1(a int);
go

create view babel_5172_s1.v1 as select 1;
go

create proc babel_5172_s1.p1 as select 1;
go

create function babel_5172_s1.f1() returns int begin declare @a int; set @a = 1; return @a; end 
go

use master
go

-- tsql user=babel_5172_l1 password=123
-- create objects with babel_5172_u1 user
use babel_5172_db
go

create table babel_5172_s1.t2(a int);
go

create view babel_5172_s1.v2 as select 1;
go

create proc babel_5172_s1.p2 as select 1;
go

create function babel_5172_s1.f2() returns int begin declare @a int; set @a = 1; return @a; end 
go

use master
go

-- tsql
-- create objects with babel_5172_u1 user
use babel_5172_db
go

-- grant select privilege on the schema with user babel_5172_u1
grant select, execute on schema::babel_5172_s1 to babel_5172_u2;
go

use master;
go

-- tsql user=babel_5172_l1 password=123
-- create new objects using babel_5172_u1 user
use babel_5172_db
go

create table babel_5172_s1.t5(a int);
go

create view babel_5172_s1.v5 as select 1;
go

create proc babel_5172_s1.p5 as select 1;
go

create function babel_5172_s1.f5() returns int begin declare @a int; set @a = 1; return @a; end 
go

use master;
go

-- tsql user=babel_5172_l2 password=123
-- new tables/views created by babel_5172_u1 should not be accessible
use babel_5172_db;
go

select * from babel_5172_s1.t5;
go

select * from babel_5172_s1.v5;
go

exec babel_5172_s1.p5;
go

select babel_5172_s1.f5();
go
