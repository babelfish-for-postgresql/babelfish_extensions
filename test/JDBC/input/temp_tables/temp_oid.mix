-- psql
show babelfishpg_tsql.temp_oid_buffer_size
GO

-- tsql
USE master;
GO

CREATE LOGIN babel_object_id_login1 WITH PASSWORD = '12345678';
GO

CREATE USER babel_object_id_master_user1 FOR LOGIN babel_object_id_login1;
GO

CREATE LOGIN babel_object_id_login2 WITH PASSWORD = '12345678';
GO

CREATE USER babel_object_id_master_user2 FOR LOGIN babel_object_id_login2;
GO

-- tsql      user=babel_object_id_login1 password=12345678
USE master
GO

CREATE TABLE #temp(c1 INT PRIMARY KEY, b INT IDENTITY, c CHAR(15) DEFAULT 'Whoops!')
GO

INSERT INTO #temp(c1) VALUES(1)
GO

SELECT * FROM #temp
GO

-- tsql      user=babel_object_id_login2 password=12345678
USE master
GO

-- This should succeed and not fail with duplicate key in pg_attrdef
CREATE TABLE #temp(c1 INT PRIMARY KEY, b INT IDENTITY, c CHAR(15) DEFAULT 'Hello!')
GO

INSERT INTO #temp(c1) VALUES(1)
GO

SELECT * FROM #temp
GO

-- tsql
USE master;
GO

DROP USER babel_object_id_master_user1
GO

DROP USER babel_object_id_master_user2
GO

-- psql
-- Need to terminate active session before cleaning up the login
SELECT pg_terminate_backend(pid) FROM pg_stat_get_activity(NULL)
WHERE sys.suser_name(usesysid) IN ('babel_object_id_login1', 'babel_object_id_login2')
AND backend_type = 'client backend' AND usesysid IS NOT NULL;
GO

-- Wait to sync with another session
-- (Not a huge fan of this because this could lead to intermittent issue.)
SELECT pg_sleep(2);
GO

-- tsql
DROP LOGIN babel_object_id_login1;
GO

DROP LOGIN babel_object_id_login2;
GO

-- tsql
USE master;
GO

-- Test Table Variables
DECLARE @OrderTable TABLE (ID INT, OrderNumber INT DEFAULT 1)
INSERT into @OrderTable (ID) VALUES (1), (2)

select * from @OrderTable
go

-- Test temp Table and alter default
CREATE TABLE #temptable(ID INT, ProductName varchar(20) DEFAULT 'product')
INSERT into #temptable (ID) VALUES (1)
GO

ALTER TABLE #temptable ADD CONSTRAINT df_ProductName DEFAULT 'item' FOR ProductName
GO

INSERT into #temptable (ID) VALUES (2)
GO

BEGIN TRANSACTION
ALTER TABLE #temptable ADD CONSTRAINT df_ProductName DEFAULT 'service' FOR ProductName
INSERT into #temptable (ID) VALUES (3)
SELECT * FROM #temptable
ROLLBACK
GO

INSERT into #temptable (ID) VALUES (4)
SELECT * FROM #temptable
go

DROP TABLE #temptable
GO

CREATE PROCEDURE babel_4752_p1
AS
    CREATE TABLE #temp(a INT PRIMARY KEY, b INT, c CHAR(15) DEFAULT 'babel_4752_p1') 
    insert into #temp (a, b) values (1, 2)
    select * from #temp
GO

EXEC babel_4752_p1
GO

EXEC babel_4752_p1
GO

CREATE TABLE #temp(a INT PRIMARY KEY, b INT, c CHAR(15) DEFAULT 'Foo') 
EXEC babel_4752_p1
go

CREATE PROCEDURE babel_4752_p2
AS
    CREATE TABLE #temp(a INT PRIMARY KEY, b INT, c CHAR(15) DEFAULT 'babel_4752_p2') 
    insert into #temp (a, b) values (1, 2)
    select * from #temp
GO

EXEC babel_4752_p2
GO

CREATE LOGIN babel_object_id_login1b WITH PASSWORD = '12345678';
GO

CREATE USER babel_object_id_master_user1b FOR LOGIN babel_object_id_login1b;
GO

CREATE LOGIN babel_object_id_login2b WITH PASSWORD = '12345678';
GO

CREATE USER babel_object_id_master_user2b FOR LOGIN babel_object_id_login2b;
GO

GRANT EXECUTE ON babel_4752_p1 TO babel_object_id_master_user1b;
GRANT EXECUTE ON babel_4752_p1 TO babel_object_id_master_user2b;
GRANT EXECUTE ON babel_4752_p2 TO babel_object_id_master_user1b;
GRANT EXECUTE ON babel_4752_p2 TO babel_object_id_master_user2b;
GO

-- tsql      user=babel_object_id_login1b password=12345678
USE master
GO

EXEC babel_4752_p1
GO

EXEC babel_4752_p1
GO

EXEC babel_4752_p2
GO

EXEC babel_4752_p2
GO

-- tsql      user=babel_object_id_login2b password=12345678
USE master
GO

EXEC babel_4752_p1
GO

EXEC babel_4752_p1
GO

EXEC babel_4752_p2
GO

EXEC babel_4752_p2
GO


-- tsql
USE master;
GO

DROP PROCEDURE babel_4752_p1
GO

DROP PROCEDURE babel_4752_p2
GO

DROP USER babel_object_id_master_user1b
GO

DROP USER babel_object_id_master_user2b
GO

-- psql
-- Need to terminate active session before cleaning up the login
SELECT pg_terminate_backend(pid) FROM pg_stat_get_activity(NULL)
WHERE sys.suser_name(usesysid) IN ('babel_object_id_login1b', 'babel_object_id_login2b')
AND backend_type = 'client backend' AND usesysid IS NOT NULL;
GO

-- Wait to sync with another session
-- (Not a huge fan of this because this could lead to intermittent issue.)
SELECT pg_sleep(2);
GO

-- tsql
DROP LOGIN babel_object_id_login1b;
GO

DROP LOGIN babel_object_id_login2b;
GO
