-- enable FULLTEXT
-- tsql user=jdbc_user password=12345678
SELECT set_config('babelfishpg_tsql.escape_hatch_fulltext', 'ignore', 'false')
GO

-- Test sys.babelfish_fts_contains_pgconfig
SELECT * FROM fts_contains_pgconfig_v1
GO

-- Full syntax of CONTAINS: https://github.com/MicrosoftDocs/sql-docs/blob/live/docs/t-sql/queries/contains-transact-sql.md

-- test basic CONTAINS use: ... CONTAINS(col_name, <simple_term>) ...
-- <simple_term> ::= { word | "phrase" }

-- tab character in search string
EXEC fts_contains_vu_prepare_p1 '"due	to"'
GO

-- line break
EXEC fts_contains_vu_prepare_p1 '"due
to"'
GO

-- no-break space character
declare @my_str varchar(50) = '"due'+char(160)+'to"';
EXEC fts_contains_vu_prepare_p1 @my_str
GO

EXEC fts_contains_vu_prepare_p1 '天'
GO

EXEC fts_contains_vu_prepare_p1 N'שלום'
GO

EXEC fts_contains_vu_prepare_p1 '"one 天 two"'
GO

EXEC fts_contains_vu_prepare_p1 'Tópicos'
GO

EXEC fts_contains_vu_prepare_p1 '天'
GO

-- colons, semicolons, pipes, parenthesis, etc.
EXEC fts_contains_vu_prepare_p1 '"one : two"'
GO

EXEC fts_contains_vu_prepare_p1 'one;two'
GO

EXEC fts_contains_vu_prepare_p1 'one|two'
GO

EXEC fts_contains_vu_prepare_p1 '"one (two)"'
GO

EXEC fts_contains_vu_prepare_p1 '"one * two"'
GO

EXEC fts_contains_vu_prepare_p1 '"one<two"'
GO

EXEC fts_contains_vu_prepare_p1 '"one&two"'
GO

EXEC fts_contains_vu_prepare_p1 '"one~two"'
GO

EXEC fts_contains_vu_prepare_p1 '"one|two"'
GO

EXEC fts_contains_vu_prepare_p1 '"one$two"'
GO

EXEC fts_contains_vu_prepare_p1 'love'
GO

-- Case sensitive tests
EXEC fts_contains_vu_prepare_p1 'LOVE'
GO

EXEC fts_contains_vu_prepare_p1 'Love'
GO

-- Test for empty string input, should throw error
EXEC fts_contains_vu_prepare_p1 ''
GO

-- Test for empty string input, should throw error
EXEC fts_contains_vu_prepare_p1 '            '
GO

-- Test for empty string input, should throw error
EXEC fts_contains_vu_prepare_p1 NULL
GO

EXEC fts_contains_vu_prepare_p1 '  "" '
GO

EXEC fts_contains_vu_prepare_p1 '  ""'
GO

EXEC fts_contains_vu_prepare_p1 '"" '
GO

EXEC fts_contains_vu_prepare_p1 '" "'
GO

EXEC fts_contains_vu_prepare_p1 'other'
GO

EXEC fts_contains_vu_prepare_p1 'arts'
GO

EXEC fts_contains_vu_prepare_p1 'performing'
GO

EXEC fts_contains_vu_prepare_p1 'performance'
GO

EXEC fts_contains_vu_prepare_p1 'quick'
GO

EXEC fts_contains_vu_prepare_p1 'grow'
GO

EXEC fts_contains_vu_prepare_p1 'actually'
GO

EXEC fts_contains_vu_prepare_p1 'helped'
GO

EXEC fts_contains_vu_prepare_p1 'version'
GO

EXEC fts_contains_vu_prepare_p1 '"come       back"'
GO

EXEC fts_contains_vu_prepare_p1 '"  come          back    "'
GO

EXEC fts_contains_vu_prepare_p1 '"due to"'
GO

EXEC fts_contains_vu_prepare_p1 '"per cent"'
GO

EXEC fts_contains_vu_prepare_p1 '"so-called"'
GO

EXEC fts_contains_vu_prepare_p1 '"stand up"'
GO

EXEC fts_contains_vu_prepare_p1 '"every month"'
GO

EXEC fts_contains_vu_prepare_p1 '"as a result"'
GO

EXEC fts_contains_vu_prepare_p1 '"in Australia"'
GO

EXEC fts_contains_vu_prepare_p1 '"daily news"'
GO

EXEC fts_contains_vu_prepare_p1 '" daily"'
GO

EXEC fts_contains_vu_prepare_p1 '"daily "'
GO

EXEC fts_contains_vu_prepare_p1 ' "daily news"'
GO

EXEC fts_contains_vu_prepare_p1 '"daily news" '
GO

-- Transactionality test
BEGIN TRANSACTION;
EXEC fts_contains_vu_prepare_p1 '   "  daily news            " '
COMMIT TRANSACTION;
GO

-- Prefix Term not supported
EXEC fts_contains_vu_prepare_p1 '"conf*"', 20
GO

EXEC fts_contains_vu_prepare_p1 '"conf      *"', 20
GO

-- Generation Term not supported
EXEC fts_contains_vu_prepare_p1 'FORMSOF(THESAURUS, love)'
GO

-- Boolean operators not supported
EXEC fts_contains_vu_prepare_p1 '"test" AND "love"';
GO

EXEC fts_contains_vu_prepare_p1 'test AND love';
GO

-- Special Character cases
select * from test_special_char_t where contains(name, '"one           two"');
go

select * from test_special_char_t where contains(name, 'one''two');
select * from test_special_char_t where contains(name, 'one`two');
select * from test_special_char_t where contains(name, 'one_two');
go

select * from test_special_char_t where contains(name, 'one@two');
go

select * from test_special_char_t where contains(name, 'one#two');
go

select * from test_special_char_t where contains(name, 'one$two');
go

select * from test_special_char_t where contains(name, 'one%two');
go

select * from test_special_char_t where contains(name, 'one*two');
go

select * from test_special_char_t where contains(name, 'one-two');
go

select * from test_special_char_t where contains(name, 'one+two');
go

select * from test_special_char_t where contains(name, 'one=two');
go

select * from test_special_char_t where contains(name, 'one\two');
go

select * from test_special_char_t where contains(name, 'one;two');
go

select * from test_special_char_t where contains(name, 'one<two');
go

select * from test_special_char_t where contains(name, 'one>two');
go

select * from test_special_char_t where contains(name, 'one.two');
go

select * from test_special_char_t where contains(name, 'one?two');
go

select * from test_special_char_t where contains(name, 'one/two');
go

select * from test_special_char_t where contains(name, 'one:two');
go

select * from test_special_char_t where contains(name, '"one: two"');
go

-- syntax error test_special_char_ts
select * from test_special_char_t where contains(name, 'one(two');
go

select * from test_special_char_t where contains(name, 'one)two');
go

select * from test_special_char_t where contains(name, 'one{two');
go

select * from test_special_char_t where contains(name, 'one}two');
go

select * from test_special_char_t where contains(name, 'one[two');
go

select * from test_special_char_t where contains(name, 'one]two');
go

select * from test_special_char_t where contains(name, 'one(two)');
go

select * from test_special_char_t where contains(name, 'one{two}');
go

select * from test_special_char_t where contains(name, 'one[two]');
go

-- double quotes test_special_char_t
select * from test_special_char_t where contains(name, '"one(two"');
go

select * from test_special_char_t where contains(name, '"one)two"');
go

select * from test_special_char_t where contains(name, '"one{two"');
go

select * from test_special_char_t where contains(name, '"one}two"');
go

select * from test_special_char_t where contains(name, '"one[two"');
go

select * from test_special_char_t where contains(name, '"one]two"');
go

select * from test_special_char_t where contains(name, '"one(two)"');
go

select * from test_special_char_t where contains(name, '"one{two}"');
go

select * from test_special_char_t where contains(name, '"one[two]"');
go

select * from test_special_char_t where contains(name, '"one(two)(}[]three"');
go

select * from test_special_char_t where contains(name, '"one"two"');
go

select * from test_special_char_t where contains(name, '"one      `  two"');
go

select * from test_special_char_t where contains(name, '"one '' two"');
go

select * from test_special_char_t where contains(name, '"one _ two"');
go

select * from test_special_char_t where contains(name, '"one : two"');
go

select * from test_special_char_t where contains(name, '"one(two)"');
go

select * from test_special_char_t where contains(name, 'one');
go

select * from test_special_char_t where contains(name, 'one:');
go

select * from test_special_char_t where contains(name, ':one');
go

select * from test_special_char_t where contains(name, ':one:');
go

select * from test_special_char_t where contains(name, '":one"');
go

select * from test_special_char_t where contains(name, '" :one"');
go

select * from test_special_char_t where contains(name, '"one:"');
go

select * from test_special_char_t where contains(name, '"one: "');
go

select * from test_special_char_t where contains(name, 'one@#$two');
go

select * from test_special_char_t where contains(name, '"one $%#! two"');
go

select * from test_special_char_t where contains(name, '"one # $ % ^ two"');
go

select * from test_special_char_t where contains(name, '"one #        $ %    ^      two"');
go

select * from test_special_char_t where contains(name, '"one$two three %$@ four"');
go

select * from test_special_char_t where contains(name, 'one@two@three');
go

select * from test_special_char_t where contains(name, '"one _?` two"');
go

select * from test_special_char_t where contains(name, '"one `'' two __` three"');
go

select * from test_special_char_t where contains(name, 'one``two');
go

select * from test_special_char_t where contains(name, 'one__two');
go

-- Tests for 2 special characters combination strings
select * from test_special_char_t where contains(name, '"one   @  two      @ three"');
go

select * from test_special_char_t where contains(name, '"one   @  two * three"');
go

select * from test_special_char_t where contains(name, '"one   ^  two ` three"');
go

select * from test_special_char_t where contains(name, '"one   %  two _ three"');
go

select * from test_special_char_t where contains(name, '"one   #  two '' three"');
go

-- Tests for 3 special characters combination strings
select * from test_special_char_t where contains(name, 'one@two@three@four');
go

select * from test_special_char_t where contains(name, 'one@two`three_four');
go

select * from test_special_char_t where contains(name, 'one''two`three_four');
go

select * from test_special_char_t where contains(name, 'one#two''three`four');
go

select * from test_special_char_t where contains(name, '"one @ two @ three @ four"');
go

select * from test_special_char_t where contains(name, '"one   # two ` three _ four"');
go

select * from test_special_char_t where contains(name, '"one * two '' three ` four"');
go

select * from test_special_char_t where contains(name, '"one _ two % three # four"');
go

-- Tests for 4 special characters combination strings
select * from test_special_char_t where contains(name, 'one@two@three@four@five');
go

select * from test_special_char_t where contains(name, 'one`two-three_four''five');
go

select * from test_special_char_t where contains(name, 'one_two`three*four%five');
go

select * from test_special_char_t where contains(name, '"one @ two ` three _ four '' five "');
go

select * from test_special_char_t where contains(name, '"one % two '' three - four ` five"');
go

select * from test_special_char_t where contains(name, '"one * two < three > four : five"');
go

select * from test_special_char_t where contains(name, '"one < two _ three '' four `     five"');
go

-- disable FULLTEXT
SELECT set_config('babelfishpg_tsql.escape_hatch_fulltext', 'strict', 'false')
GO