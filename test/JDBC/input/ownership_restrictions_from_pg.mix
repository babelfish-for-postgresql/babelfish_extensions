-- tsql
CREATE LOGIN ownership_restrictions_from_pg_login1 WITH password = '12345678';
GO

CREATE LOGIN ownership_restrictions_from_pg_login2 WITH password = '12345678';
GO

-- tsql user=ownership_restrictions_from_pg_login2 password=12345678
CREATE ROLE ownership_restrictions_from_pg_role_by_pg_login2;
GO

CREATE USER ownership_restrictions_from_pg_user_by_pg_login2;
GO

-- tsql
ALTER SERVER ROLE sysadmin ADD MEMBER ownership_restrictions_from_pg_login2;
GO

-- tsql user=ownership_restrictions_from_pg_login2 password=12345678
CREATE DATABASE ownership_restrictions_from_pg_login2_db1;
GO

-- tsql
ALTER SERVER ROLE sysadmin DROP MEMBER ownership_restrictions_from_pg_login2;
GO

-- tsql user=ownership_restrictions_from_pg_login2 password=12345678
USE ownership_restrictions_from_pg_login2_db1;
GO

SELECT current_user;
GO

CREATE ROLE ownership_restrictions_from_pg_role_by_pg_login2;
GO

DROP ROLE ownership_restrictions_from_pg_role_by_pg_login2;
GO

-- This is a temporary failure, it will be fixed with BABEL-4652.
CREATE USER ownership_restrictions_from_pg_user_by_pg_login2;
GO

-- DROP USER ownership_restrictions_from_pg_user_by_pg_login2;
-- GO

USE master;
go

-- tsql
DROP DATABASE ownership_restrictions_from_pg_login2_db1;
go

CREATE ROLE ownership_restrictions_from_pg_role1;
GO

CREATE DATABASE ownership_restrictions_from_pg_db;
GO

DECLARE @ownership_restrictions_from_pg_test_variable  int = 100;
GO

-- psql
CREATE USER ownership_restrictions_from_pg_test_user WITH PASSWORD '12345678' inherit;
go

-- psql user=ownership_restrictions_from_pg_login1 password=12345678
-- If tsql login connected through psql Alter ROLE of an bbf created logins for password,
-- connection limit and valid until should be working fine
-- and the rest of alter role operations and all alter role operations for bbf created users/roles
-- should throw an error.
DROP ROLE master_ownership_restrictions_from_pg_role1;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 VALID UNTIL 'infinity';
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 rename to master_ownership_restrictions_from_pg_role5;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 with ENCRYPTED password '12345678';
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 with password '12345678';
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 with password NULL;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 NOCREATEROLE;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 CREATEROLE;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 NOCREATEDB;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 CREATEDB;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 NOLOGIN;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 LOGIN;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 NOSUPERUSER;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 SUPERUSER;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 NOINHERIT;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 INHERIT;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 REPLICATION;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 NOREPLICATION;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 BYPASSRLS;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 NOBYPASSRLS;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 WITH CONNECTION LIMIT 1;
GO

ALTER ROLE ALL IN DATABASE ownership_restrictions_from_pg_db set babelfishpg_tsql.ownership_restrictions_from_pg_test_variable = 101;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 set babelfishpg_tsql.ownership_restrictions_from_pg_test_variable = 101;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 IN DATABASE ownership_restrictions_from_pg_db set babelfishpg_tsql.ownership_restrictions_from_pg_test_variable = 101;
GO

ALTER ROLE CURRENT_ROLE IN DATABASE ownership_restrictions_from_pg_db set babelfishpg_tsql.ownership_restrictions_from_pg_test_variable = 101;
GO

ALTER ROLE CURRENT_USER IN DATABASE ownership_restrictions_from_pg_db set babelfishpg_tsql.ownership_restrictions_from_pg_test_variable = 101;
GO

ALTER ROLE SESSION_USER IN DATABASE ownership_restrictions_from_pg_db set babelfishpg_tsql.ownership_restrictions_from_pg_test_variable = 101;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 VALID UNTIL 'infinity';
GO

ALTER ROLE ownership_restrictions_from_pg_login1 rename to master_ownership_restrictions_from_pg_role5;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 with ENCRYPTED password '12345678';
GO

ALTER ROLE ownership_restrictions_from_pg_login1 with password NULL;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 with password '12345678';
GO

ALTER ROLE ownership_restrictions_from_pg_login1 NOCREATEROLE;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 CREATEROLE;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 NOCREATEDB;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 CREATEDB;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 NOLOGIN;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 LOGIN;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 NOSUPERUSER;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 SUPERUSER;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 NOINHERIT;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 INHERIT;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 REPLICATION;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 NOREPLICATION;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 BYPASSRLS;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 NOBYPASSRLS;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 WITH CONNECTION LIMIT 1;
GO

-- psql user=ownership_restrictions_from_pg_login1 password=12345678
ALTER ROLE ownership_restrictions_from_pg_login1 set babelfishpg_tsql.ownership_restrictions_from_pg_test_variable = 101;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 IN DATABASE ownership_restrictions_from_pg_db set babelfishpg_tsql.ownership_restrictions_from_pg_test_variable = 101;
GO

-- If the stmt contains a non-allowed option then altering of role not allowed
ALTER ROLE master_ownership_restrictions_from_pg_role1 WITH NOCREATEDB CONNECTION LIMIT 1  password '12345678';
GO

ALTER ROLE ownership_restrictions_from_pg_login1 WITH NOCREATEDB CONNECTION LIMIT 1  password '12345678';
GO

-- psql user=ownership_restrictions_from_pg_test_user password=12345678
-- For plain psql user Alter ROLE of an bbf created logins for password,
-- connection limit and valid until should be working fine
-- and the rest of alter role operations and all alter role operations for bbf created users/roles
-- should throw an error.
DROP ROLE master_ownership_restrictions_from_pg_role1;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 VALID UNTIL 'infinity';
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 rename to master_ownership_restrictions_from_pg_role5;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 with ENCRYPTED password '12345678';
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 with password '12345678';
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 with password NULL;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 NOCREATEROLE;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 CREATEROLE;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 NOCREATEDB;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 CREATEDB;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 NOLOGIN;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 LOGIN;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 NOSUPERUSER;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 SUPERUSER;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 NOINHERIT;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 INHERIT;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 REPLICATION;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 NOREPLICATION;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 BYPASSRLS;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 NOBYPASSRLS;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 WITH CONNECTION LIMIT 1;
GO

ALTER ROLE ALL IN DATABASE ownership_restrictions_from_pg_db set babelfishpg_tsql.ownership_restrictions_from_pg_test_variable = 101;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 set babelfishpg_tsql.ownership_restrictions_from_pg_test_variable = 101;
GO

ALTER ROLE master_ownership_restrictions_from_pg_role1 IN DATABASE ownership_restrictions_from_pg_db set babelfishpg_tsql.ownership_restrictions_from_pg_test_variable = 101;
GO

ALTER ROLE CURRENT_ROLE IN DATABASE ownership_restrictions_from_pg_db set babelfishpg_tsql.ownership_restrictions_from_pg_test_variable = 101;
GO

ALTER ROLE CURRENT_USER IN DATABASE ownership_restrictions_from_pg_db set babelfishpg_tsql.ownership_restrictions_from_pg_test_variable = 101;
GO

ALTER ROLE SESSION_USER IN DATABASE ownership_restrictions_from_pg_db set babelfishpg_tsql.ownership_restrictions_from_pg_test_variable = 101;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 VALID UNTIL 'infinity';
GO

ALTER ROLE ownership_restrictions_from_pg_login1 rename to master_ownership_restrictions_from_pg_role5;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 with ENCRYPTED password '12345678';
GO

ALTER ROLE ownership_restrictions_from_pg_login1 with password NULL;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 with password '12345678';
GO

ALTER ROLE ownership_restrictions_from_pg_login1 NOCREATEROLE;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 CREATEROLE;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 NOCREATEDB;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 CREATEDB;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 NOLOGIN;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 LOGIN;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 NOSUPERUSER;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 SUPERUSER;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 NOINHERIT;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 INHERIT;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 REPLICATION;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 NOREPLICATION;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 BYPASSRLS;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 NOBYPASSRLS;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 WITH CONNECTION LIMIT 1;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 set babelfishpg_tsql.ownership_restrictions_from_pg_test_variable = 101;
GO

ALTER ROLE ownership_restrictions_from_pg_login1 IN DATABASE ownership_restrictions_from_pg_db set babelfishpg_tsql.ownership_restrictions_from_pg_test_variable = 101;
GO

-- If the stmt contains a non-allowed option then altering of role not allowed
ALTER ROLE master_ownership_restrictions_from_pg_role1 WITH NOCREATEDB CONNECTION LIMIT 1  password '12345678';
GO

ALTER ROLE ownership_restrictions_from_pg_login1 WITH NOCREATEDB CONNECTION LIMIT 1  password '12345678';
GO

-- psql
DROP USER ownership_restrictions_from_pg_test_user;
GO

-- Need to terminate active session before cleaning up the login
SELECT pg_terminate_backend(pid) FROM pg_stat_get_activity(NULL) 
WHERE sys.suser_name(usesysid) = 'ownership_restrictions_from_pg_login1' AND backend_type = 'client backend' AND usesysid IS NOT NULL;
GO

SELECT pg_terminate_backend(pid) FROM pg_stat_get_activity(NULL)
WHERE sys.suser_name(usesysid) = 'ownership_restrictions_from_pg_login2' AND backend_type = 'client backend' AND usesysid IS NOT NULL;
GO

-- tsql
DROP DATABASE ownership_restrictions_from_pg_db;
DROP ROLE ownership_restrictions_from_pg_role1;
DROP LOGIN ownership_restrictions_from_pg_login1;
DROP LOGIN ownership_restrictions_from_pg_login2;
GO
