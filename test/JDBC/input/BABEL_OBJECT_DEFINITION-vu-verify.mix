-- Throws an error
-- tsql
SELECT OBJECT_DEFINITION();
GO

-- Should return NULL
SELECT OBJECT_DEFINITION(NULL);
GO

-- Should return NULL
SELECT OBJECT_DEFINITION(OBJECT_ID('object_definition_t1'))
GO

USE object_definition_db;
GO

-- Should return NULL
SELECT OBJECT_DEFINITION(OBJECT_ID('object_definition_t1'))
GO

-- Default constraint
SELECT OBJECT_DEFINITION(cc.object_id) FROM sys.default_constraints cc WHERE parent_object_id = OBJECT_ID('object_definition_t1');
GO

-- Check constraint
SELECT OBJECT_DEFINITION(cc.object_id) FROM sys.check_constraints cc WHERE parent_object_id = OBJECT_ID('object_definition_t2');
GO

-- Procedure
SELECT OBJECT_DEFINITION(OBJECT_ID('object_definition_proc'))
GO

-- Scalar function
SELECT OBJECT_DEFINITION(OBJECT_ID('object_definition_fc1'))
GO

-- DML trigger
SELECT OBJECT_DEFINITION(OBJECT_ID('object_definition_tr1'))
GO

-- Inline table-valued function
SELECT OBJECT_DEFINITION(OBJECT_ID('object_definition_itvf'))
GO

-- Table-valued function
SELECT OBJECT_DEFINITION(OBJECT_ID('object_definition_tvf'))
GO

-- View
SELECT OBJECT_DEFINITION(OBJECT_ID('object_definition_sch.object_definition_v1'))
GO

-- Dependency Test
SELECT * FROM object_definition_v2;
GO

-- reset the login password
ALTER LOGIN object_definition_login1 WITH PASSWORD = '12345678';
GO

-- Test dependency of user's permission on object
-- tsql      user=object_definition_login1 password=12345678
USE object_definition_db;
GO

SELECT current_user;
GO

-- By default, user will not access to any objects
-- following should return NULL
SELECT OBJECT_DEFINITION(OBJECT_ID('object_definition_tvf'))
GO

SELECT OBJECT_DEFINITION(OBJECT_ID('object_definition_sch.object_definition_v1'))
GO

-- Grant permission to user
-- tsql
GRANT EXECUTE ON object_definition_tvf TO object_definition_user2;
GO

GRANT SELECT ON object_definition_sch.object_definition_v1 TO object_definition_user2;
GO

-- Test dependency of user's permission on object
-- tsql      user=object_definition_login1 password=12345678
USE object_definition_db;
GO

SELECT OBJECT_DEFINITION(OBJECT_ID('object_definition_tvf'))
GO

SELECT OBJECT_DEFINITION(OBJECT_ID('object_definition_sch.object_definition_v1'))
GO

-- Test cross database lookup - Returns NULL
-- tsql
USE master;
GO

SELECT OBJECT_DEFINITION(OBJECT_ID('object_definition_db.dbo.object_definition_proc'))
GO

-- Test  : Brackets around datatype for procedure
SELECT ROUTINE_DEFINITION FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_NAME = 'object_definition_procedure';
go
-- Test  : Single Line comment for procedure
ALTER PROCEDURE object_definition_procedure AS BEGIN DECLARE @storeOriginalQuery_var [varchar] (6000) END
go
SELECT ROUTINE_DEFINITION FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_NAME = 'object_definition_procedure';
go
-- Test  : Multi Line comment for procedure

-- multiline comment line 1
-- multiline comment line 2
ALTER PROCEDURE object_definition_procedure AS BEGIN DECLARE @storeOriginalQuery_var [varchar] (6000) END
go
SELECT ROUTINE_DEFINITION FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_NAME = 'object_definition_procedure';
go
-- Test  : Revise test 1,2,3 with functions
SELECT ROUTINE_DEFINITION FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_NAME = 'object_definition_function';
go
-- Test  : Single Line comment for function
ALTER function object_definition_function() RETURNS [VARCHAR](6000) AS BEGIN DECLARE @storeOriginalQuery_var [varchar] (6000) RETURN @storeOriginalQuery_var END
go
SELECT ROUTINE_DEFINITION FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_NAME = 'object_definition_function';
go
-- Test  : Multi Line comment for function

-- multiline comment line 1
-- multiline comment line 2
ALTER function object_definition_function() RETURNS [VARCHAR](6000) AS BEGIN DECLARE @storeOriginalQuery_var [varchar] (6000) RETURN @storeOriginalQuery_var END
go
SELECT ROUTINE_DEFINITION FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_NAME = 'object_definition_function';
go