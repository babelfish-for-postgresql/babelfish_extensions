-- psql
ALTER SYSTEM SET babelfishpg_tsql.allow_antlr_to_unsupported_grammar_for_testing = true;
SELECT pg_reload_conf();
CREATE USER foo WITH LOGIN PASSWORD 'abc';
CREATE USER su_user WITH SUPERUSER LOGIN PASSWORD 'abc';
GO

-- tsql      user=foo      password=abc
-- Login with non babelfish user should fail
go

-- Login with a superuser should succeed
-- tsql      user=su_user      password=abc
SELECT 1;
go

-- psql
DROP USER IF EXISTS foo;
DROP USER IF EXISTS su_user;
go

-- Create Login through tsql
-- tsql
CREATE LOGIN r1 WITH PASSWORD = 'abc';
go

CREATE USER r1;
go

CREATE LOGIN r2 WITH password = 'abc';
go

CREATE SCHEMA sch2;
go

CREATE USER r2 WITH DEFAULT_SCHEMA = sch2;
go

-- Login with a Babelfish user should succeed
-- tsql      user=r1      password=abc
SELECT db_name();
go

SELECT current_setting('search_path');
go

SELECT rolname, orig_username, login_name, database_name, default_schema_name
FROM sys.babelfish_authid_user_ext
WHERE orig_username = 'r1';
go

SELECT session_user;
go

SELECT current_user;
go

SELECT user_name(user_id());
go

ALTER USER r1 WITH DEFAULT_SCHEMA = sch2;
go

SELECT rolname, orig_username, login_name, database_name, default_schema_name
FROM sys.babelfish_authid_user_ext
WHERE orig_username = 'r1';
go

ALTER USER r1 WITH NAME = new_r1;
go

SELECT rolname, orig_username, login_name, database_name, default_schema_name
FROM sys.babelfish_authid_user_ext
WHERE orig_username = 'new_r1';
go

ALTER USER r2 WITH DEFAULT_SCHEMA = NULL;
go

ALTER USER r2 WITH NAME = new_r2;
go

SELECT rolname, orig_username, login_name, database_name, default_schema_name
FROM sys.babelfish_authid_user_ext
WHERE orig_username = 'r2';
go

-- tsql      user=r2      password=abc
SELECT db_name();
go

SELECT current_setting('search_path');
go

SELECT rolname, orig_username, login_name, database_name, default_schema_name
FROM sys.babelfish_authid_user_ext
WHERE orig_username = 'r2';
go

SELECT session_user;
go

SELECT current_user;
go

SELECT user_name(user_id());
go

-- tsql
DROP USER new_r1;
go

DROP LOGIN r1;
go

DROP USER r2;
go

DROP SCHEMA sch2;
go

DROP LOGIN r2;
go

-- Test initialization
SELECT COUNT(*) FROM sys.babelfish_authid_login_ext;
go

CREATE LOGIN r1 WITH PASSWORD = 'abc';
go

SELECT COUNT(*) FROM sys.babelfish_authid_login_ext;
go

-- Test initialization with password
CREATE LOGIN r2 WITH PASSWORD = '123'
go

SELECT COUNT(*) FROM sys.babelfish_authid_login_ext;
go

-- Test altering the login ability
SELECT rolcanlogin FROM pg_catalog.pg_roles WHERE rolname = 'r1';
go
SELECT name, is_disabled FROM sys.server_principals WHERE name = 'r1';
go

ALTER LOGIN r1 disable;
go

SELECT rolcanlogin FROM pg_catalog.pg_roles WHERE rolname = 'r1';
go
SELECT name, is_disabled FROM sys.server_principals WHERE name = 'r1';
go

ALTER LOGIN r1 enable;
go

SELECT rolcanlogin FROM pg_catalog.pg_roles WHERE rolname = 'r1';
go
SELECT name, is_disabled FROM sys.server_principals WHERE name = 'r1';
go

-- Test altering the password
ALTER LOGIN r2 WITH PASSWORD = '456'
go

-- Test dropping
DROP LOGIN r1;
go

SELECT COUNT(*) FROM sys.babelfish_authid_login_ext;
go

DROP LOGIN r2;
go

SELECT COUNT(*) FROM sys.babelfish_authid_login_ext;
go

-- Test membership
CREATE LOGIN r3 WITH PASSWORD = '789';
GO

SELECT COUNT(*) FROM pg_auth_members
WHERE roleid = (SELECT oid FROM pg_roles WHERE rolname = 'sysadmin')
AND "member" = (SELECT oid FROM pg_roles WHERE rolname = 'r3');
GO

ALTER SERVER ROLE sysadmin ADD MEMBER r3;
GO

SELECT COUNT(*) FROM pg_auth_members
WHERE roleid = (SELECT oid FROM pg_roles WHERE rolname = 'sysadmin')
AND "member" = (SELECT oid FROM pg_roles WHERE rolname = 'r3');
GO

ALTER SERVER ROLE sysadmin DROP MEMBER r3;
GO

SELECT COUNT(*) FROM pg_auth_members
WHERE roleid = (SELECT oid FROM pg_roles WHERE rolname = 'sysadmin')
AND "member" = (SELECT oid FROM pg_roles WHERE rolname = 'r3');
GO

DROP LOGIN r3;
GO

-- Test error cases
ALTER SERVER ROLE db_owner ADD MEMBER dummy;
GO

ALTER SERVER ROLE db_owner DROP MEMBER dummy;
GO

-- Test User functions
USE MASTER;
GO

SELECT user_name();
GO

SELECT user_name(user_id());
GO

SELECT user_name(user_id('guest'));
GO

SELECT rolname FROM pg_roles WHERE oid = user_id('dbo');
GO

SELECT rolname FROM pg_roles WHERE oid = user_id('guest');
GO

USE MSDB;
GO

SELECT user_name();
GO

SELECT user_name(user_id());
GO

SELECT user_name(user_id('guest'));
GO

SELECT rolname FROM pg_roles WHERE oid = user_id('dbo');
GO

SELECT rolname FROM pg_roles WHERE oid = user_id('guest');
GO

USE TEMPDB;
GO

SELECT user_name();
GO

SELECT user_name(user_id());
GO

SELECT user_name(user_id('guest'));
GO

SELECT rolname FROM pg_roles WHERE oid = user_id('dbo');
GO

SELECT rolname FROM pg_roles WHERE oid = user_id('guest');
GO

CREATE DATABASE db1;
GO

USE db1;
GO

SELECT rolname, orig_username, login_name, database_name, default_schema_name
FROM sys.babelfish_authid_user_ext
ORDER BY rolname;
GO

SELECT user_name();
GO

SELECT user_name(user_id());
GO

SELECT rolname FROM pg_roles WHERE oid = user_id('dbo');
GO

-- Expect NULL
SELECT user_name(-1);
GO

SELECT user_id('master_dbo');
GO

-- Test Login functions
CREATE LOGIN login1 WITH PASSWORD = '456';
GO

SELECT name FROM sys.server_principals WHERE principal_id = suser_id('login1');
GO

SELECT name FROM sys.server_principals WHERE name = suser_name(suser_id('login1'));
GO

-- Expect NULL
SELECT suser_name(-1);
GO

USE MASTER;
GO

DROP DATABASE db1;
GO

SELECT rolname, orig_username, login_name, database_name, default_schema_name
FROM sys.babelfish_authid_user_ext
ORDER BY rolname;
GO

DROP LOGIN login1;
GO

-- psql
ALTER SYSTEM SET babelfishpg_tsql.migration_mode = 'multi-db';
SELECT pg_reload_conf();
GO

-- tsql
-- Test multi-db mode
USE master;
GO

CREATE DATABASE db1;
GO

CREATE DATABASE db2;
GO

SELECT rolname, login_name, orig_username, database_name, default_schema_name
FROM sys.babelfish_authid_user_ext
ORDER BY rolname;
GO

SELECT name, default_schema_name
FROM sys.database_principals
ORDER BY default_schema_name DESC, name;
GO

SELECT rolname, rolcreaterole FROM pg_roles
WHERE rolname LIKE '%dbo'
ORDER BY rolname;
GO

USE db1;
GO

SELECT name, default_schema_name
FROM sys.database_principals
ORDER BY default_schema_name DESC, name;
GO

SELECT user_name(user_id('dbo'));
GO

SELECT user_name(user_id('guest'));
GO

SELECT rolname FROM pg_roles WHERE oid = user_id('dbo');
GO

SELECT rolname FROM pg_roles WHERE oid = user_id('guest');
GO

USE db2;
GO

SELECT user_name(user_id('dbo'));
GO

SELECT user_name(user_id('guest'));
GO

SELECT rolname FROM pg_roles WHERE oid = user_id('dbo');
GO

SELECT rolname FROM pg_roles WHERE oid = user_id('guest');
GO

USE MASTER;
GO

SELECT user_name(user_id('dbo'));
GO

SELECT user_name(user_id('guest'));
GO

SELECT rolname FROM pg_roles WHERE oid = user_id('dbo');
GO

SELECT rolname FROM pg_roles WHERE oid = user_id('guest');
GO

DROP DATABASE db1;
GO

SELECT rolname, orig_username, login_name, database_name, default_schema_name
FROM sys.babelfish_authid_user_ext
ORDER BY rolname;
GO

DROP DATABASE db2;
GO

SELECT rolname, orig_username, login_name, database_name, default_schema_name
FROM sys.babelfish_authid_user_ext
ORDER BY rolname;
GO

-- psql
ALTER SYSTEM SET babelfishpg_tsql.migration_mode = 'single-db';
ALTER SYSTEM SET babelfishpg_tsql.allow_antlr_to_unsupported_grammar_for_testing = false;
SELECT pg_reload_conf();
GO
