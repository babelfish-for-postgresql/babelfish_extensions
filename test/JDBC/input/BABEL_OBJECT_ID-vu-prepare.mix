
-- To test table, trigger, procedure, function
-- tsql
CREATE TABLE babel_object_id_t1 (a int);
GO

CREATE TRIGGER babel_object_id_trg ON babel_object_id_t1 AFTER INSERT AS SELECT 1;
GO

CREATE PROCEDURE babel_object_id_proc1 AS SELECT 1;
GO

CREATE FUNCTION babel_object_id_func1() returns int BEGIN RETURN 1; END
GO

CREATE VIEW babel_object_id_v1 AS SELECT 1;
GO

CREATE VIEW babel_object_id_proc1_view AS
SELECT OBJECT_NAME(OBJECT_ID('babel_object_id_proc1'))
GO

CREATE VIEW babel_object_id_t1_view AS
SELECT OBJECT_NAME(OBJECT_ID('babel_object_id_t1'))
GO

CREATE VIEW babel_object_id_trg_view AS
SELECT (CASE WHEN OBJECT_ID('babel_object_id_trg') = NULL THEN 'false' ELSE 'true' END) result;
GO

CREATE VIEW babel_object_id_func1_view AS
SELECT OBJECT_NAME(OBJECT_ID('babel_object_id_func1'))
GO

CREATE VIEW babel_object_id_v1_view AS
SELECT OBJECT_NAME(OBJECT_ID('babel_object_id_v1'))
GO

-- To test schema and object name containing spaces and dots
CREATE TABLE [babel_object_id_t2 .with .dot_an_spaces] (a int);
GO

CREATE SCHEMA [babel_object_id_schema .with .dot_and_spaces]
GO

CREATE TABLE [babel_object_id_schema .with .dot_and_spaces]."babel_object_id_t3 .with .dot_and_spaces" (a int);
GO

-- To test longer schema name and table name 
CREATE SCHEMA babel_object_id_schema_longer_than_63_0abcdefgij1abcdefgij2abcdefgij3abcdefgij4abcdefgij5abcdefgij6abcdefgij7abcdefgij8abcdefghij9abcdefghij;
GO

CREATE TABLE babel_object_id_schema_longer_than_63_0abcdefgij1abcdefgij2abcdefgij3abcdefgij4abcdefgij5abcdefgij6abcdefgij7abcdefgij8abcdefghij9abcdefghij.babel_object_id_table_longer_than_63_0abcdefgij1abcdefgij2abcdefgij3abcdefgij4abcdefgij5abcdefgij6abcdefgij7abcdefgij8abcdefghij9abcdefghij (a int);
GO

-- To test lookup in different database
CREATE DATABASE babel_object_id_db;
GO

USE babel_object_id_db;
GO

CREATE TABLE babel_object_id_db_t1 (a int);
GO

-- to test dependency of user's permission on object
USE master;
GO

CREATE LOGIN babel_object_id_login1 WITH PASSWORD = '12345678';
GO

CREATE USER babel_object_id_master_user1 FOR LOGIN babel_object_id_login1;
GO

USE babel_object_id_db;
GO

CREATE USER babel_object_id_user2 FOR LOGIN babel_object_id_login1;
GO

-- to test that it is looking in user's default schema, in case no schema name is specified
USE babel_object_id_db;
GO

CREATE SCHEMA babel_object_id_schema2;
GO

CREATE TABLE babel_object_id_schema2.babel_object_id_db_t2 (a int);
GO

GRANT ALL ON babel_object_id_schema2.babel_object_id_db_t2 TO babel_object_id_user2;
GO

-- to test that it is looking in guest schema by default for guest user
USE master
GO

CREATE LOGIN babel_object_id_login2 WITH PASSWORD = '12345678';
GO

USE babel_object_id_db;
GO
