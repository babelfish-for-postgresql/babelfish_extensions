CREATE TABLE babel_3407_table1 (
[Id] INT,
[FirstName] VARCHAR(25),
[LastName] VARCHAR(25),
[State] VARCHAR(25) );
GO

INSERT INTO babel_3407_table1 values
(1,'Divya','Kumar',NULL),
(2,NULL,'Khanna','Bengaluru'),
(3,'Tom','Mehta','Kolkata'),
(4,'Kane',NULL,'Delhi');
GO
~~ROW COUNT: 4~~


CREATE TABLE babel_3407_table2 (
[Id] INT,
[Age] INT,
[Country] VARCHAR(25));
GO

INSERT INTO babel_3407_table2 values
(1,25, 'India'),
(2,40, 'USA'),
(3,30, 'India'),
(4,20, NULL),
(5,10, 'USA');
GO
~~ROW COUNT: 5~~


CREATE TABLE babel_3407_table3 (
[Id] INT,
[value] VARCHAR(25) );
GO

INSERT INTO babel_3407_table3 values
(1,NULL),
(2,NULL),
(3,NULL);
GO
~~ROW COUNT: 3~~


-- FOR JSON PATH clause without nested support
CREATE VIEW babel_3407_view1 AS
SELECT Id AS EmpId, 
       FirstName AS "Name.FirstName",
       LastName AS  "Name.LastName",
       State
FROM babel_3407_table1
FOR JSON PATH;
GO

CREATE VIEW babel_3407_view2 AS
SELECT Id, 
       Age,
       Country
FROM babel_3407_table2
FOR JSON PATH;
GO

-- Multiple tables without nested support
CREATE VIEW babel_3407_view3 AS
SELECT E.FirstName AS 'Person.Name',
       E.LastName AS 'Person.Surname',
       D.Age AS 'Employee.Price',
       D.Country AS 'Employee.Quantity'
FROM babel_3407_table1 E
   INNER JOIN babel_3407_table2 D
     ON E.Id = D.Id
FOR JSON PATH;
GO

-- ROOT directive without specifying value
CREATE VIEW babel_3407_view4 AS
SELECT FirstName, 
       LastName
FROM babel_3407_table1
FOR JSON PATH, ROOT;
GO

-- ROOT directive with specifying ROOT value
CREATE VIEW babel_3407_view5 AS
SELECT FirstName, 
       LastName
FROM babel_3407_table1
FOR JSON PATH, ROOT('Employee');
GO

-- ROOT directive with specifying ROOT value with empty string
CREATE VIEW babel_3407_view6 AS
SELECT FirstName, 
       LastName
FROM babel_3407_table1
FOR JSON PATH, ROOT('');
GO

-- WITHOUT_ARRAY_WRAPPERS directive
CREATE VIEW babel_3407_view7 AS
SELECT FirstName, 
       LastName
FROM babel_3407_table1
FOR JSON PATH, WITHOUT_ARRAY_WRAPPER;
GO

-- INCLUDE_NULL_VALUES directive
CREATE VIEW babel_3407_view8 AS
SELECT FirstName, 
       LastName
FROM babel_3407_table1
FOR JSON PATH, INCLUDE_NULL_VALUES;
GO

-- Multiple Directives
CREATE VIEW babel_3407_view9 AS
SELECT Id, 
       Age,
       Country
FROM babel_3407_table2
FOR JSON PATH, ROOT('Employee'), INCLUDE_NULL_VALUES;
GO

CREATE VIEW babel_3407_view10 AS
SELECT Id, 
       Age,
       Country
FROM babel_3407_table2
FOR JSON PATH, WITHOUT_ARRAY_WRAPPER, INCLUDE_NULL_VALUES;
GO

-- Throws error as ROOT and WITHOUT_ARRAY_WRAPPER cannot be used together
CREATE VIEW babel_3407_view11 AS
SELECT Id, 
       Age,
       Country
FROM babel_3407_table2
FOR JSON PATH, ROOT, WITHOUT_ARRAY_WRAPPER;
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: ROOT option and WITHOUT_ARRAY_WRAPPER option cannot be used together in FOR JSON. Remove one of these options)~~


-- FOR JSON AUTO clause not supported
CREATE VIEW babel_3407_view12 AS
SELECT Id,
       State
FROM babel_3407_table1
FOR JSON AUTO;
GO

-- Test case with parameters
CREATE PROCEDURE babel_3407_proc1 @id int AS
SELECT Firstname AS [nam"@e], 
       State AS [State"@]
FROM babel_3407_table1
WHERE Id = @id
FOR JSON PATH;
GO

CREATE PROCEDURE babel_3407_proc2 @id int AS
SELECT Firstname AS [Name], 
       State 
FROM babel_3407_table1
WHERE Id = @id
FOR JSON PATH;
GO

-- Alias/colname not present
CREATE VIEW babel_3407_view13 AS
SELECT 2
FOR JSON PATH;
GO

-- All null values test
CREATE VIEW babel_3407_view14 AS
SELECT value
FROM babel_3407_table3
FOR JSON PATH;
GO

-- Test for all parser rules
CREATE VIEW babel_3407_view15 AS
SELECT Id,
       Age,
       Country
FROM babel_3407_table2
ORDER BY Age
FOR JSON PATH;
GO

CREATE VIEW babel_3407_view16 AS
WITH babel_3407_with1(avg_age) AS (
    SELECT avg(Age)
    FROM babel_3407_table2
)
SELECT Id, Age, Country
FROM babel_3407_table2, babel_3407_with1
WHERE Age >= babel_3407_with1.avg_age
FOR JSON PATH;
GO

CREATE VIEW babel_3407_view17 AS
WITH babel_3407_with2(avg_age) AS (
    SELECT avg(Age)
    FROM babel_3407_table2
)
SELECT Id, Age, Country 
FROM babel_3407_table2, babel_3407_with2
WHERE Age >= babel_3407_with2.avg_age
ORDER BY Country
FOR JSON PATH;
GO


-- Explicit call to the function
CREATE VIEW explicit_call_view AS
SELECT tsql_query_to_json_text('SELECT 2+2 AS TEST', 1, FALSE,FALSE,NULL);
GO
