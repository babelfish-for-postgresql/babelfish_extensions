create table tb_recomp_11(c11 int primary key, x int)
go
create procedure p_recomp_11 @p int as
select * from tb_recomp_11 where c11 = @p  -- parametrized
select * from tb_recomp_11 where c11 = 0   -- non-parametrized
go

create table tb_recomp_12(c12 int primary key, x int)
go
create procedure p_recomp_12 @p int as
select * from tb_recomp_12 where c12 = @p  -- parametrized
select * from tb_recomp_12 where c12 = 0   -- non-parametrized
go

create table tb_recomp_13(c13 int primary key, x int)
go
create procedure p_recomp_13 @p int as
select * from tb_recomp_13 where c13 = @p  -- parametrized
select * from tb_recomp_13 where c13 = 0   -- non-parametrized
go

create table tb_recomp_21(c21 int primary key, x int)
go
create procedure p_recomp_21 @p int as
select * from tb_recomp_21 where c21 = @p  -- parametrized
select * from tb_recomp_21 where c21 = 0   -- non-parametrized
go

create table tb_recomp_22(c22 int primary key, x int)
go
create procedure p_recomp_22 @p int as
select * from tb_recomp_22 where c22 = @p  -- parametrized
select * from tb_recomp_22 where c22 = 0   -- non-parametrized
go

create table tb_recomp_31(c31 int primary key, x int)
go
create procedure p_recomp_31 @p int as
select * from tb_recomp_31 where c31 = @p  -- parametrized
select * from tb_recomp_31 where c31 = 0   -- non-parametrized
go

create table tb_recomp_32(c32 int primary key, x int)
go
create procedure p_recomp_32 @p int as
select * from tb_recomp_32 where c32 = @p  -- parametrized
select * from tb_recomp_32 where c32 = 0   -- non-parametrized
go

create table tb_recomp_33(c33 int primary key, x int)
go
create procedure p_recomp_33 @p int as
select * from tb_recomp_33 where c33 = @p  -- parametrized
select * from tb_recomp_33 where c33 = 0   -- non-parametrized
go

create table tb_recomp_41(c41 int primary key, x int)
go
create procedure p_recomp_41 @p int 
with recompile
as
select * from tb_recomp_41 where c41 = @p  -- parametrized
select * from tb_recomp_41 where c41 = 0   -- non-parametrized
go

create table tb_recomp_51(c51 int primary key, x int)
go
create procedure p_recomp_51 @p int as
select * from tb_recomp_51 where c51 = @p  -- parametrized
select * from tb_recomp_51 where c51 = 0   -- non-parametrized
exec p_recomp_12 0
exec p_recomp_12 0 with recompile
exec p_recomp_12 0 with recompile, result sets none
exec p_recomp_41 0
exec p_recomp_41 0 with recompile
exec p_recomp_41 0 with result sets none, recompile
go

create table tb_recomp_61(c61 int primary key, x int)
go
-- fails:
create procedure p_recomp_61 @p int 
with recompile, encryption
as
select * from tb_recomp_61 where c61 = @p  -- parametrized
select * from tb_recomp_61 where c61 = 0   -- non-parametrized
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: 'encryption' is not currently supported in Babelfish)~~

-- fails:
create procedure p_recomp_61 @p int 
with recompile, execute as owner
as
select * from tb_recomp_61 where c61 = @p  -- parametrized
select * from tb_recomp_61 where c61 = 0   -- non-parametrized
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: 'EXECUTE AS SELF|OWNER|<user>|<login>' is not currently supported in Babelfish)~~

-- succeeds:
create procedure p_recomp_61 @p int 
with recompile, execute as caller
as
select * from tb_recomp_61 where c61 = @p  -- parametrized
select * from tb_recomp_61 where c61 = 0   -- non-parametrized
go

create table tb_recomp_71(c71 int primary key, x int)
go
create procedure p_recomp_71 @p int
as
select * from tb_recomp_71 where c71 = @p  -- parametrized
select * from tb_recomp_71 where c71 = 0   -- non-parametrized
select set_config('plan_cache_mode', 'force_generic_plan', false) -- change plan_cache mode in proc
select * from tb_recomp_71 where c71 = @p  -- parametrized
select * from tb_recomp_71 where c71 = 0   -- non-parametrized
go

create procedure p_recomp_72 @p int
as
declare @stmt varchar(30) = 'select div_zero = 1/' + convert(varchar,@p)
select * from tb_recomp_71 where c71 = @p  -- parametrized
select * from tb_recomp_71 where c71 = 0   -- non-parametrized
select set_config('plan_cache_mode', 'force_generic_plan', false) -- change plan_cache mode in proc
select * from tb_recomp_71 where c71 = @p  -- parametrized
execute(@stmt) -- force exception
select * from tb_recomp_71 where c71 = 0   -- non-parametrized
go


insert tb_recomp_11 
select *, 0 from generate_series(1,1000)
go
~~ROW COUNT: 1000~~

insert tb_recomp_12
select * from tb_recomp_11
go
~~ROW COUNT: 1000~~

insert tb_recomp_13
select * from tb_recomp_11
go
~~ROW COUNT: 1000~~

insert tb_recomp_21
select * from tb_recomp_11
go
~~ROW COUNT: 1000~~

insert tb_recomp_22
select * from tb_recomp_11
go
~~ROW COUNT: 1000~~

insert tb_recomp_31
select * from tb_recomp_11
go
~~ROW COUNT: 1000~~

insert tb_recomp_32
select * from tb_recomp_11
go
~~ROW COUNT: 1000~~

insert tb_recomp_33
select * from tb_recomp_11
go
~~ROW COUNT: 1000~~

insert tb_recomp_41
select * from tb_recomp_11
go
~~ROW COUNT: 1000~~

insert tb_recomp_51
select * from tb_recomp_11
go
~~ROW COUNT: 1000~~

insert tb_recomp_61
select * from tb_recomp_11
go
~~ROW COUNT: 1000~~

insert tb_recomp_71
select * from tb_recomp_11
go
~~ROW COUNT: 1000~~

