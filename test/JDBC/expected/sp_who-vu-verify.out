/* tests for sp_babelfish_autoformat */
sp_babelfish_autoformat 't_sp_who'
go
~~START~~
varchar#!#varchar#!#varchar
~~END~~


INSERT t_sp_who VALUES (NULL, NULL, NULL)
go
~~ROW COUNT: 1~~


sp_babelfish_autoformat 't_sp_who'
go
~~START~~
varchar#!#varchar#!#varchar
<NULL>#!#<NULL>#!#<NULL>
~~END~~


DELETE t_sp_who
go
~~ROW COUNT: 1~~


INSERT t_sp_who VALUES (1, 'a', cast('01-Feb-2023 11:12:13' AS DATETIME))
go
~~ROW COUNT: 1~~


sp_babelfish_autoformat 't_sp_who'
go
~~START~~
varchar#!#varchar#!#varchar
1#!#a#!#2023-02-01 11:12:13
~~END~~


INSERT t_sp_who VALUES (123456789, 'abcdefghijabcdefghijabcdefghij', cast('02-Jan-2023 11:12:13' AS DATETIME))
go
~~ROW COUNT: 1~~


sp_babelfish_autoformat 't_sp_who'
go
~~START~~
varchar#!#varchar#!#varchar
        1#!#a#!#2023-02-01 11:12:13
123456789#!#abcdefghijabcdefghijabcdefghij#!#2023-01-02 11:12:13
~~END~~


sp_babelfish_autoformat 't_sp_who', @orderby='order by a desc'
go
~~START~~
varchar#!#varchar#!#varchar
123456789#!#abcdefghijabcdefghijabcdefghij#!#2023-01-02 11:12:13
        1#!#a#!#2023-02-01 11:12:13
~~END~~


sp_babelfish_autoformat 't_sp_who', @orderby='order by a desc', @hiddencols='a'
go
~~START~~
varchar#!#varchar
abcdefghijabcdefghijabcdefghij#!#2023-01-02 11:12:13
a#!#2023-02-01 11:12:13
~~END~~


CREATE TABLE #t(a INT, b INT)
INSERT #t VALUES (1, 98765432)
INSERT #t VALUES (2, NULL)
INSERT #t VALUES (NULL, 345)
go
~~ROW COUNT: 1~~

~~ROW COUNT: 1~~

~~ROW COUNT: 1~~


sp_babelfish_autoformat '#t'
go
~~START~~
varchar#!#varchar
1#!#98765432
2#!#<NULL>
<NULL>#!#     345
~~END~~


sp_babelfish_autoformat '[sp_who test table]'
go
~~START~~
varchar#!#varchar
~~END~~


INSERT [sp_who test table] VALUES (123, 987)
INSERT [sp_who test table] VALUES (1, 454)
go
~~ROW COUNT: 1~~

~~ROW COUNT: 1~~


sp_babelfish_autoformat '[sp_who test table]', @hiddencols='d'
go
~~START~~
varchar
     123
       1
~~END~~


sp_babelfish_autoformat '[sp_who test table]', @hiddencols='[d]'
go
~~START~~
varchar
     123
       1
~~END~~


sp_babelfish_autoformat '[sp_who test table]', @hiddencols='[test col]'
go
~~START~~
varchar
987
454
~~END~~


sp_babelfish_autoformat '[sp_who test table]', @orderby = 'ORDER by [test col]'
go
~~START~~
varchar#!#varchar
       1#!#454
     123#!#987
~~END~~


sp_babelfish_autoformat '[sp_who test table]', @hiddencols='[test col]', @orderby = 'ORDER BY d'
go
~~START~~
varchar
454
987
~~END~~


/* negative tests */
sp_babelfish_autoformat NULL
go
~~ERROR (Code: 50000)~~

~~ERROR (Message: Must specify table name)~~


sp_babelfish_autoformat ''
go
~~ERROR (Code: 50000)~~

~~ERROR (Message: Must specify table name)~~


sp_babelfish_autoformat 'nosuchtable'
go
~~ERROR (Code: 50000)~~

~~ERROR (Message: Table or view 'nosuchtable' not found)~~


sp_babelfish_autoformat 'sp_who_myprocedure'
go
~~ERROR (Code: 50000)~~

~~ERROR (Message: 'sp_who_myprocedure' is not a table or view)~~


sp_babelfish_autoformat 't_sp_who', @hiddencols='nosuchcolumn'
go
~~START~~
varchar#!#varchar#!#varchar
        1#!#a#!#2023-02-01 11:12:13
123456789#!#abcdefghijabcdefghijabcdefghij#!#2023-01-02 11:12:13
~~END~~


sp_babelfish_autoformat 't_sp_who', @orderby='a'
go
~~ERROR (Code: 50000)~~

~~ERROR (Message: @orderby parameter must start with 'ORDER BY')~~


sp_babelfish_autoformat 't_sp_who', @orderby='order by nosuchcolumn'
go

sp_babelfish_autoformat 't_sp_who', @orderby='order by nosuchcolumn', @printrc=0
go

sp_babelfish_autoformat 't_sp_who', @orderby='order by nosuchcolumn', @printrc=1
go



/* tests for sp_who */
/* 
 * Since the spid and hostname columns in the output of sp_who have unpredictable values, the tests should avoid showing those.
 * Normally, a workaround for this issue is to call the procedure as INSERT..EXECUTE <proc> and insert the result set into a table
 * and show only the columns that are predictable.
 * However, this does not work for procedures where the final SELECT is inside EXECUTE() -- and that is the case for sp_who.
 * All of this means we cannot actually run sp_who for the normal use cases
 * This test file is created as a .mix file in anticipation of it becoming possible to include full test cases for sp_who
 */
sp_who 0
go
~~START~~
varchar#!#varchar#!#varchar#!#varchar#!#varchar#!#varchar#!#varchar#!#varchar#!#varchar
~~END~~


sp_who '0'
go
~~START~~
varchar#!#varchar#!#varchar#!#varchar#!#varchar#!#varchar#!#varchar#!#varchar#!#varchar
~~END~~


sp_who 'sp_who_login'
go
~~START~~
varchar#!#varchar#!#varchar#!#varchar#!#varchar#!#varchar#!#varchar#!#varchar#!#varchar
~~END~~


sp_who 'sp_who_login', NULL
go
~~START~~
varchar#!#varchar#!#varchar#!#varchar#!#varchar#!#varchar#!#varchar#!#varchar#!#varchar
~~END~~


sp_who 'sp_who_login', ''
go
~~ERROR (Code: 50000)~~

~~ERROR (Message: Parameter @option can only be 'postgres')~~


-- commenting out this test due to unexpected PG connections showing up
--sp_who 'sp_who_login', 'postgres'
go

sp_who 'nosuchlogin'
go
~~ERROR (Code: 50000)~~

~~ERROR (Message: 'nosuchlogin' is not a valid login or you do not have permission.)~~


sp_who @option=NULL, @loginame='sp_who_login'
go
~~START~~
varchar#!#varchar#!#varchar#!#varchar#!#varchar#!#varchar#!#varchar#!#varchar#!#varchar
~~END~~


sp_who @option='', @loginame='sp_who_login'
go
~~ERROR (Code: 50000)~~

~~ERROR (Message: Parameter @option can only be 'postgres')~~


-- commenting out this test due to unexpected PG connections showing up
--sp_who @option='postgres', @loginame='sp_who_login'
go
