-- tsql
CREATE ROLE sp_addrole_r1;
GO

CREATE LOGIN sp_addrole_login WITH PASSWORD = '123';
GO

CREATE USER sp_addrole_user FOR LOGIN sp_addrole_login;
GO

--Throws an error if the argument is empty or contains backslash(\)
EXEC sp_addrole '';
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Name cannot be NULL.)~~


EXEC sp_addrole '\';
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: '\' is not a valid name because it contains invalid characters.)~~


-- Throw error if no argument or more than 2 arguments are passed to sp_addrole procedure
EXEC sp_addrole;
GO
~~ERROR (Code: 201)~~

~~ERROR (Message: procedure sp_addrole expects parameter "@rolname", which was not supplied.)~~


EXEC sp_addrole '','','';
GO
~~ERROR (Code: 8144)~~

~~ERROR (Message: procedure sp_addrole has too many arguments specified.)~~


--If there are 2 arguments then the procedure first checks for whether argument1 name is empty or not
-- If argument is empty throw an error
EXEC sp_addrole '','';
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Name cannot be NULL.)~~


EXEC sp_addrole '','sp_addrole_doesnot_exist';
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Name cannot be NULL.)~~


-- Throw an error if 2nd argument is empty or does not exist
EXEC sp_addrole 'sp_addrole_doesnot_exist','';
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: An object or column name is missing or empty. For SELECT INTO statements, verify each column has a name. For other statements, look for empty alias names. Aliases defined as "" or [] are not allowed. Change the alias to a valid name.)~~


EXEC sp_addrole 'sp_addrole_r1','sp_addrole_doesnot_exist';
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: User, group, or role 'sp_addrole_doesnot_exist' does not exists in the current database.)~~


-- If second argument is not empty and contains in database
-- Throws an error if first argument already exists in DB
EXEC sp_addrole 'sp_addrole_r1','sp_addrole_r1';
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: User, group, or role 'sp_addrole_r1' already exists in the current database.)~~


-- Succesfully executes if first argument does not exist in DB
EXEC sp_addrole 'sp_addrole_r2','sp_addrole_r1';
GO

-- Throws an error when role exists in DB
EXEC sp_addrole 'sp_addrole_r1';
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: User, group, or role 'sp_addrole_r1' already exists in the current database.)~~


EXEC sp_addrole 'sp_addrole_r2';
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: User, group, or role 'sp_addrole_r2' already exists in the current database.)~~


EXEC sp_addrole 'sp_addrole_user';
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: User, group, or role 'sp_addrole_user' already exists in the current database.)~~


-- Creates role even if it contains leading/trailing spaces, special characters(except \)
EXEC sp_addrole '   @sp_addrole_r3   ';
GO

SELECT rolname, type, orig_username, database_name
FROM sys.babelfish_authid_user_ext
WHERE orig_username = '   @sp_addrole_r3   '
GO
~~START~~
varchar#!#char#!#nvarchar#!#nvarchar
master_   @sp_addrole_r3   #!#R#!#   @sp_addrole_r3   #!#master
~~END~~


-- sp_addrole is case insensitive, storing all role values in lower case in DB
EXEC sp_addrole 'SP_ADDROLE_R4';
GO

-- Throws an error when role exists
EXEC sp_addrole 'SP_ADDROLE_R4';
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: User, group, or role 'SP_ADDROLE_R4' already exists in the current database.)~~


EXEC sp_addrole 'sp_addrole_r4';
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: User, group, or role 'sp_addrole_r4' already exists in the current database.)~~


SELECT rolname, type, orig_username, database_name
FROM sys.babelfish_authid_user_ext
WHERE orig_username = 'sp_addrole_r4'
GO
~~START~~
varchar#!#char#!#nvarchar#!#nvarchar
master_sp_addrole_r4#!#R#!#sp_addrole_r4#!#master
~~END~~

