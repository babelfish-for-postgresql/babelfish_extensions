INSERT INTO computed_column_vu_prepare_t1 VALUES('abcd');
SELECT * FROM computed_column_vu_prepare_t1;
GO
~~ROW COUNT: 1~~

~~START~~
nvarchar#!#nvarchar
abcd#!#abc
~~END~~


-- test whether other constraints are working with computed columns
INSERT INTO computed_column_vu_prepare_t1 VALUES('abcd'); -- throws error
GO
~~ERROR (Code: 2627)~~

~~ERROR (Message: duplicate key value violates unique constraint "computed_column_vu_prepare_t1_b_key")~~


INSERT INTO computed_column_vu_prepare_t2 (a,c) VALUES (12, 12);
SELECT * FROM computed_column_vu_prepare_t2;
GO
~~ROW COUNT: 1~~

~~START~~
int#!#int#!#int
12#!#6#!#12
~~END~~


-- should throw error - order matters
CREATE TABLE computed_column_vu_prepare_error (a INT, b  AS a/4 NOT NULL PERSISTED);
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: 'PERSISTED' is not currently supported in Babelfish)~~


-- should throw error if postgres syntax is used in TSQL dialect
CREATE TABLE computed_column_vu_prepare_error (a INT, b NUMERIC GENERATED ALWAYS AS (a/4) stored);
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: syntax error near '(' at line 2 and character position 84)~~

-- should throw error if there is any error in computed column expression
CREATE TABLE computed_column_vu_prepare_error (a NVARCHAR(10), b  AS non_existant_function(a,1,3) UNIQUE NOT NULL);
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: function non_existant_function(nvarchar, integer, integer) does not exist)~~

-- should throw error in case of nested computed columns
CREATE TABLE computed_column_vu_prepare_error (a INT, b AS c, c AS a);
CREATE TABLE computed_column_vu_prepare_error (a INT, b AS b + 1);
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: computed column "c" in table "computed_column_vu_prepare_error" is not allowed to be used in another computed-column definition)~~

-- in case of multiple computed column, the entire statement should be rolled
-- back even when the last one throws error
CREATE TABLE computed_column_vu_prepare_error (a INT, b AS a, c AS b);
SELECT * FROM computed_column_vu_prepare_error;
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: computed column "b" in table "computed_column_vu_prepare_error" is not allowed to be used in another computed-column definition)~~


-- ALTER TABLE... ADD <column_name> AS <computed_column_vu_prepare_expression>
--							  	    ^	[ PERSISTED ] <column constraints>)
ALTER TABLE computed_column_vu_prepare_t1 ADD c INT;
ALTER TABLE computed_column_vu_prepare_t1 ADD d AS c / 4;
INSERT INTO computed_column_vu_prepare_t1(a, c) VALUES ('efgh', 12);
SELECT * FROM computed_column_vu_prepare_t1;
GO
~~ROW COUNT: 1~~

~~START~~
nvarchar#!#nvarchar#!#int#!#int
abcd#!#abc#!#<NULL>#!#<NULL>
efgh#!#efg#!#12#!#3
~~END~~


--should thow error in case of nested computed columns
ALTER TABLE computed_column_vu_prepare_t1 ADD e AS d;
ALTER TABLE computed_column_vu_prepare_t1 ADD E AS e + 1;
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot use generated column "d" in column generation expression)~~


-- should throw error if any of the dependant columns is modified or dropped.
ALTER TABLE computed_column_vu_prepare_t1 DROP column a;
ALTER TABLE computed_column_vu_prepare_t1 ALTER column a VARCHAR;
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot drop a column used by a generated column)~~

-- should throw error as rand is non-deterministic
ALTER TABLE computed_column_vu_prepare_t1 ADD e AS rand() PERSISTED;
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: generation expression is not immutable)~~


-- but rand[seed] should succeed
ALTER TABLE computed_column_vu_prepare_t1 ADD e AS rand(1) PERSISTED;
GO

CREATE TABLE computed_column_vu_prepare_error(a int, b as rand() PERSISTED)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: generation expression is not immutable)~~


--should error out inserting values into computed column
INSERT INTO computed_column_vu_prepare_t3 (DOB,AddDate) values ('01-01-2000','01-01-2000')
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot insert a non-DEFAULT value into column "adddate")~~


ALTER TABLE computed_column_vu_prepare_t3 DROP COLUMN AddDate 
GO

--should fail since getdate is immutable
ALTER TABLE computed_column_vu_prepare_t3 ADD AddDate as GETDATE()
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: generation expression is not immutable)~~


SELECT Designation, DATEDIFF(yy,dobirth,doretirement ) AgeLimit, DOBirth, DORetirement FROM computed_column_vu_prepare_t4
GO
~~START~~
varchar#!#int#!#datetime#!#datetime
DBA#!#60#!#1985-12-13 00:00:00.0#!#2045-12-13 00:00:00.0
DBA#!#60#!#1980-11-18 00:00:00.0#!#2040-11-18 00:00:00.0
Manager#!#65#!#1978-01-19 00:00:00.0#!#2043-01-19 00:00:00.0
Manager#!#65#!#1985-12-13 00:00:00.0#!#2050-12-13 00:00:00.0
Developer#!#60#!#1975-07-23 00:00:00.0#!#2035-07-23 00:00:00.0
~~END~~


SELECT * FROM computed_column_vu_prepare_t5
GO
~~START~~
int#!#int#!#int
840#!#12#!#70
805#!#6#!#134
846#!#3#!#282
88#!#0#!#<NULL>
90#!#15#!#6
~~END~~


SELECT * FROM computed_column_vu_prepare_t6
GO
~~START~~
int#!#tinyint#!#int
840#!#12#!#0
805#!#6#!#5
846#!#13#!#6
88#!#7#!#8
90#!#15#!#0
~~END~~


--using a UDF as computed column
--will fail with expression immutabe error
CREATE TABLE computed_column_vu_prepare_t7
  (
  EmpNumb INT NOT NULL,
  Designation VARCHAR(50) NOT NULL,
  LeaveBalance AS (computed_column_vu_prepare_func1(EmpNumb))
  )
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: generation expression is not immutable)~~


--immutable expression
CREATE TABLE computed_column_vu_prepare_t8
(
  FirstName VARCHAR(20),
  LastName VARCHAR(20),
  FullName AS CONCAT(FirstName,' ',LastName)
)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: generation expression is not immutable)~~


SELECT * FROM computed_column_vu_prepare_t9
GO
~~START~~
int#!#float#!#varchar
1#!#1.0#!#Testing1
2#!#2.0#!#Testing2
3#!#3.0#!#Testing3
4#!#4.0#!#Testing4
5#!#5.0#!#Testing5
~~END~~


EXEC computed_column_vu_prepare_p1
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot use generated column "b" in column generation expression)~~


EXEC computed_column_vu_prepare_p2
GO

SELECT * FROM computed_column_vu_prepare_t9
GO
~~START~~
int#!#float#!#varchar#!#int
1#!#1.0#!#Testing1#!#0
2#!#2.0#!#Testing2#!#0
3#!#3.0#!#Testing3#!#0
4#!#4.0#!#Testing4#!#1
5#!#5.0#!#Testing5#!#1
~~END~~

