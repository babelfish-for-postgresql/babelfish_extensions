EXEC test_identity_vu_prepare_p1
GO
~~ROW COUNT: 1~~

~~START~~
int
2
~~END~~

~~START~~
numeric
2
~~END~~

~~START~~
numeric
2
~~END~~

~~START~~
numeric
2
~~END~~


CREATE VIEW scope_identity_view AS
SELECT sys.babelfish_get_scope_identity()
GO

-- SCOPE_IDENTITY should return NULL because insert into t1 happened inside a function
-- Validated the same behaviour in SQLServer
SELECT MAX(id) as MaximumUsedIdentity FROM test_identity_vu_prepare_t1
SELECT SCOPE_IDENTITY()
SELECT @@IDENTITY
SELECT IDENT_CURRENT('test_identity_vu_prepare_t1')
SELECT * FROM scope_identity_view
GO
~~START~~
int
2
~~END~~

~~START~~
numeric
<NULL>
~~END~~

~~START~~
numeric
2
~~END~~

~~START~~
numeric
2
~~END~~

~~START~~
bigint
<NULL>
~~END~~


EXEC test_identity_vu_prepare_p1
GO
~~ROW COUNT: 1~~

~~START~~
int
3
~~END~~

~~START~~
numeric
3
~~END~~

~~START~~
numeric
3
~~END~~

~~START~~
numeric
3
~~END~~


SELECT * FROM test_identity_vu_prepare_t1 ORDER BY id
GO
~~START~~
int#!#nvarchar
1#!#Nirmit_Shah
2#!#Nirmit_Shah
3#!#Nirmit_Shah
~~END~~


-- SCOPE_IDENTITY should not be the same as IDENTITY
-- SCOPE_IDENTITY matches max(id) in t2
-- IDENTITY is the value from trigger
-- validated same behaviour in SQLServer
EXEC test_identity_vu_prepare_p2
GO
~~ROW COUNT: 1~~

~~ROW COUNT: 1~~

~~START~~
smallint
5
~~END~~

~~START~~
numeric
5
~~END~~

~~START~~
numeric
120
~~END~~

~~START~~
numeric
5
~~END~~


-- insert into t3, no triggers during insert into t3
-- all identities should be the same
-- validated in SQL Server
EXEC test_identity_vu_prepare_p3
GO
~~ROW COUNT: 1~~

~~START~~
int
125
~~END~~

~~START~~
numeric
125
~~END~~

~~START~~
numeric
125
~~END~~

~~START~~
numeric
125
~~END~~


SELECT * FROM test_identity_vu_prepare_t2 ORDER BY id
GO
~~START~~
smallint#!#nvarchar
1#!#Babelfish1
2#!#Babelfish2
3#!#Babelfish3
4#!#Babelfish12
5#!#Babelfish4
~~END~~

SELECT * FROM test_identity_vu_prepare_t3 ORDER BY DepartmentID
GO
~~START~~
int#!#varchar
100#!#Babelfish6
105#!#Babelfish7
110#!#Babelfish8
115#!#Babelfish11
120#!#Babelfish11
125#!#Babelfish5
~~END~~


SELECT test_identity_vu_prepare_func1()
GO
~~START~~
tinyint
3
~~END~~


SELECT test_identity_vu_prepare_func2()
GO
~~START~~
tinyint
5
~~END~~


SELECT test_identity_vu_prepare_func3()
GO
~~START~~
tinyint
125
~~END~~


SELECT * FROM test_identity_vu_prepare_t4 ORDER BY Name
GO
~~START~~
varchar#!#int
Babelfish13#!#21
Babelfish14#!#20
Babelfish15#!#23
~~END~~


-- SCOPE_IDENTITY is NULL because all INSERTs so far happened inside a function
-- Similarly, this was validated against SQL Server
SELECT SCOPE_IDENTITY()
SELECT @@IDENTITY
SELECT IDENT_CURRENT('test_identity_vu_prepare_t4')
GO
~~START~~
numeric
<NULL>
~~END~~

~~START~~
numeric
125
~~END~~

~~START~~
numeric
<NULL>
~~END~~


ALTER TABLE test_identity_vu_prepare_t4 ADD id INT IDENTITY(1,1) NOT NULL
GO

SELECT * FROM test_identity_vu_prepare_t4 ORDER BY Name
GO
~~START~~
varchar#!#int#!#int
Babelfish13#!#21#!#1
Babelfish14#!#20#!#2
Babelfish15#!#23#!#3
~~END~~


SELECT MAX(id) as MaximumUsedIdentity FROM test_identity_vu_prepare_t4
SELECT SCOPE_IDENTITY()
SELECT @@IDENTITY
SELECT IDENT_CURRENT('test_identity_vu_prepare_t4')
GO
~~START~~
int
3
~~END~~

~~START~~
numeric
3
~~END~~

~~START~~
numeric
3
~~END~~

~~START~~
numeric
3
~~END~~


SELECT * FROM test_identity_vu_prepare_t5 ORDER BY Name
GO
~~START~~
varchar#!#int
Babelfish16#!#21
Babelfish17#!#20
Babelfish18#!#23
~~END~~


SELECT test_identity_vu_prepare_func4()
GO
~~START~~
tinyint
<NULL>
~~END~~


EXEC test_identity_vu_prepare_p4
GO

SELECT test_identity_vu_prepare_func4()
GO
~~START~~
tinyint
3
~~END~~


INSERT test_identity_vu_prepare_t6 
OUTPUT INSERTED.ID
VALUES ('Babelfish5'),('Babelfish6'),('Babelfish7')
GO
~~START~~
int
1
2
3
~~END~~


EXEC test_identity_vu_prepare_p5
GO
~~START~~
int
4
~~END~~

