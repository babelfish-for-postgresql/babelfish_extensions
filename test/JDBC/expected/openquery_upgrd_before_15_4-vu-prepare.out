-- psql
SET client_min_messages = 'error';
CREATE EXTENSION IF NOT EXISTS tds_fdw;
GO

-- tsql
-- Add localhost as linked server
EXEC sp_addlinkedserver  @server = N'bbf_server', @srvproduct=N'', @provider=N'SQLNCLI', @datasrc=N'localhost', @catalog=N'master'
GO

-- Add jdbc_user as linked server login
EXEC sp_addlinkedsrvlogin @rmtsrvname = 'bbf_server', @useself = 'FALSE', @rmtuser = 'jdbc_user', @rmtpassword = '12345678'
GO

-- Create a non-existing linked server to test connect timeout
EXEC sp_addlinkedserver  @server = N'bbf_server_2', @srvproduct=N'', @provider=N'SQLNCLI', @datasrc='1.2.3.4', @catalog=N'master'
GO

EXEC sp_addlinkedsrvlogin @rmtsrvname = 'bbf_server_2', @useself = 'FALSE', @rmtuser = 'jdbc_user', @rmtpassword = '12345678'
GO

-- Test sp_serveroption procedure
EXEC sp_addlinkedserver  @server = N'bbf_server_1', @srvproduct=N'', @provider=N'SQLNCLI', @datasrc=N'localhost', @catalog=N'master'
GO

-- Add jdbc_user as linked server login
EXEC sp_addlinkedsrvlogin @rmtsrvname = 'bbf_server_1', @useself = 'FALSE', @rmtuser = 'jdbc_user', @rmtpassword = '12345678'
GO

-- sp_serveroption with invalid server name. Should throw error
EXEC sp_serveroption @server='invalid_server', @optname='query timeout', @optvalue='1'
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: The server 'invalid_server' does not exist. Use sp_linkedservers to show available servers.)~~


EXEC sp_serveroption @server='invalid_server', @optname='connect timeout', @optvalue='1'
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: The server 'invalid_server' does not exist. Use sp_linkedservers to show available servers.)~~


-- sp_serveroption with invalid server option. Should throw error
EXEC sp_serveroption @server='bbf_server_1', @optname='invalid option', @optvalue='1'
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Invalid option provided for sp_serveroption. Only 'query timeout' and 'connect timeout' are currently supported.)~~


-- sp_serveroption with server as NULL. Should throw error
EXEC sp_serveroption @server=NULL, @optname='query timeout', @optvalue='1'
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: @server parameter cannot be NULL)~~


EXEC sp_serveroption @server=NULL, @optname='connect timeout', @optvalue='1'
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: @server parameter cannot be NULL)~~


-- sp_serveroption with optname as NULL. Should throw error
EXEC sp_serveroption @server='bbf_server_1', @optname=NULL, @optvalue='1'
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: @optname parameter cannot be NULL)~~


-- sp_serveroption with optvalue as NULL. Should throw error
EXEC sp_serveroption @server='bbf_server_1', @optname='query timeout', @optvalue=NULL
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: @optvalue parameter cannot be NULL)~~


EXEC sp_serveroption @server='bbf_server_1', @optname='connect timeout', @optvalue=NULL
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: @optvalue parameter cannot be NULL)~~


-- sp_serveroption with negative optvalue
EXEC sp_serveroption @server='bbf_server_1', @optname='query timeout', @optvalue='-5'
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Invalid option value for query timeout)~~


EXEC sp_serveroption @server='bbf_server_1', @optname='connect timeout', @optvalue='-5'
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Invalid option value for connect timeout)~~


-- sp_serveroption with float optvalue. should throw error
EXEC sp_serveroption @server='bbf_server_1', @optname='query timeout', @optvalue='1.0001'
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Invalid option value for query timeout)~~


EXEC sp_serveroption @server='bbf_server_1', @optname='connect timeout', @optvalue='1.0001'
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Invalid option value for connect timeout)~~


-- sp_serveroption with optvalue greater than INT_MAX. should throw error
EXEC sp_serveroption @server='bbf_server_1', @optname='query timeout', @optvalue='2147483648'
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: query timeout value provided is out of range)~~


EXEC sp_serveroption @server='bbf_server_1', @optname='connect timeout', @optvalue='2147483648'
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: connect timeout value provided is out of range)~~


-- sp_serveroption with optvalue containing characters other than 0-9. should throw error
EXEC sp_serveroption @server='bbf_server_1', @optname='query timeout', @optvalue='0abdejc'
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Invalid option value for query timeout)~~


EXEC sp_serveroption @server='bbf_server_1', @optname='connect timeout', @optvalue='0abdejc'
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Invalid option value for connect timeout)~~


-- sp_serveroption with optvalue = INT_MAX
EXEC sp_serveroption @server='bbf_server_1', @optname='query timeout', @optvalue='2147483647'
GO

EXEC sp_serveroption @server='bbf_server_1', @optname='connect timeout', @optvalue='2147483647'
GO

-- sp_serveroption with optvalue containing leading zeroes
EXEC sp_serveroption @server='bbf_server_1', @optname='query timeout', @optvalue='0000002'
GO

EXEC sp_serveroption @server='bbf_server_1', @optname='connect timeout', @optvalue='0000002'
GO

-- optname is case insensitive
EXEC sp_serveroption @server='bbf_server_1', @optname='queRY tiMEoUt', @optvalue='5'
GO

EXEC sp_serveroption @server='bbf_server_1', @optname='conNeCt tiMEoUt', @optvalue='5'
GO

-- sp_serveroption with valid server, optname and optvalue
EXEC sp_serveroption @server='bbf_server_1', @optname='query timeout', @optvalue='1'
GO

EXEC sp_serveroption @server='bbf_server_2', @optname='connect timeout', @optvalue='1'
GO

-- check if the linked servers added above are reflected in babelfish_server_options catalog
SELECT servername, query_timeout, connect_timeout FROM babelfish_server_options WHERE servername = 'bbf_server' OR servername = 'bbf_server_1' OR servername = 'bbf_server_2'
GO
~~START~~
varchar#!#int#!#int
bbf_server#!#0#!#0
bbf_server_2#!#0#!#1
bbf_server_1#!#1#!#5
~~END~~


-- Create a view dependent on OPENQUERY
-- Commenting this out until we figure out a way to support CREATE VIEW with OPENQUERY in MVU
-- CREATE VIEW openquery_vu_prepare__openquery_view AS SELECT * FROM OPENQUERY(bbf_server, 'SELECT 1')
GO

CREATE PROCEDURE openquery_upgrd_vu_prepare__openquery_proc AS SELECT * FROM OPENQUERY(bbf_server, 'SELECT 2')
GO

CREATE FUNCTION openquery_upgrd_vu_prepare__openquery_func()
RETURNS INT
AS
BEGIN
DECLARE @i int
SELECT @i = COUNT(*) FROM OPENQUERY(bbf_server, 'SELECT 2')
RETURN @i
END
GO
