drop table if exists babel_3293_t1
go

drop table if exists babel_3293_t2
go

drop table if exists babel_3293_t3
go

create table babel_3293_t1(a1 int PRIMARY KEY, b1 int)
go

create index index_babel_3293_t1_b1 on babel_3293_t1(b1)
go

create table babel_3293_t2(a2 int PRIMARY KEY, b2 int)
go

create index index_babel_3293_t2_b2 on babel_3293_t2(b2)
go

create table babel_3293_t3(a3 int PRIMARY KEY, b3 int)
go

select set_config('babelfishpg_tsql.explain_costs', 'off', false)
go
~~START~~
text
off
~~END~~


select set_config('babelfishpg_tsql.enable_pg_hint', 'on', false);
go
~~START~~
text
on
~~END~~


set babelfish_showplan_all on
go

/*
 * Run a SELECT query joining two tables without any join hints to ensure that un-hinted queries still work.
 * This also ensures that when the SELECT query is not hinted it produces a different plan(hash join)
 * than the other join plans that we're hinting in the queries below. This verifies that the next set of tests are actually valid.
 */
select * from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1
go
~~START~~
text
Query Text: select * from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1
Hash Join
  Hash Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
  ->  Bitmap Heap Scan on babel_3293_t1
        Recheck Cond: (b1 = 1)
        ->  Bitmap Index Scan on index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210
              Index Cond: (b1 = 1)
  ->  Hash
        ->  Bitmap Heap Scan on babel_3293_t2
              Recheck Cond: (b2 = 1)
              ->  Bitmap Index Scan on index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e
                    Index Cond: (b2 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 173.805 ms
~~END~~


/*
 * Give the hints in the queries to follow a specified join plan.
 * The query plan should now use the specified join plan instead of hash join it uses in the un-hinted test above.
 */
select * from babel_3293_t1 inner merge join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1
go
~~START~~
text
Query Text: select/*+ mergejoin(babel_3293_t1 babel_3293_t2) leading(babel_3293_t1 babel_3293_t2)*/ * from babel_3293_t1 inner       join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1
Merge Join
  Merge Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
  ->  Sort
        Sort Key: babel_3293_t1.a1
        ->  Bitmap Heap Scan on babel_3293_t1
              Recheck Cond: (b1 = 1)
              ->  Bitmap Index Scan on index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210
                    Index Cond: (b1 = 1)
  ->  Sort
        Sort Key: babel_3293_t2.a2
        ->  Bitmap Heap Scan on babel_3293_t2
              Recheck Cond: (b2 = 1)
              ->  Bitmap Index Scan on index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e
                    Index Cond: (b2 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.835 ms
~~END~~


select * from babel_3293_t1 t1 inner merge join babel_3293_t2 t2 on t1.a1 = t2.a2 where b1 = 1 and b2 = 1
go
~~START~~
text
Query Text: select/*+ mergejoin(t1 t2) leading(t1 t2)*/ * from babel_3293_t1 t1 inner       join babel_3293_t2 t2 on t1.a1 = t2.a2 where b1 = 1 and b2 = 1
Merge Join
  Merge Cond: (t1.a1 = t2.a2)
  ->  Sort
        Sort Key: t1.a1
        ->  Bitmap Heap Scan on babel_3293_t1 t1
              Recheck Cond: (b1 = 1)
              ->  Bitmap Index Scan on index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210
                    Index Cond: (b1 = 1)
  ->  Sort
        Sort Key: t2.a2
        ->  Bitmap Heap Scan on babel_3293_t2 t2
              Recheck Cond: (b2 = 1)
              ->  Bitmap Index Scan on index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e
                    Index Cond: (b2 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 26.015 ms
~~END~~


select * from babel_3293_t1 left outer loop join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1
go
~~START~~
text
Query Text: select/*+ nestloop(babel_3293_t1 babel_3293_t2) leading(babel_3293_t1 babel_3293_t2)*/ * from babel_3293_t1 left outer      join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1
Nested Loop
  Join Filter: (babel_3293_t1.a1 = babel_3293_t2.a2)
  ->  Bitmap Heap Scan on babel_3293_t1
        Recheck Cond: (b1 = 1)
        ->  Bitmap Index Scan on index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210
              Index Cond: (b1 = 1)
  ->  Materialize
        ->  Bitmap Heap Scan on babel_3293_t2
              Recheck Cond: (b2 = 1)
              ->  Bitmap Index Scan on index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e
                    Index Cond: (b2 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 43.074 ms
~~END~~


select * from BABEL_3293_t1 LeFt ouTer LOOP join Babel_3293_T2 on BABEL_3293_t1.a1 = BABEL_3293_t2.a2 where b1 = 1 and b2 = 1
go
~~START~~
text
Query Text: select/*+ nestloop(babel_3293_t1 babel_3293_t2) leading(babel_3293_t1 babel_3293_t2)*/ * from BABEL_3293_t1 LeFt ouTer      join Babel_3293_T2 on BABEL_3293_t1.a1 = BABEL_3293_t2.a2 where b1 = 1 and b2 = 1
Nested Loop
  Join Filter: (babel_3293_t1.a1 = babel_3293_t2.a2)
  ->  Bitmap Heap Scan on babel_3293_t1
        Recheck Cond: (b1 = 1)
        ->  Bitmap Index Scan on index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210
              Index Cond: (b1 = 1)
  ->  Materialize
        ->  Bitmap Heap Scan on babel_3293_t2
              Recheck Cond: (b2 = 1)
              ->  Bitmap Index Scan on index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e
                    Index Cond: (b2 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.532 ms
~~END~~


select * from babel_3293_t1 with(index(index_babel_3293_t1_b1)) join babel_3293_t2 (index(index_babel_3293_t2_b2)) on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1 -- Join query with just table hints
go
~~START~~
text
Query Text: select/*+ indexscan(babel_3293_t1 index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210) indexscan(babel_3293_t2 index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e) */ * from babel_3293_t1                                     join babel_3293_t2                                 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1
Hash Join
  Hash Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
  ->  Index Scan using index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210 on babel_3293_t1
        Index Cond: (b1 = 1)
  ->  Hash
        ->  Index Scan using index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e on babel_3293_t2
              Index Cond: (b2 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 1.710 ms
~~END~~


-- Queries with multiple joins
select * from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 join babel_3293_t3 on babel_3293_t2.a2 = babel_3293_t3.a3 where b1 = 1 and b2 = 1 and b3 = 1
go
~~START~~
text
Query Text: select * from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 join babel_3293_t3 on babel_3293_t2.a2 = babel_3293_t3.a3 where b1 = 1 and b2 = 1 and b3 = 1
Nested Loop
  Join Filter: (babel_3293_t1.a1 = babel_3293_t3.a3)
  ->  Hash Join
        Hash Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
        ->  Bitmap Heap Scan on babel_3293_t1
              Recheck Cond: (b1 = 1)
              ->  Bitmap Index Scan on index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210
                    Index Cond: (b1 = 1)
        ->  Hash
              ->  Bitmap Heap Scan on babel_3293_t2
                    Recheck Cond: (b2 = 1)
                    ->  Bitmap Index Scan on index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e
                          Index Cond: (b2 = 1)
  ->  Index Scan using babel_3293_t3_pkey on babel_3293_t3
        Index Cond: (a3 = babel_3293_t2.a2)
        Filter: (b3 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.698 ms
~~END~~


select * from babel_3293_t1 left outer merge join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 join babel_3293_t3 on babel_3293_t1.a1 = babel_3293_t3.a3
go
~~START~~
text
Query Text: select/*+ mergejoin(babel_3293_t1 babel_3293_t2) leading(babel_3293_t1 babel_3293_t2)*/ * from babel_3293_t1 left outer       join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 join babel_3293_t3 on babel_3293_t1.a1 = babel_3293_t3.a3
Nested Loop
  ->  Merge Left Join
        Merge Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
        ->  Index Scan using babel_3293_t1_pkey on babel_3293_t1
        ->  Index Scan using babel_3293_t2_pkey on babel_3293_t2
  ->  Index Scan using babel_3293_t3_pkey on babel_3293_t3
        Index Cond: (a3 = babel_3293_t1.a1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.987 ms
~~END~~


select * from babel_3293_t1 left outer merge join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 join babel_3293_t3 on babel_3293_t2.a2 = babel_3293_t3.a3  where b1 = 1 and b2 = 1 and b3 = 1
go
~~START~~
text
Query Text: select/*+ mergejoin(babel_3293_t1 babel_3293_t2) leading(babel_3293_t1 babel_3293_t2)*/ * from babel_3293_t1 left outer       join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 join babel_3293_t3 on babel_3293_t2.a2 = babel_3293_t3.a3  where b1 = 1 and b2 = 1 and b3 = 1
Nested Loop
  ->  Merge Join
        Merge Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
        ->  Sort
              Sort Key: babel_3293_t1.a1
              ->  Bitmap Heap Scan on babel_3293_t1
                    Recheck Cond: (b1 = 1)
                    ->  Bitmap Index Scan on index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210
                          Index Cond: (b1 = 1)
        ->  Sort
              Sort Key: babel_3293_t2.a2
              ->  Bitmap Heap Scan on babel_3293_t2
                    Recheck Cond: (b2 = 1)
                    ->  Bitmap Index Scan on index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e
                          Index Cond: (b2 = 1)
  ->  Index Scan using babel_3293_t3_pkey on babel_3293_t3
        Index Cond: (a3 = babel_3293_t1.a1)
        Filter: (b3 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.324 ms
~~END~~


select * from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 inner merge join babel_3293_t3 on babel_3293_t2.a2 = babel_3293_t3.a3 where b1 = 1 and b2 = 1 and b3 = 1
go
~~START~~
text
Query Text: select/*+ mergejoin(babel_3293_t1 babel_3293_t2 babel_3293_t3) leading(babel_3293_t1 babel_3293_t2 babel_3293_t3)*/ * from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 inner       join babel_3293_t3 on babel_3293_t2.a2 = babel_3293_t3.a3 where b1 = 1 and b2 = 1 and b3 = 1
Merge Join
  Merge Cond: (babel_3293_t1.a1 = babel_3293_t3.a3)
  ->  Sort
        Sort Key: babel_3293_t1.a1
        ->  Hash Join
              Hash Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
              ->  Bitmap Heap Scan on babel_3293_t1
                    Recheck Cond: (b1 = 1)
                    ->  Bitmap Index Scan on index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210
                          Index Cond: (b1 = 1)
              ->  Hash
                    ->  Bitmap Heap Scan on babel_3293_t2
                          Recheck Cond: (b2 = 1)
                          ->  Bitmap Index Scan on index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e
                                Index Cond: (b2 = 1)
  ->  Sort
        Sort Key: babel_3293_t3.a3
        ->  Seq Scan on babel_3293_t3
              Filter: (b3 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.601 ms
~~END~~


select * from babel_3293_t1 left outer loop join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 inner loop join babel_3293_t3 on babel_3293_t2.a2 = babel_3293_t3.a3 where b1 = 1 and b2 = 1 and b3 = 1
go
~~START~~
text
Query Text: select/*+ nestloop(babel_3293_t1 babel_3293_t2) nestloop(babel_3293_t1 babel_3293_t2 babel_3293_t3) leading(babel_3293_t1 babel_3293_t2 babel_3293_t3)*/ * from babel_3293_t1 left outer      join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 inner      join babel_3293_t3 on babel_3293_t2.a2 = babel_3293_t3.a3 where b1 = 1 and b2 = 1 and b3 = 1
Nested Loop
  Join Filter: (babel_3293_t1.a1 = babel_3293_t3.a3)
  ->  Nested Loop
        Join Filter: (babel_3293_t1.a1 = babel_3293_t2.a2)
        ->  Bitmap Heap Scan on babel_3293_t1
              Recheck Cond: (b1 = 1)
              ->  Bitmap Index Scan on index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210
                    Index Cond: (b1 = 1)
        ->  Materialize
              ->  Bitmap Heap Scan on babel_3293_t2
                    Recheck Cond: (b2 = 1)
                    ->  Bitmap Index Scan on index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e
                          Index Cond: (b2 = 1)
  ->  Index Scan using babel_3293_t3_pkey on babel_3293_t3
        Index Cond: (a3 = babel_3293_t2.a2)
        Filter: (b3 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.372 ms
~~END~~


select * from babel_3293_t1 left outer merge join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 inner loop join babel_3293_t3 on babel_3293_t2.a2 = babel_3293_t3.a3 where b1 = 1 and b2 = 1 and b3 = 1
go
~~START~~
text
Query Text: select/*+ mergejoin(babel_3293_t1 babel_3293_t2) nestloop(babel_3293_t1 babel_3293_t2 babel_3293_t3) leading(babel_3293_t1 babel_3293_t2 babel_3293_t3)*/ * from babel_3293_t1 left outer       join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 inner      join babel_3293_t3 on babel_3293_t2.a2 = babel_3293_t3.a3 where b1 = 1 and b2 = 1 and b3 = 1
Nested Loop
  Join Filter: (babel_3293_t1.a1 = babel_3293_t3.a3)
  ->  Merge Join
        Merge Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
        ->  Sort
              Sort Key: babel_3293_t1.a1
              ->  Bitmap Heap Scan on babel_3293_t1
                    Recheck Cond: (b1 = 1)
                    ->  Bitmap Index Scan on index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210
                          Index Cond: (b1 = 1)
        ->  Sort
              Sort Key: babel_3293_t2.a2
              ->  Bitmap Heap Scan on babel_3293_t2
                    Recheck Cond: (b2 = 1)
                    ->  Bitmap Index Scan on index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e
                          Index Cond: (b2 = 1)
  ->  Index Scan using babel_3293_t3_pkey on babel_3293_t3
        Index Cond: (a3 = babel_3293_t2.a2)
        Filter: (b3 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.319 ms
~~END~~


select * from babel_3293_t1 t1 left outer merge join babel_3293_t2 t2 on t1.a1 = t2.a2 inner loop join babel_3293_t3 t3 on t2.a2 = t3.a3 where b1 = 1 and b2 = 1 and b3 = 1
go
~~START~~
text
Query Text: select/*+ mergejoin(t1 t2) nestloop(t1 t2 t3) leading(t1 t2 t3)*/ * from babel_3293_t1 t1 left outer       join babel_3293_t2 t2 on t1.a1 = t2.a2 inner      join babel_3293_t3 t3 on t2.a2 = t3.a3 where b1 = 1 and b2 = 1 and b3 = 1
Nested Loop
  Join Filter: (t1.a1 = t3.a3)
  ->  Merge Join
        Merge Cond: (t1.a1 = t2.a2)
        ->  Sort
              Sort Key: t1.a1
              ->  Bitmap Heap Scan on babel_3293_t1 t1
                    Recheck Cond: (b1 = 1)
                    ->  Bitmap Index Scan on index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210
                          Index Cond: (b1 = 1)
        ->  Sort
              Sort Key: t2.a2
              ->  Bitmap Heap Scan on babel_3293_t2 t2
                    Recheck Cond: (b2 = 1)
                    ->  Bitmap Index Scan on index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e
                          Index Cond: (b2 = 1)
  ->  Index Scan using babel_3293_t3_pkey on babel_3293_t3 t3
        Index Cond: (a3 = t2.a2)
        Filter: (b3 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 13.399 ms
~~END~~


select * from babel_3293_t1, babel_3293_t2 inner merge join babel_3293_t3 on babel_3293_t2.a2 = babel_3293_t3.a3 where babel_3293_t1.a1=babel_3293_t3.a3
go
~~START~~
text
Query Text: select/*+ mergejoin(babel_3293_t1 babel_3293_t2 babel_3293_t3) leading(babel_3293_t1 babel_3293_t2 babel_3293_t3)*/ * from babel_3293_t1, babel_3293_t2 inner       join babel_3293_t3 on babel_3293_t2.a2 = babel_3293_t3.a3 where babel_3293_t1.a1=babel_3293_t3.a3
Merge Join
  Merge Cond: (babel_3293_t2.a2 = babel_3293_t3.a3)
  ->  Merge Join
        Merge Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
        ->  Index Scan using babel_3293_t1_pkey on babel_3293_t1
        ->  Index Scan using babel_3293_t2_pkey on babel_3293_t2
  ->  Index Scan using babel_3293_t3_pkey on babel_3293_t3
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 8.392 ms
~~END~~


select * from babel_3293_t1 t1, babel_3293_t2 t2 inner merge join babel_3293_t3 t3 on t2.a2 = t3.a3 where t1.a1 = t3.a3
go
~~START~~
text
Query Text: select/*+ mergejoin(t1 t2 t3) leading(t1 t2 t3)*/ * from babel_3293_t1 t1, babel_3293_t2 t2 inner       join babel_3293_t3 t3 on t2.a2 = t3.a3 where t1.a1 = t3.a3
Merge Join
  Merge Cond: (t2.a2 = t3.a3)
  ->  Merge Join
        Merge Cond: (t1.a1 = t2.a2)
        ->  Index Scan using babel_3293_t1_pkey on babel_3293_t1 t1
        ->  Index Scan using babel_3293_t2_pkey on babel_3293_t2 t2
  ->  Index Scan using babel_3293_t3_pkey on babel_3293_t3 t3
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.727 ms
~~END~~


select * from babel_3293_t1 t1, babel_3293_t2 t2 inner hash join babel_3293_t3 t3 on t2.a2 = t3.a3
go
~~START~~
text
Query Text: select/*+ hashjoin(t1 t2 t3) leading(t1 t2 t3)*/ * from babel_3293_t1 t1, babel_3293_t2 t2 inner      join babel_3293_t3 t3 on t2.a2 = t3.a3
Hash Join
  Hash Cond: (t2.a2 = t3.a3)
  ->  Nested Loop
        ->  Seq Scan on babel_3293_t1 t1
        ->  Materialize
              ->  Seq Scan on babel_3293_t2 t2
  ->  Hash
        ->  Seq Scan on babel_3293_t3 t3
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.304 ms
~~END~~


select * from BABEL_3293_t1 t1 left outer MERGE join BaBeL_3293_T2 t2 on t1.a1 = t2.a2 InNeR LOOP JOIN bABEL_3293_t3 t3 on t2.a2 = t3.a3 where b1 = 1 and b2 = 1 and b3 = 1
go
~~START~~
text
Query Text: select/*+ mergejoin(t1 t2) nestloop(t1 t2 t3) leading(t1 t2 t3)*/ * from BABEL_3293_t1 t1 left outer       join BaBeL_3293_T2 t2 on t1.a1 = t2.a2 InNeR      JOIN bABEL_3293_t3 t3 on t2.a2 = t3.a3 where b1 = 1 and b2 = 1 and b3 = 1
Nested Loop
  Join Filter: (t1.a1 = t3.a3)
  ->  Merge Join
        Merge Cond: (t1.a1 = t2.a2)
        ->  Sort
              Sort Key: t1.a1
              ->  Bitmap Heap Scan on babel_3293_t1 t1
                    Recheck Cond: (b1 = 1)
                    ->  Bitmap Index Scan on index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210
                          Index Cond: (b1 = 1)
        ->  Sort
              Sort Key: t2.a2
              ->  Bitmap Heap Scan on babel_3293_t2 t2
                    Recheck Cond: (b2 = 1)
                    ->  Bitmap Index Scan on index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e
                          Index Cond: (b2 = 1)
  ->  Index Scan using babel_3293_t3_pkey on babel_3293_t3 t3
        Index Cond: (a3 = t2.a2)
        Filter: (b3 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.720 ms
~~END~~


-- Join hints through option clause
select * from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1 option(hash join)
go
~~START~~
text
Query Text: select/*+ set(enable_nestloop off) set(enable_mergejoin off) */ * from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1                  
Hash Join
  Hash Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
  ->  Bitmap Heap Scan on babel_3293_t1
        Recheck Cond: (b1 = 1)
        ->  Bitmap Index Scan on index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210
              Index Cond: (b1 = 1)
  ->  Hash
        ->  Bitmap Heap Scan on babel_3293_t2
              Recheck Cond: (b2 = 1)
              ->  Bitmap Index Scan on index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e
                    Index Cond: (b2 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 6.984 ms
~~END~~


select * from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1 option(merge join)
go
~~START~~
text
Query Text: select/*+ set(enable_nestloop off) set(enable_hashjoin off) */ * from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1                   
Merge Join
  Merge Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
  ->  Sort
        Sort Key: babel_3293_t1.a1
        ->  Bitmap Heap Scan on babel_3293_t1
              Recheck Cond: (b1 = 1)
              ->  Bitmap Index Scan on index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210
                    Index Cond: (b1 = 1)
  ->  Sort
        Sort Key: babel_3293_t2.a2
        ->  Bitmap Heap Scan on babel_3293_t2
              Recheck Cond: (b2 = 1)
              ->  Bitmap Index Scan on index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e
                    Index Cond: (b2 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.261 ms
~~END~~


select * from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1 option(loop join)
go
~~START~~
text
Query Text: select/*+ set(enable_hashjoin off) set(enable_mergejoin off) */ * from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1                  
Nested Loop
  Join Filter: (babel_3293_t1.a1 = babel_3293_t2.a2)
  ->  Bitmap Heap Scan on babel_3293_t1
        Recheck Cond: (b1 = 1)
        ->  Bitmap Index Scan on index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210
              Index Cond: (b1 = 1)
  ->  Materialize
        ->  Bitmap Heap Scan on babel_3293_t2
              Recheck Cond: (b2 = 1)
              ->  Bitmap Index Scan on index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e
                    Index Cond: (b2 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.253 ms
~~END~~


select * from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 join babel_3293_t3 on babel_3293_t2.a2 = babel_3293_t3.a3 where b1 = 1 and b2 = 1 and b3 = 1 option(merge join)
go
~~START~~
text
Query Text: select/*+ set(enable_nestloop off) set(enable_hashjoin off) */ * from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 join babel_3293_t3 on babel_3293_t2.a2 = babel_3293_t3.a3 where b1 = 1 and b2 = 1 and b3 = 1                   
Merge Join
  Merge Cond: (babel_3293_t1.a1 = babel_3293_t3.a3)
  ->  Merge Join
        Merge Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
        ->  Sort
              Sort Key: babel_3293_t1.a1
              ->  Bitmap Heap Scan on babel_3293_t1
                    Recheck Cond: (b1 = 1)
                    ->  Bitmap Index Scan on index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210
                          Index Cond: (b1 = 1)
        ->  Sort
              Sort Key: babel_3293_t2.a2
              ->  Bitmap Heap Scan on babel_3293_t2
                    Recheck Cond: (b2 = 1)
                    ->  Bitmap Index Scan on index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e
                          Index Cond: (b2 = 1)
  ->  Sort
        Sort Key: babel_3293_t3.a3
        ->  Seq Scan on babel_3293_t3
              Filter: (b3 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.312 ms
~~END~~


select * from babeL_3293_T1 join BABEL_3293_T2 on babeL_3293_T1.a1 = BABEL_3293_T2.a2 join babEl_3293_t3 on babel_3293_T2.a2 = BABEL_3293_t3.a3 where b1 = 1 and b2 = 1 and b3 = 1 option(merge join)
go
~~START~~
text
Query Text: select/*+ set(enable_nestloop off) set(enable_hashjoin off) */ * from babeL_3293_T1 join BABEL_3293_T2 on babeL_3293_T1.a1 = BABEL_3293_T2.a2 join babEl_3293_t3 on babel_3293_T2.a2 = BABEL_3293_t3.a3 where b1 = 1 and b2 = 1 and b3 = 1                   
Merge Join
  Merge Cond: (babel_3293_t1.a1 = babel_3293_t3.a3)
  ->  Merge Join
        Merge Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
        ->  Sort
              Sort Key: babel_3293_t1.a1
              ->  Bitmap Heap Scan on babel_3293_t1
                    Recheck Cond: (b1 = 1)
                    ->  Bitmap Index Scan on index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210
                          Index Cond: (b1 = 1)
        ->  Sort
              Sort Key: babel_3293_t2.a2
              ->  Bitmap Heap Scan on babel_3293_t2
                    Recheck Cond: (b2 = 1)
                    ->  Bitmap Index Scan on index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e
                          Index Cond: (b2 = 1)
  ->  Sort
        Sort Key: babel_3293_t3.a3
        ->  Seq Scan on babel_3293_t3
              Filter: (b3 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.313 ms
~~END~~


-- Conflicting join hints
select * from babel_3293_t1 inner hash join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 option(merge join)
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Conflicting JOIN optimizer hints specified)~~


select * from babel_3293_t1 inner hash join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 option(hash join)
go
~~START~~
text
Query Text: select/*+ hashjoin(babel_3293_t1 babel_3293_t2) set(enable_nestloop off) set(enable_mergejoin off) leading(babel_3293_t1 babel_3293_t2)*/ * from babel_3293_t1 inner      join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2                  
Hash Join
  Hash Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
  ->  Seq Scan on babel_3293_t1
  ->  Hash
        ->  Seq Scan on babel_3293_t2
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.182 ms
~~END~~


select * from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 option(merge join, loop join)
go
~~START~~
text
Query Text: select/*+ set(enable_hashjoin off) */ * from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2                              
Merge Join
  Merge Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
  ->  Index Scan using babel_3293_t1_pkey on babel_3293_t1
  ->  Index Scan using babel_3293_t2_pkey on babel_3293_t2
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.258 ms
~~END~~


select * from babel_3293_t1 inner loop join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 join babel_3293_t3 on babel_3293_t2.a2 = babel_3293_t3.a3 where b1 = 1 and b2 = 1 and b3 = 1 option(merge join)
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Conflicting JOIN optimizer hints specified)~~


select * from babel_3293_t1 inner loop join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 inner merge join babel_3293_t3 on babel_3293_t2.a2 = babel_3293_t3.a3 where b1 = 1 and b2 = 1 and b3 = 1 option(merge join)
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Conflicting JOIN optimizer hints specified)~~


select * from babel_3293_t1 inner loop join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 inner merge join babel_3293_t3 on babel_3293_t2.a2 = babel_3293_t3.a3 where b1 = 1 and b2 = 1 and b3 = 1 option(merge join, loop join)
go
~~START~~
text
Query Text: select/*+ nestloop(babel_3293_t1 babel_3293_t2) mergejoin(babel_3293_t1 babel_3293_t2 babel_3293_t3) set(enable_hashjoin off) leading(babel_3293_t1 babel_3293_t2 babel_3293_t3)*/ * from babel_3293_t1 inner      join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 inner       join babel_3293_t3 on babel_3293_t2.a2 = babel_3293_t3.a3 where b1 = 1 and b2 = 1 and b3 = 1                              
Merge Join
  Merge Cond: (babel_3293_t1.a1 = babel_3293_t3.a3)
  ->  Sort
        Sort Key: babel_3293_t1.a1
        ->  Nested Loop
              Join Filter: (babel_3293_t1.a1 = babel_3293_t2.a2)
              ->  Bitmap Heap Scan on babel_3293_t1
                    Recheck Cond: (b1 = 1)
                    ->  Bitmap Index Scan on index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210
                          Index Cond: (b1 = 1)
              ->  Materialize
                    ->  Bitmap Heap Scan on babel_3293_t2
                          Recheck Cond: (b2 = 1)
                          ->  Bitmap Index Scan on index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e
                                Index Cond: (b2 = 1)
  ->  Sort
        Sort Key: babel_3293_t3.a3
        ->  Seq Scan on babel_3293_t3
              Filter: (b3 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.317 ms
~~END~~


-- Queries with both table hints and join hints
select * from babel_3293_t1 with(index(index_babel_3293_t1_b1)) inner loop join babel_3293_t2 (index(index_babel_3293_t2_b2)) on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1
go
~~START~~
text
Query Text: select/*+ indexscan(babel_3293_t1 index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210) indexscan(babel_3293_t2 index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e) nestloop(babel_3293_t1 babel_3293_t2) leading(babel_3293_t1 babel_3293_t2)*/ * from babel_3293_t1                                     inner      join babel_3293_t2                                 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1
Nested Loop
  Join Filter: (babel_3293_t1.a1 = babel_3293_t2.a2)
  ->  Index Scan using index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210 on babel_3293_t1
        Index Cond: (b1 = 1)
  ->  Materialize
        ->  Index Scan using index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e on babel_3293_t2
              Index Cond: (b2 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.311 ms
~~END~~


select * from babel_3293_t1 with(index(index_babel_3293_t1_b1)) right outer merge join babel_3293_t2 (index(index_babel_3293_t2_b2)) on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1
go
~~START~~
text
Query Text: select/*+ indexscan(babel_3293_t1 index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210) indexscan(babel_3293_t2 index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e) mergejoin(babel_3293_t1 babel_3293_t2) leading(babel_3293_t1 babel_3293_t2)*/ * from babel_3293_t1                                     right outer       join babel_3293_t2                                 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1
Merge Join
  Merge Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
  ->  Sort
        Sort Key: babel_3293_t1.a1
        ->  Index Scan using index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210 on babel_3293_t1
              Index Cond: (b1 = 1)
  ->  Sort
        Sort Key: babel_3293_t2.a2
        ->  Index Scan using index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e on babel_3293_t2
              Index Cond: (b2 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 17.183 ms
~~END~~


select * from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1 option(loop join, table hint(babel_3293_t1, index(index_babel_3293_t1_b1)), table hint(babel_3293_t2, index(index_babel_3293_t2_b2)))
go
~~START~~
text
Query Text: select/*+ indexscan(babel_3293_t1 index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210) indexscan(babel_3293_t2 index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e) set(enable_hashjoin off) set(enable_mergejoin off) */ * from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1                                                                                                                                      
Nested Loop
  Join Filter: (babel_3293_t1.a1 = babel_3293_t2.a2)
  ->  Index Scan using index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210 on babel_3293_t1
        Index Cond: (b1 = 1)
  ->  Materialize
        ->  Index Scan using index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e on babel_3293_t2
              Index Cond: (b2 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.716 ms
~~END~~


-- Join hints on nested subqueries are not supported
select * from (select distinct a1 as a1 from babel_3293_t1) s1 inner merge join babel_3293_t2 on s1.a1 = babel_3293_t2.a2
go
~~START~~
text
Query Text: select/*+ mergejoin(babel_3293_t1 babel_3293_t2) leading(babel_3293_t1 babel_3293_t2)*/ * from (select distinct a1 as a1 from babel_3293_t1) s1 inner       join babel_3293_t2 on s1.a1 = babel_3293_t2.a2
Hash Join
  Hash Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
  ->  HashAggregate
        Group Key: babel_3293_t1.a1
        ->  Seq Scan on babel_3293_t1
  ->  Hash
        ->  Seq Scan on babel_3293_t2
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 56.443 ms
~~END~~


select * from (select babel_3293_t1.* from babel_3293_t1 inner merge join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2) s1 inner join (select babel_3293_t1.* from babel_3293_t1 inner hash join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2) s2 on s1.a1 = s2.a1
go
~~START~~
text
Query Text: select/*+ mergejoin(babel_3293_t1 babel_3293_t2) hashjoin(babel_3293_t1 babel_3293_t2 babel_3293_t1 babel_3293_t2) leading(babel_3293_t1 babel_3293_t2 babel_3293_t1 babel_3293_t2)*/ * from (select babel_3293_t1.* from babel_3293_t1 inner       join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2) s1 inner join (select babel_3293_t1.* from babel_3293_t1 inner      join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2) s2 on s1.a1 = s2.a1
Hash Join
  Hash Cond: (babel_3293_t1.a1 = babel_3293_t2_1.a2)
  ->  Hash Join
        Hash Cond: (babel_3293_t1.a1 = babel_3293_t1_1.a1)
        ->  Hash Join
              Hash Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
              ->  Seq Scan on babel_3293_t1
              ->  Hash
                    ->  Seq Scan on babel_3293_t2
        ->  Hash
              ->  Seq Scan on babel_3293_t1 babel_3293_t1_1
  ->  Hash
        ->  Seq Scan on babel_3293_t2 babel_3293_t2_1
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 71.672 ms
~~END~~


-- Test FORCE ORDER hints
/**
 * Run a SELECT query with multiple joins such that the join order indicated by the query syntax is not preserved during query optimization.
 * This ensures that when the FORCE ORDER query hint is given in the test below, the join order is preserved.
 * If the join order was to be preserved even without the hint, the next test would not prove that the FORCE ORDER hint is working.
 */
select * from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 join babel_3293_t3 on babel_3293_t1.b1 = babel_3293_t3.b3
go
~~START~~
text
Query Text: select * from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 join babel_3293_t3 on babel_3293_t1.b1 = babel_3293_t3.b3
Hash Join
  Hash Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
  ->  Merge Join
        Merge Cond: (babel_3293_t1.b1 = babel_3293_t3.b3)
        ->  Index Scan using index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210 on babel_3293_t1
        ->  Sort
              Sort Key: babel_3293_t3.b3 NULLS FIRST
              ->  Seq Scan on babel_3293_t3
  ->  Hash
        ->  Seq Scan on babel_3293_t2
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.342 ms
~~END~~


/*
 * Run the above SELECT query and give the FORCE ORDER query hint to make sure that the join order is preserved
 */
select * from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 join babel_3293_t3 on babel_3293_t1.b1 = babel_3293_t3.b3 option(force order)
go
~~START~~
text
Query Text: select/*+ set(join_collapse_limit 1) */ * from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 join babel_3293_t3 on babel_3293_t1.b1 = babel_3293_t3.b3                    
Merge Join
  Merge Cond: (babel_3293_t1.b1 = babel_3293_t3.b3)
  ->  Sort
        Sort Key: babel_3293_t1.b1
        ->  Hash Join
              Hash Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
              ->  Seq Scan on babel_3293_t1
              ->  Hash
                    ->  Seq Scan on babel_3293_t2
  ->  Sort
        Sort Key: babel_3293_t3.b3
        ->  Seq Scan on babel_3293_t3
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.414 ms
~~END~~


-- UPDATE and DELETE queries with join hints needs to be revisited later. pg_hint_plan is currently not following the given join hints 
-- Test UPDATE queries with and without hints
update babel_3293_t1 set a1 = 1 from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1
go
~~START~~
text
Query Text: update babel_3293_t1 set a1 = 1 from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1
Update on babel_3293_t1
  ->  Hash Join
        Hash Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
        ->  Bitmap Heap Scan on babel_3293_t1
              Recheck Cond: (b1 = 1)
              ->  Bitmap Index Scan on index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210
                    Index Cond: (b1 = 1)
        ->  Hash
              ->  Bitmap Heap Scan on babel_3293_t2
                    Recheck Cond: (b2 = 1)
                    ->  Bitmap Index Scan on index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e
                          Index Cond: (b2 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 37.025 ms
~~END~~


update babel_3293_t1 set a1 = 1 from babel_3293_t1 inner merge join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1
go
~~START~~
text
Query Text: update/*+ mergejoin(babel_3293_t1 babel_3293_t2) leading(babel_3293_t1 babel_3293_t2)*/ babel_3293_t1 set a1 = 1 from babel_3293_t1 inner       join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1
Update on babel_3293_t1
  ->  Merge Join
        Merge Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
        ->  Sort
              Sort Key: babel_3293_t1.a1
              ->  Bitmap Heap Scan on babel_3293_t1
                    Recheck Cond: (b1 = 1)
                    ->  Bitmap Index Scan on index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210
                          Index Cond: (b1 = 1)
        ->  Sort
              Sort Key: babel_3293_t2.a2
              ->  Bitmap Heap Scan on babel_3293_t2
                    Recheck Cond: (b2 = 1)
                    ->  Bitmap Index Scan on index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e
                          Index Cond: (b2 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.254 ms
~~END~~


update babel_3293_t1 set a1 = 1 from babel_3293_t1 with(index(index_babel_3293_t1_b1)) full outer merge join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1
go
~~START~~
text
Query Text: update/*+ indexscan(babel_3293_t1 index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210) mergejoin(babel_3293_t1 babel_3293_t2) leading(babel_3293_t1 babel_3293_t2)*/ babel_3293_t1 set a1 = 1 from babel_3293_t1                                     full outer       join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1
Update on babel_3293_t1
  ->  Merge Join
        Merge Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
        ->  Sort
              Sort Key: babel_3293_t1.a1
              ->  Index Scan using index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210 on babel_3293_t1
                    Index Cond: (b1 = 1)
                    Filter: (ctid IS NOT NULL)
        ->  Sort
              Sort Key: babel_3293_t2.a2
              ->  Bitmap Heap Scan on babel_3293_t2
                    Recheck Cond: (b2 = 1)
                    ->  Bitmap Index Scan on index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e
                          Index Cond: (b2 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.467 ms
~~END~~


-- Test DELETE queries with and without hints
delete babel_3293_t1 from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1
go
~~START~~
text
Query Text: delete babel_3293_t1 from babel_3293_t1 join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1
Delete on babel_3293_t1
  ->  Hash Join
        Hash Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
        ->  Bitmap Heap Scan on babel_3293_t1
              Recheck Cond: (b1 = 1)
              ->  Bitmap Index Scan on index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210
                    Index Cond: (b1 = 1)
        ->  Hash
              ->  Bitmap Heap Scan on babel_3293_t2
                    Recheck Cond: (b2 = 1)
                    ->  Bitmap Index Scan on index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e
                          Index Cond: (b2 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 43.809 ms
~~END~~


delete babel_3293_t1 from babel_3293_t1 inner merge join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1
go
~~START~~
text
Query Text: delete/*+ mergejoin(babel_3293_t1 babel_3293_t2) leading(babel_3293_t1 babel_3293_t2)*/ babel_3293_t1 from babel_3293_t1 inner       join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1
Delete on babel_3293_t1
  ->  Merge Join
        Merge Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
        ->  Sort
              Sort Key: babel_3293_t1.a1
              ->  Bitmap Heap Scan on babel_3293_t1
                    Recheck Cond: (b1 = 1)
                    ->  Bitmap Index Scan on index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210
                          Index Cond: (b1 = 1)
        ->  Sort
              Sort Key: babel_3293_t2.a2
              ->  Bitmap Heap Scan on babel_3293_t2
                    Recheck Cond: (b2 = 1)
                    ->  Bitmap Index Scan on index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e
                          Index Cond: (b2 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.227 ms
~~END~~


delete babel_3293_t1 from babel_3293_t1 with(index(index_babel_3293_t1_b1)) left outer merge join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1
go
~~START~~
text
Query Text: delete/*+ indexscan(babel_3293_t1 index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210) mergejoin(babel_3293_t1 babel_3293_t2) leading(babel_3293_t1 babel_3293_t2)*/ babel_3293_t1 from babel_3293_t1                                     left outer       join babel_3293_t2 on babel_3293_t1.a1 = babel_3293_t2.a2 where b1 = 1 and b2 = 1
Delete on babel_3293_t1
  ->  Merge Join
        Merge Cond: (babel_3293_t1.a1 = babel_3293_t2.a2)
        ->  Sort
              Sort Key: babel_3293_t1.a1
              ->  Index Scan using index_babel_3293_t1_b1babel_329dabb714f0f2c475b9c9e7d1d90cbd210 on babel_3293_t1
                    Index Cond: (b1 = 1)
        ->  Sort
              Sort Key: babel_3293_t2.a2
              ->  Bitmap Heap Scan on babel_3293_t2
                    Recheck Cond: (b2 = 1)
                    ->  Bitmap Index Scan on index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e
                          Index Cond: (b2 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.272 ms
~~END~~


set babelfish_showplan_all off
go

-- cleanup
drop table babel_3293_t1
go

drop table babel_3293_t2
go

drop table babel_3293_t3
go

-- Test all queries by specifying a database and schema name
use tempdb
go

drop table if exists babel_3293_schema.t1
go

drop table if exists babel_3293_t2
go

drop table if exists babel_3293_t3
go

drop schema if exists babel_3293_schema
go

create schema babel_3293_schema
go

create table babel_3293_schema.t1(a1 int PRIMARY KEY, b1 int)
go

create index index_babel_3293_schema_t1_b1 on babel_3293_schema.t1(b1)
go

create table babel_3293_t2(a2 int PRIMARY KEY, b2 int)
go

create index index_babel_3293_t2_b2 on babel_3293_t2(b2)
go

create table babel_3293_t3(a3 int PRIMARY KEY, b3 int)
go

set babelfish_showplan_all on
go

select * from tempdb.babel_3293_schema.t1 inner merge join tempdb.dbo.babel_3293_t2 on tempdb.babel_3293_schema.t1.a1 = tempdb.dbo.babel_3293_t2.a2 where b1 = 1 and b2 = 1
go
~~START~~
text
Query Text: select/*+ mergejoin(t1 babel_3293_t2) leading(t1 babel_3293_t2)*/ * from tempdb.babel_3293_schema.t1 inner       join tempdb.dbo.babel_3293_t2 on tempdb.babel_3293_schema.t1.a1 = tempdb.dbo.babel_3293_t2.a2 where b1 = 1 and b2 = 1
Merge Join
  Merge Cond: (t1.a1 = babel_3293_t2.a2)
  ->  Sort
        Sort Key: t1.a1
        ->  Bitmap Heap Scan on t1
              Recheck Cond: (b1 = 1)
              ->  Bitmap Index Scan on index_babel_3293_schema_t1_b1t1baa4a261b22c51c48cc060f8d390c3e9
                    Index Cond: (b1 = 1)
  ->  Sort
        Sort Key: babel_3293_t2.a2
        ->  Bitmap Heap Scan on babel_3293_t2
              Recheck Cond: (b2 = 1)
              ->  Bitmap Index Scan on index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e
                    Index Cond: (b2 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 150.486 ms
~~END~~


select * from tempdb.babel_3293_schema.t1 with(index(index_babel_3293_schema_t1_b1)) join tempdb.dbo.babel_3293_t2 (index(index_babel_3293_t2_b2)) on tempdb.babel_3293_schema.t1.a1 = tempdb.dbo.babel_3293_t2.a2 where b1 = 1 and b2 = 1 -- Join query with just table hints
go
~~START~~
text
Query Text: select/*+ indexscan(t1 index_babel_3293_schema_t1_b1t1baa4a261b22c51c48cc060f8d390c3e9) indexscan(babel_3293_t2 index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e) */ * from tempdb.babel_3293_schema.t1                                            join tempdb.dbo.babel_3293_t2                                 on tempdb.babel_3293_schema.t1.a1 = tempdb.dbo.babel_3293_t2.a2 where b1 = 1 and b2 = 1
Hash Join
  Hash Cond: (t1.a1 = babel_3293_t2.a2)
  ->  Index Scan using index_babel_3293_schema_t1_b1t1baa4a261b22c51c48cc060f8d390c3e9 on t1
        Index Cond: (b1 = 1)
  ->  Hash
        ->  Index Scan using index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e on babel_3293_t2
              Index Cond: (b2 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 18.476 ms
~~END~~


select * from tempdb.babel_3293_schema.t1 join tempdb.dbo.babel_3293_t2 on tempdb.babel_3293_schema.t1.a1 = tempdb.dbo.babel_3293_t2.a2 where b1 = 1 and b2 = 1 option(merge join, table hint(tempdb.babel_3293_schema.t1, index(index_babel_3293_schema_t1_b1)), table hint(tempdb.dbo.babel_3293_t2, index(index_babel_3293_t2_b2)))
go
~~START~~
text
Query Text: select/*+ indexscan(t1 index_babel_3293_schema_t1_b1t1baa4a261b22c51c48cc060f8d390c3e9) indexscan(babel_3293_t2 index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e) set(enable_nestloop off) set(enable_hashjoin off) */ * from tempdb.babel_3293_schema.t1 join tempdb.dbo.babel_3293_t2 on tempdb.babel_3293_schema.t1.a1 = tempdb.dbo.babel_3293_t2.a2 where b1 = 1 and b2 = 1                                                                                                                                                                       
Merge Join
  Merge Cond: (t1.a1 = babel_3293_t2.a2)
  ->  Sort
        Sort Key: t1.a1
        ->  Index Scan using index_babel_3293_schema_t1_b1t1baa4a261b22c51c48cc060f8d390c3e9 on t1
              Index Cond: (b1 = 1)
  ->  Sort
        Sort Key: babel_3293_t2.a2
        ->  Index Scan using index_babel_3293_t2_b2babel_329ea1aa3a9e72f8fece1b90ee8c2a8f24e on babel_3293_t2
              Index Cond: (b2 = 1)
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 9.927 ms
~~END~~


select * from tempdb.babel_3293_schema.t1 join tempdb.dbo.babel_3293_t2 on tempdb.babel_3293_schema.t1.a1 = tempdb.dbo.babel_3293_t2.a2 join tempdb.dbo.babel_3293_t3 on tempdb.babel_3293_schema.t1.b1 = tempdb.dbo.babel_3293_t3.b3 option(force order)
go
~~START~~
text
Query Text: select/*+ set(join_collapse_limit 1) */ * from tempdb.babel_3293_schema.t1 join tempdb.dbo.babel_3293_t2 on tempdb.babel_3293_schema.t1.a1 = tempdb.dbo.babel_3293_t2.a2 join tempdb.dbo.babel_3293_t3 on tempdb.babel_3293_schema.t1.b1 = tempdb.dbo.babel_3293_t3.b3                    
Merge Join
  Merge Cond: (t1.b1 = babel_3293_t3.b3)
  ->  Sort
        Sort Key: t1.b1
        ->  Hash Join
              Hash Cond: (t1.a1 = babel_3293_t2.a2)
              ->  Seq Scan on t1
              ->  Hash
                    ->  Seq Scan on babel_3293_t2
  ->  Sort
        Sort Key: babel_3293_t3.b3
        ->  Seq Scan on babel_3293_t3
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 0.637 ms
~~END~~


select * from tempdb.babel_3293_schema.t1 inner loop join tempdb.dbo.babel_3293_t2 on tempdb.babel_3293_schema.t1.a1 = tempdb.dbo.babel_3293_t2.a2 left outer merge join tempdb.dbo.babel_3293_t3 on tempdb.babel_3293_schema.t1.b1 = tempdb.dbo.babel_3293_t3.b3
go
~~START~~
text
Query Text: select/*+ nestloop(t1 babel_3293_t2) mergejoin(t1 babel_3293_t2 babel_3293_t3) leading(t1 babel_3293_t2 babel_3293_t3)*/ * from tempdb.babel_3293_schema.t1 inner      join tempdb.dbo.babel_3293_t2 on tempdb.babel_3293_schema.t1.a1 = tempdb.dbo.babel_3293_t2.a2 left outer       join tempdb.dbo.babel_3293_t3 on tempdb.babel_3293_schema.t1.b1 = tempdb.dbo.babel_3293_t3.b3
Merge Left Join
  Merge Cond: (t1.b1 = babel_3293_t3.b3)
  ->  Nested Loop
        ->  Index Scan using index_babel_3293_schema_t1_b1t1baa4a261b22c51c48cc060f8d390c3e9 on t1
        ->  Index Scan using babel_3293_t2_pkey on babel_3293_t2
              Index Cond: (a2 = t1.a1)
  ->  Sort
        Sort Key: babel_3293_t3.b3 NULLS FIRST
        ->  Seq Scan on babel_3293_t3
~~END~~

~~START~~
text
Babelfish T-SQL Batch Parsing Time: 32.244 ms
~~END~~


set babelfish_showplan_all off
go

-- cleanup
drop table babel_3293_schema.t1 
go

drop table babel_3293_t2
go

drop table babel_3293_t3
go

drop schema babel_3293_schema
go
