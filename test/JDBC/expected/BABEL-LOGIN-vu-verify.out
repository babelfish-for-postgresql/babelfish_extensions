-- tsql
CREATE USER babel_login_vu_prepare_r1;
go

CREATE USER babel_login_vu_prepare_r2 WITH DEFAULT_SCHEMA = babel_login_vu_prepare_sch;
go

-- tsql      user=babel_login_vu_prepare_r1      password=abc
-- Login with a Babelfish user should succeed
SELECT db_name();
go
~~START~~
nvarchar
master
~~END~~


SELECT current_setting('search_path');
go
~~START~~
text
master_dbo, "$user", sys, pg_catalog
~~END~~


SELECT rolname, orig_username, login_name, database_name, default_schema_name
FROM sys.babelfish_authid_user_ext
WHERE orig_username LIKE 'babel_login_vu_prepare%'
ORDER BY rolname;
go
~~START~~
varchar#!#nvarchar#!#varchar#!#nvarchar#!#nvarchar
master_babel_login_vu_prepare_r1#!#babel_login_vu_prepare_r1#!#babel_login_vu_prepare_r1#!#master#!#dbo
master_babel_login_vu_prepare_r2#!#babel_login_vu_prepare_r2#!#babel_login_vu_prepare_r2#!#master#!#babel_login_vu_prepare_sch
~~END~~


SELECT session_user;
go
~~START~~
nvarchar
babel_login_vu_prepare_r1
~~END~~


SELECT current_user;
go
~~START~~
varchar
babel_login_vu_prepare_r1
~~END~~


SELECT user_name(user_id());
go
~~START~~
nvarchar
babel_login_vu_prepare_r1
~~END~~


ALTER USER babel_login_vu_prepare_r1 WITH DEFAULT_SCHEMA = babel_login_vu_prepare_sch;
go

ALTER USER babel_login_vu_prepare_r1 WITH NAME = babel_login_vu_prepare_r1_new;
go

ALTER USER babel_login_vu_prepare_r2 WITH DEFAULT_SCHEMA = NULL;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Current user does not have privileges to change schema)~~


ALTER USER babel_login_vu_prepare_r2 WITH NAME = babel_login_vu_prepare_r2_new;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Current user does not have privileges to change user name)~~


SELECT rolname, orig_username, login_name, database_name, default_schema_name
FROM sys.babelfish_authid_user_ext
WHERE orig_username LIKE 'babel_login_vu_prepare%'
ORDER BY rolname;
go
~~START~~
varchar#!#nvarchar#!#varchar#!#nvarchar#!#nvarchar
master_babel_login_vu_prepare_r1_new#!#babel_login_vu_prepare_r1_new#!#babel_login_vu_prepare_r1#!#master#!#babel_login_vu_prepare_sch
master_babel_login_vu_prepare_r2#!#babel_login_vu_prepare_r2#!#babel_login_vu_prepare_r2#!#master#!#babel_login_vu_prepare_sch
~~END~~


-- tsql      user=babel_login_vu_prepare_r2      password=abc
SELECT db_name();
go
~~START~~
nvarchar
master
~~END~~


SELECT current_setting('search_path');
go
~~START~~
text
master_babel_login_vu_prepare_sch, "$user", sys, pg_catalog
~~END~~


SELECT rolname, orig_username, login_name, database_name, default_schema_name
FROM sys.babelfish_authid_user_ext
WHERE orig_username LIKE 'babel_login_vu_prepare%'
ORDER BY rolname;
go
~~START~~
varchar#!#nvarchar#!#varchar#!#nvarchar#!#nvarchar
master_babel_login_vu_prepare_r1_new#!#babel_login_vu_prepare_r1_new#!#babel_login_vu_prepare_r1#!#master#!#babel_login_vu_prepare_sch
master_babel_login_vu_prepare_r2#!#babel_login_vu_prepare_r2#!#babel_login_vu_prepare_r2#!#master#!#babel_login_vu_prepare_sch
~~END~~


SELECT session_user;
go
~~START~~
nvarchar
babel_login_vu_prepare_r2
~~END~~


SELECT current_user;
go
~~START~~
varchar
babel_login_vu_prepare_r2
~~END~~


SELECT user_name(user_id());
go
~~START~~
nvarchar
babel_login_vu_prepare_r2
~~END~~


-- tsql
EXEC babel_login_vu_prepare_proc
go
~~START~~
varchar#!#char
babel_login_vu_prepare_err_user#!#S
babel_login_vu_prepare_r1#!#S
babel_login_vu_prepare_r2#!#S
babel_login_vu_prepare_r3#!#S
~~END~~


-- Test altering the login ability
SELECT rolname, rolcanlogin FROM pg_catalog.pg_roles WHERE rolname = 'babel_login_vu_prepare_r1'
go
~~START~~
varchar#!#bit
babel_login_vu_prepare_r1#!#1
~~END~~

SELECT name, is_disabled FROM sys.server_principals WHERE name = 'babel_login_vu_prepare_r1'
go
~~START~~
varchar#!#int
babel_login_vu_prepare_r1#!#0
~~END~~


ALTER LOGIN babel_login_vu_prepare_r1 disable;
go

SELECT rolname, rolcanlogin FROM pg_catalog.pg_roles WHERE rolname = 'babel_login_vu_prepare_r1'
go
~~START~~
varchar#!#bit
babel_login_vu_prepare_r1#!#0
~~END~~

SELECT name, is_disabled FROM sys.server_principals WHERE name = 'babel_login_vu_prepare_r1'
go
~~START~~
varchar#!#int
babel_login_vu_prepare_r1#!#1
~~END~~


ALTER LOGIN babel_login_vu_prepare_r1 enable;
go

SELECT rolname, rolcanlogin FROM pg_catalog.pg_roles WHERE rolname = 'babel_login_vu_prepare_r1'
go
~~START~~
varchar#!#bit
babel_login_vu_prepare_r1#!#1
~~END~~

SELECT name, is_disabled FROM sys.server_principals WHERE name = 'babel_login_vu_prepare_r1'
go
~~START~~
varchar#!#int
babel_login_vu_prepare_r1#!#0
~~END~~


-- Test altering the password
ALTER LOGIN babel_login_vu_prepare_r2 WITH PASSWORD = '456'
go

-- tsql      user=babel_login_vu_prepare_r2      password=456
SELECT db_name();
go
~~START~~
nvarchar
master
~~END~~


-- tsql
-- Test membership
SELECT COUNT(*) FROM pg_auth_members
WHERE roleid = (SELECT oid FROM pg_roles WHERE rolname = 'sysadmin')
AND "member" = (SELECT oid FROM pg_roles WHERE rolname = 'babel_login_vu_prepare_r3');
go
~~START~~
int
0
~~END~~


ALTER SERVER ROLE sysadmin ADD MEMBER babel_login_vu_prepare_r3;
go


SELECT COUNT(*) FROM pg_auth_members
WHERE roleid = (SELECT oid FROM pg_roles WHERE rolname = 'sysadmin')
AND "member" = (SELECT oid FROM pg_roles WHERE rolname = 'babel_login_vu_prepare_r3');
go
~~START~~
int
1
~~END~~


ALTER SERVER ROLE sysadmin DROP MEMBER babel_login_vu_prepare_r3;
go

SELECT COUNT(*) FROM pg_auth_members
WHERE roleid = (SELECT oid FROM pg_roles WHERE rolname = 'sysadmin')
AND "member" = (SELECT oid FROM pg_roles WHERE rolname = 'babel_login_vu_prepare_r3');
go
~~START~~
int
0
~~END~~


-- Test error cases
ALTER SERVER ROLE db_owner ADD MEMBER dummy;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: only sysadmin role is supported in ALTER SERVER ROLE statement)~~


ALTER SERVER ROLE db_owner DROP MEMBER dummy;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: only sysadmin role is supported in ALTER SERVER ROLE statement)~~


CREATE USER babel_login_vu_prepare_err_user;
go

-- tsql      user=babel_login_vu_prepare_err_user      password=123
-- Should fail, does not have permission to alter sysadmin
ALTER SERVER ROLE sysadmin ADD MEMBER babel_login_vu_prepare_err_user
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Current login babel_login_vu_prepare_err_user does not have permission to alter server role)~~


-- Shoud fail, does not have permission to create login
CREATE LOGIN babel_login_vu_prepare_dummy WITH PASSWORD = '123';
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Current login babel_login_vu_prepare_err_user does not have permission to create new login)~~


-- tsql
DROP USER babel_login_vu_prepare_err_user;
go

DROP USER babel_login_vu_prepare_r1_new
go

DROP USER babel_login_vu_prepare_r2
go

-- Prevent login from accessing database without creating DB user after DROP/CREATE login
CREATE LOGIN babel_login_vu_prepare_r4 WITH PASSWORD = '123';
go

USE babel_login_vu_prepare_db1;
go

CREATE USER babel_login_vu_prepare_r4;
go

USE master;
go

SELECT rolname, orig_username, login_name, database_name, default_schema_name
FROM sys.babelfish_authid_user_ext
WHERE login_name LIKE 'babel_login_vu_prepare%'
ORDER BY rolname;
go
~~START~~
varchar#!#nvarchar#!#varchar#!#nvarchar#!#nvarchar
babel_login_vu_prepare_db1_babel_login_vu_prepare_r4#!#babel_login_vu_prepare_r4#!#babel_login_vu_prepare_r4#!#babel_login_vu_prepare_db1#!#dbo
~~END~~


java_auth#!#database|-|babel_login_vu_prepare_db1#!#user|-|babel_login_vu_prepare_r4#!#password|-|123
~~SUCCESS~~
java_auth#!#user|-|babel_login_vu_prepare_r4#!#password|-|123
~~SUCCESS~~
java_auth#!#user|-|babel_login_vu_prepare_r4#!#password|-|123
~~SUCCESS~~

-- tsql
-- Login should be succeded
USE master;
go

-- psql
-- Wait to sync with another session
SELECT pg_sleep(1);
go
~~START~~
void

~~END~~


-- tsql
DROP LOGIN babel_login_vu_prepare_r4;
go

-- babel_login_vu_prepare_r4 login entries should have been invalidated
SELECT rolname, orig_username, login_name, database_name, default_schema_name
FROM sys.babelfish_authid_user_ext
WHERE login_name LIKE 'babel_login_vu_prepare_r4%' OR rolname LIKE '%babel_login_vu_prepare_r4%'
ORDER BY rolname;
go
~~START~~
varchar#!#nvarchar#!#varchar#!#nvarchar#!#nvarchar
babel_login_vu_prepare_db1_babel_login_vu_prepare_r4#!#babel_login_vu_prepare_r4#!##!#babel_login_vu_prepare_db1#!#dbo
~~END~~


-- tsql
-- recreate the login with same name
CREATE LOGIN babel_login_vu_prepare_r4 WITH PASSWORD='123';
go

-- verify that USER babel_login_vu_prepare_r4 should have "" as LOGIN since it is dropped
SELECT rolname, orig_username, login_name, database_name, default_schema_name
FROM sys.babelfish_authid_user_ext
WHERE login_name LIKE 'babel_login_vu_prepare_r4%'
ORDER BY rolname;
go
~~START~~
varchar#!#nvarchar#!#varchar#!#nvarchar#!#nvarchar
~~END~~


java_auth#!#database|-|babel_login_vu_prepare_db1#!#user|-|babel_login_vu_prepare_r4#!#password|-|123
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Cannot open database "babel_login_vu_prepare_db1" requested by the login. The login failed )~~


-- tsql      user=babel_login_vu_prepare_r4      password=123
-- It should be failed since there is no relevant user
USE babel_login_vu_prepare_db1;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: The server principal "babel_login_vu_prepare_r4" is not able to access the database "babel_login_vu_prepare_db1" under the current security context)~~


USE master;
go

SELECT current_user;
go
~~START~~
varchar
guest
~~END~~


-- tsql
USE babel_login_vu_prepare_db1;
go

DROP USER babel_login_vu_prepare_r4;
go

USE master;
go

-- Prevent dropping active login
CREATE USER babel_login_vu_prepare_r4;
go

-- tsql     user=babel_login_vu_prepare_r4       password=123

-- tsql
-- Session 1
-- Logged into Session 1 with babel_login_vu_prepare_r4 login
-- Session 2 - Try to drop babel_login_vu_prepare_r4 which is active on Session 1
DROP LOGIN babel_login_vu_prepare_r4;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Could not drop login 'babel_login_vu_prepare_r4' as the user is currently logged in.)~~


-- psql
-- Need to terminate active session before cleaning up the login
SELECT pg_terminate_backend(pid) FROM pg_stat_get_activity(NULL)
WHERE sys.suser_name(usesysid) = 'babel_login_vu_prepare_r4' AND backend_type = 'client backend' AND usesysid IS NOT NULL;
go
~~START~~
bool
t
~~END~~

-- Wait to sync with another session
SELECT pg_sleep(1);
go
~~START~~
void

~~END~~


-- tsql
DROP USER babel_login_vu_prepare_r4
go
DROP LOGIN babel_login_vu_prepare_r4;
go

-- tsql
-- babel_4080 tests start here
ALTER SERVER ROLE sysadmin ADD MEMBER babel_4080_sysadmin1;
GO

-- tsql user=babel_4080_nonsysadmin1 password=1234

SELECT name, type, type_desc FROM sys.server_principals where name like 'babel_4080%' order by name;
GO
~~START~~
varchar#!#char#!#nvarchar
babel_4080_nonsysadmin1#!#S#!#SQL_LOGIN
babel_4080_sysadmin1#!#S#!#SQL_LOGIN
babel_4080_testlogin1#!#S#!#SQL_LOGIN
babel_4080_testlogin2#!#S#!#SQL_LOGIN
~~END~~


ALTER LOGIN babel_4080_testlogin1 DISABLE;
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Cannot alter the login 'babel_4080_testlogin1', because it does not exist or you do not have permission.)~~


DROP LOGIN babel_4080_testlogin1;
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Cannot drop the login 'babel_4080_testlogin1', because it does not exist or you do not have permission.)~~


-- tsql user=babel_4080_sysadmin1 password=1234
ALTER LOGIN babel_4080_sysadmin1 WITH PASSWORD = 'abcd';
GO

ALTER LOGIN babel_4080_testlogin1 WITH PASSWORD = 'abcd';
GO

ALTER LOGIN babel_4080_testlogin1 DISABLE;
GO

SELECT rolname, rolcanlogin FROM pg_catalog.pg_roles WHERE rolname = 'babel_4080_testlogin1';
GO
~~START~~
varchar#!#bit
babel_4080_testlogin1#!#0
~~END~~


SELECT name, is_disabled FROM sys.server_principals WHERE name = 'babel_4080_testlogin1';
GO
~~START~~
varchar#!#int
babel_4080_testlogin1#!#1
~~END~~


ALTER LOGIN babel_4080_testlogin1 ENABLE;
GO

SELECT rolname, rolcanlogin FROM pg_catalog.pg_roles WHERE rolname = 'babel_4080_testlogin1';
GO
~~START~~
varchar#!#bit
babel_4080_testlogin1#!#1
~~END~~


SELECT name, is_disabled FROM sys.server_principals WHERE name = 'babel_4080_testlogin1';
GO
~~START~~
varchar#!#int
babel_4080_testlogin1#!#0
~~END~~


DROP LOGIN babel_4080_testlogin1;
GO

ALTER SERVER ROLE sysadmin DROP MEMBER babel_4080_sysadmin1;
GO

-- tsql user=babel_4080_testlogin2 password=1234
ALTER LOGIN babel_4080_testlogin2 WITH PASSWORD = 'abcd';
GO

-- psql
SELECT pg_terminate_backend(pid) FROM pg_stat_get_activity(NULL)
WHERE sys.suser_name(usesysid) = 'babel_4080_sysadmin1' AND backend_type = 'client backend' AND usesysid IS NOT NULL;
GO
~~START~~
bool
t
~~END~~


SELECT pg_sleep(1);
GO
~~START~~
void

~~END~~


SELECT pg_terminate_backend(pid) FROM pg_stat_get_activity(NULL)
WHERE sys.suser_name(usesysid) = 'babel_4080_nonsysadmin1' AND backend_type = 'client backend' AND usesysid IS NOT NULL;
GO
~~START~~
bool
t
~~END~~


SELECT pg_sleep(1);
GO
~~START~~
void

~~END~~

