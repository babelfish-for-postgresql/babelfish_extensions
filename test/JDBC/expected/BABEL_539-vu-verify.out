EXEC babel_539_prepare_proc
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: To use IDENTITY(), set 'babelfishpg_tsql.escape_hatch_identity_function' to 'ignore')~~


SELECT current_setting('babelfishpg_tsql.escape_hatch_identity_function');
GO
~~START~~
text
strict
~~END~~


EXEC sp_babelfish_configure 'babelfishpg_tsql.escape_hatch_identity_function', 'ignore';
GO

EXEC babel_539_prepare_proc
GO

SELECT id_num, col1, name  FROM babel_539NewTable_proc ORDER BY col1;
GO
~~START~~
int#!#int#!#varchar
1#!#10#!#user1
3#!#20#!#user2
5#!#30#!#user3
~~END~~


DROP TABLE IF EXISTS babel_539NewTable_proc;
GO

DROP TABLE IF EXISTS babel_539NewTable1;
GO

SELECT col1, IDENTITY(int, 1,1) AS id_num INTO babel_539NewTable1 FROM babel_539OldTable;
GO

SELECT id_num, col1 FROM babel_539NewTable1 ORDER BY col1;
GO
~~START~~
int#!#int
1#!#10
2#!#20
3#!#30
~~END~~


DROP TABLE IF EXISTS babel_539NewTable1;
GO

SELECT col1, IDENTITY(int, 1) AS id_num INTO #babel_539NewTable1 FROM babel_539OldTable;
GO

SELECT id_num, col1 FROM #babel_539NewTable1 ORDER BY col1;
GO
~~START~~
int#!#int
1#!#10
2#!#20
3#!#30
~~END~~


DROP TABLE IF EXISTS #babel_539NewTable1;
GO

SELECT col1, IDENTITY(int) AS id_num INTO #babel_539NewTable1 FROM babel_539OldTable;
GO

SELECT col1, id_num FROM #babel_539NewTable1 ORDER BY col1;
GO
~~START~~
int#!#int
10#!#1
20#!#2
30#!#3
~~END~~


DROP TABLE IF EXISTS #babel_539NewTable1;
GO

SELECT col1, id_num=IDENTITY(int, 1,100) INTO #babel_539NewTable1 FROM babel_539OldTable;
GO

SELECT id_num, col1 FROM #babel_539NewTable1 ORDER BY col1;
GO
~~START~~
int#!#int
1#!#10
101#!#20
201#!#30
~~END~~


DROP TABLE IF EXISTS #babel_539NewTable1;
GO

SELECT col1, [id_num]=IDENTITY(int, 1,1) INTO #babel_539NewTable1 FROM babel_539OldTable;
GO

SELECT id_num, col1 FROM #babel_539NewTable1 ORDER BY col1; 
GO
~~START~~
int#!#int
1#!#10
2#!#20
3#!#30
~~END~~


DROP TABLE IF EXISTS #babel_539NewTable1;
GO

SELECT col1, identity(int, 1,-100) AS [id_num] INTO #babel_539NewTable1 FROM babel_539OldTable;
GO

SELECT id_num, col1 FROM #babel_539NewTable1 ORDER BY col1; 
GO
~~START~~
int#!#int
1#!#10
-99#!#20
-199#!#30
~~END~~


DROP TABLE IF EXISTS #babel_539NewTable1;
GO

SELECT *, identity(int) AS [id_num] INTO #babel_539NewTable1 FROM babel_539OldTable;
GO

SELECT id_num, col1, name FROM #babel_539NewTable1 ORDER BY col1; 
GO
~~START~~
int#!#int#!#varchar
1#!#10#!#user1
2#!#20#!#user2
3#!#30#!#user3
~~END~~


DROP TABLE IF EXISTS #babel_539NewTable1;
GO

-- Self Join
SELECT IDENTITY(int,1,1) AS id_num, ltable.col1 AS col1, ltable.name AS name INTO #babel_539NewTable1 
FROM babel_539OldTable AS ltable JOIN babel_539OldTable AS rtable ON ltable.col1 <> rtable.col1 ORDER BY ltable.col1;
GO

SELECT id_num, col1, name FROM #babel_539NewTable1 ORDER BY col1; 
GO
~~START~~
int#!#int#!#varchar
1#!#10#!#user1
2#!#10#!#user1
3#!#20#!#user2
4#!#20#!#user2
5#!#30#!#user3
6#!#30#!#user3
~~END~~


DROP TABLE IF EXISTS #babel_539NewTable1;
GO

SELECT IDENTITY(bigint, 9223372036854775807, -1) id_num, col1, name INTO #babel_539NewTable1 FROM babel_539OldTable;
GO

SELECT id_num, col1, name FROM #babel_539NewTable1 ORDER BY col1; 
GO
~~START~~
bigint#!#int#!#varchar
9223372036854775807#!#10#!#user1
9223372036854775806#!#20#!#user2
9223372036854775805#!#30#!#user3
~~END~~


DROP TABLE IF EXISTS #babel_539NewTable1;
GO

SELECT IDENTITY(numeric, -9223372036854775806, +1) id_num, col1, name INTO #babel_539NewTable1 FROM babel_539OldTable;
GO

SELECT id_num, col1, name FROM #babel_539NewTable1 ORDER BY col1; 
GO
~~START~~
bigint#!#int#!#varchar
-9223372036854775806#!#10#!#user1
-9223372036854775805#!#20#!#user2
-9223372036854775804#!#30#!#user3
~~END~~


DROP TABLE IF EXISTS #babel_539NewTable1;
GO

SELECT IDENTITY(numeric(19,0), 9223372036854775807, -1) id_num, col1, name INTO #babel_539NewTable1 FROM babel_539OldTable;
GO

SELECT id_num, col1, name FROM #babel_539NewTable1 ORDER BY col1; 
GO
~~START~~
bigint#!#int#!#varchar
9223372036854775807#!#10#!#user1
9223372036854775806#!#20#!#user2
9223372036854775805#!#30#!#user3
~~END~~


DROP TABLE IF EXISTS #babel_539NewTable1;
GO

SELECT IDENTITY(numeric(19,0), 1, 1) as id_num, * into #babel_539NewTable1 from babel_539OldTable where 1=1;
GO

SELECT col1, name, id_num FROM #babel_539NewTable1 ORDER BY col1; 
GO
~~START~~
int#!#varchar#!#bigint
10#!#user1#!#1
20#!#user2#!#2
30#!#user3#!#3
~~END~~


DROP TABLE IF EXISTS #babel_539NewTable1;
GO

SELECT col1, IDENTITY(int, 1, 1) AS id_num, name INTO #babel_539NewTable1 FROM babel_539OldTable ORDER BY col1 DESC;
GO

SELECT col1, name, id_num FROM #babel_539NewTable1 ORDER BY col1; 
GO
~~START~~
int#!#varchar#!#int
10#!#user1#!#3
20#!#user2#!#2
30#!#user3#!#1
~~END~~


DROP TABLE IF EXISTS #babel_539NewTable1;
GO

SELECT DISTINCT IDENTITY(int, 1, 1) AS id_num, col1, name INTO #babel_539NewTable1 FROM babel_539OldTable ORDER BY col1;
GO

SELECT col1, name, id_num FROM #babel_539NewTable1 ORDER BY col1; 
GO
~~START~~
int#!#varchar#!#int
10#!#user1#!#1
20#!#user2#!#2
30#!#user3#!#3
~~END~~


DROP TABLE IF EXISTS #babel_539NewTable1;
GO

SELECT DISTINCT name, col1, IDENTITY(int, 1, 1) AS id_num INTO #babel_539NewTable1 FROM babel_539OldTable ORDER BY name;
GO

SELECT col1, name, id_num FROM #babel_539NewTable1 ORDER BY name; 
GO
~~START~~
int#!#varchar#!#int
10#!#user1#!#1
20#!#user2#!#2
30#!#user3#!#3
~~END~~


DROP TABLE IF EXISTS #babel_539NewTable1;
GO

SELECT TOP 2 col1, name, IDENTITY(int, 1, 1) AS id_num INTO #babel_539NewTable1 FROM babel_539OldTable ORDER BY col1;
GO

SELECT col1, name, id_num FROM #babel_539NewTable1 ORDER BY col1; 
GO
~~START~~
int#!#varchar#!#int
10#!#user1#!#1
20#!#user2#!#2
~~END~~


DROP TABLE IF EXISTS #babel_539NewTable1;
GO

SELECT TOP 2 IDENTITY(int, 1, 1) AS id_num, col1 INTO #babel_539NewTable1 FROM babel_539OldTable ORDER BY col1, name;
GO

SELECT col1, name, id_num FROM #babel_539NewTable1 ORDER BY col1; 
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: column "name" does not exist)~~


DROP TABLE IF EXISTS #babel_539NewTable1;
GO

-- Erros cases
SELECT IDENTITY(int, -10, 1+1) id_num, col1, name INTO #babel_539NewTable1 FROM babel_539OldTable;
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: syntax error near 'identity')~~


SELECT IDENTITY(int, 1, 1-2) id_num, col1, name INTO #babel_539NewTable1 FROM babel_539OldTable;
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: syntax error near 'identity')~~


-- Non numeric types
SELECT col1, IDENTITY(char, 1,1) AS id_num INTO #babel_539NewTable1 FROM babel_539OldTable;
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Parameter or variable '' has an invalid data type.)~~


--UDD
CREATE type test_type_id FROM int;
GO

SELECT col1, IDENTITY(test_type_id, 1,1) AS id_num INTO #babel_539NewTable1 FROM babel_539OldTable;
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: A user-defined data type for an IDENTITY column is not currently supported)~~


DROP type test_type_id;
GO

SELECT col1, IDENTITY(int, 1,1,1) AS id_num INTO #babel_539NewTable1 FROM babel_539OldTable;
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: syntax error at or near ",")~~


DROP TABLE IF EXISTS #babel_539NewTable1;
GO

-- impact to other similar queries and functions
-- normal create table cases
CREATE TABLE babel_539OldTable2 (col1 int NOT NULL, name varchar(20), id_num INT IDENTITY(1, 2));
GO

INSERT INTO babel_539OldTable2 VALUES (10, 'user1') , (20, 'user2'), (30, 'user3');
GO
~~ROW COUNT: 3~~


DROP TABLE IF EXISTS babel_539NewTable2;
GO

SELECT id_num, col1, name INTO babel_539NewTable2 FROM babel_539OldTable2 ORDER BY col1;
GO

SELECT id_num, col1, name FROM babel_539NewTable2 ORDER BY col1; 
GO
~~START~~
int#!#int#!#varchar
1#!#10#!#user1
3#!#20#!#user2
5#!#30#!#user3
~~END~~


DROP TABLE IF EXISTS babel_539OldTable2;
GO

DROP TABLE IF EXISTS babel_539NewTable2;
GO

-- create table as temp table
CREATE TABLE #babel_539NewTable2 (col1 int, name varchar(20),  id_num int IDENTITY(-1, 2));
GO

INSERT INTO #babel_539NewTable2(col1, name) VALUES (10, 'user1') , (20, 'user2'), (30, 'user3');
GO
~~ROW COUNT: 3~~


SELECT id_num, col1, name FROM #babel_539NewTable2 ORDER BY col1; 
GO
~~START~~
int#!#int#!#varchar
-1#!#10#!#user1
1#!#20#!#user2
3#!#30#!#user3
~~END~~


DROP TABLE IF EXISTS #babel_539NewTable2;
GO

CREATE TABLE #babel_539NewTable2 (col1 int, name varchar(20) );
GO

SELECT col1, name FROM #babel_539NewTable2 ORDER BY col1; 
GO
~~START~~
int#!#varchar
~~END~~


-- try altering table and check other columns, sequence should drop and any constraints also
ALTER TABLE #babel_539NewTable2 ADD id_num int IDENTITY(1, 1);
GO

INSERT INTO #babel_539NewTable2(col1, name) VALUES (10, 'user1') , (20, 'user2'), (30, 'user3');
GO
~~ROW COUNT: 3~~


SELECT id_num, col1, name FROM #babel_539NewTable2 ORDER BY col1; 
GO
~~START~~
int#!#int#!#varchar
1#!#10#!#user1
2#!#20#!#user2
3#!#30#!#user3
~~END~~


DROP TABLE IF EXISTS #babel_539NewTable2;
GO

-- Two identity columns in a query
SELECT col1, IDENTITY(int, 1,1) as id_num, IDENTITY(int, 1,1) as id_num2 INTO babel_539NewTable2 FROM babel_539OldTable;
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Attempting to add multiple identity columns to table "babel_539newtable2" using the SELECT INTO statement.)~~


SELECT col1, IDENTITY() AS id_num INTO babel_539NewTable1 FROM babel_539OldTable;
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: syntax error at or near ")")~~


--calling internal function directly
SELECT sys.IDENTITY(23, 1);
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: The IDENTITY function can only be used when the SELECT statement has an INTO clause.)~~


SELECT IDENTITY(int, 21);
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: The IDENTITY function can only be used when the SELECT statement has an INTO clause.)~~


SELECT sys.IDENTITY_INTO_BIGINT(20, 1, 1);
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: function IDENTITY_INTO_BIGINT does not exist)~~


EXEC sp_babelfish_configure 'babelfishpg_tsql.escape_hatch_identity_function', 'strict';
GO
