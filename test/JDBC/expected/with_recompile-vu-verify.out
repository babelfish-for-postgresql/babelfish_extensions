SELECT set_config('babelfishpg_tsql.explain_costs', 'off', false)
go
~~START~~
text
off
~~END~~





/*
 * These tests validate the T-SQL RECOMPILE behaviour for stored procedures.
 * The approach is to demonstrate the recompilation by disabling index scans, 
 * and observing a different plan being generated only when RECOMPILE is used.
 * Note that when a cached plan is used, there is no good way to prove in these tests that 
 * it was indeed a cached plan, as it could just as well be a newly generated plan that 
 * happens to be the same as the previous plan. While developing this fix, the PG planner() 
 * function was instrumented to prove that cached plans are indeed used when plan_cache_mode={auto|force_generic_plan},
 * but that is outside the scope of what can be used in these automated tests.
 * This fix for forcing plans for statements in the procedure body to be recompiled only
 * applies to paramtrized statements. Non-parametrized stmts, like the 2nd select in tb_recomp_11, 
 * will not be recompiled since choose_custom_plan() will always return false for those.
 * The current fix can be extended to also force such stmts to be recompiled but that is 
 * left for later.
 
 * Not tested:
 * - recursive procedure calls, since Babelfish does not show plans when a conditional statement 
 *   is involved (manual testing has shown RECOMPILE works as expected, i.e. the recursive call is
 *   handled independently from the higher-level call)
 * - plans inside SQL functions or triggers (not shown by PG when called from a procedure)
 
 */
select '==== EXEC with RECOMPILE tests with plan_cache_mode=auto ======'  
go
~~START~~
varchar
==== EXEC with RECOMPILE tests with plan_cache_mode=auto ======
~~END~~

select set_config('plan_cache_mode', 'auto', false)
go
~~START~~
text
auto
~~END~~

select set_config('enable_indexscan', 'on', false)
go
~~START~~
text
on
~~END~~

SELECT current_setting('plan_cache_mode') as plan_mode_before
go
~~START~~
text
auto
~~END~~

SELECT current_setting('enable_indexscan') as enable_indexscan_before
go
~~START~~
text
on
~~END~~


select '--- p_recomp_11: no generic plan generated first -----'
go
~~START~~
varchar
--- p_recomp_11: no generic plan generated first -----
~~END~~

select '--- using index scan ----'
go
~~START~~
varchar
--- using index scan ----
~~END~~

set babelfish_showplan_all on
go
execute p_recomp_11 1
go
~~START~~
text
Query Text: EXEC    p_recomp_11 1
  Query Text: select * from tb_recomp_11 where c11 = "@p"
  ->  Index Scan using tb_recomp_11_pkey on tb_recomp_11
        Index Cond: (c11 = 1)
  Query Text: select * from tb_recomp_11 where c11 = 1
  ->  Index Scan using tb_recomp_11_pkey on tb_recomp_11
        Index Cond: (c11 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- tb_recomp_12: generate generic plan after repeated custom plans -----'
go
~~START~~
varchar
--- tb_recomp_12: generate generic plan after repeated custom plans -----
~~END~~


-- tb_recomp_12: generate generic plan after repeated custom plans
declare @i int = 6
while @i > 0
begin
exec    p_recomp_12 1
set @i -= 1
end
go
~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~


-- generic plan is now created for tb_recomp_12 --> no further replanning according to PG approach
set babelfish_showplan_all on
go
exec    p_recomp_12 1
go
~~START~~
text
Query Text: EXEC    p_recomp_12 1
  Query Text: select * from tb_recomp_12 where c12 = "@p"
  ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
        Index Cond: (c12 = $1)
  Query Text: select * from tb_recomp_12 where c12 = 1
  ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
        Index Cond: (c12 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- turning off index scan ----'
go
~~START~~
varchar
--- turning off index scan ----
~~END~~

select set_config('enable_indexscan', 'off', false)
go
~~START~~
text
off
~~END~~

select current_setting('enable_indexscan') as indexscan_off
go
~~START~~
text
off
~~END~~


select '--- EXEC with RECOMPILE: recompiled plan: bitmap scan for parametrized stmt, index scan for non-parametrized ----'
go
~~START~~
varchar
--- EXEC with RECOMPILE: recompiled plan: bitmap scan for parametrized stmt, index scan for non-parametrized ----
~~END~~


set babelfish_showplan_all on
go
execute p_recomp_11 1 with recompile
go
~~START~~
text
Query Text: EXEC    p_recomp_11 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_11 where c11 = "@p"
  ->  Bitmap Heap Scan on tb_recomp_11
        Recheck Cond: (c11 = 1)
        ->  Bitmap Index Scan on tb_recomp_11_pkey
              Index Cond: (c11 = 1)
  Query Text: select * from tb_recomp_11 where c11 = 1
  ->  Index Scan using tb_recomp_11_pkey on tb_recomp_11
        Index Cond: (c11 = 1)
~~END~~

exec    p_recomp_12 1 with recompile
go
~~START~~
text
Query Text: EXEC    p_recomp_12 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_12 where c12 = "@p"
  ->  Bitmap Heap Scan on tb_recomp_12
        Recheck Cond: (c12 = 1)
        ->  Bitmap Index Scan on tb_recomp_12_pkey
              Index Cond: (c12 = 1)
  Query Text: select * from tb_recomp_12 where c12 = 1
  ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
        Index Cond: (c12 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- EXEC without RECOMPILE: index scan (using cached plan) ----'
go
~~START~~
varchar
--- EXEC without RECOMPILE: index scan (using cached plan) ----
~~END~~

set babelfish_showplan_all on
go
exec    p_recomp_12 1 
go
~~START~~
text
Query Text: EXEC    p_recomp_12 1
  Query Text: select * from tb_recomp_12 where c12 = "@p"
  ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
        Index Cond: (c12 = $1)
  Query Text: select * from tb_recomp_12 where c12 = 1
  ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
        Index Cond: (c12 = 1)
~~END~~

set babelfish_showplan_all off
go


select '--- RECOMPILE combined with other option ----'
go
~~START~~
varchar
--- RECOMPILE combined with other option ----
~~END~~

set babelfish_showplan_all on
go
exec    p_recomp_11 1 with recompile, result sets none
go
~~START~~
text
Query Text: EXEC    p_recomp_11 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_11 where c11 = "@p"
  ->  Bitmap Heap Scan on tb_recomp_11
        Recheck Cond: (c11 = 1)
        ->  Bitmap Index Scan on tb_recomp_11_pkey
              Index Cond: (c11 = 1)
  Query Text: select * from tb_recomp_11 where c11 = 1
  ->  Index Scan using tb_recomp_11_pkey on tb_recomp_11
        Index Cond: (c11 = 1)
~~END~~

exec    p_recomp_11 1 with result sets none, recompile
go
~~START~~
text
Query Text: EXEC    p_recomp_11 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_11 where c11 = "@p"
  ->  Bitmap Heap Scan on tb_recomp_11
        Recheck Cond: (c11 = 1)
        ->  Bitmap Index Scan on tb_recomp_11_pkey
              Index Cond: (c11 = 1)
  Query Text: select * from tb_recomp_11 where c11 = 1
  ->  Index Scan using tb_recomp_11_pkey on tb_recomp_11
        Index Cond: (c11 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- tb_recomp_13: first execution: bitmap scan for both statements ----'
go
~~START~~
varchar
--- tb_recomp_13: first execution: bitmap scan for both statements ----
~~END~~

set babelfish_showplan_all on
go
exec    p_recomp_13 1
go
~~START~~
text
Query Text: EXEC    p_recomp_13 1
  Query Text: select * from tb_recomp_13 where c13 = "@p"
  ->  Bitmap Heap Scan on tb_recomp_13
        Recheck Cond: (c13 = 1)
        ->  Bitmap Index Scan on tb_recomp_13_pkey
              Index Cond: (c13 = 1)
  Query Text: select * from tb_recomp_13 where c13 = 1
  ->  Bitmap Heap Scan on tb_recomp_13
        Recheck Cond: (c13 = 1)
        ->  Bitmap Index Scan on tb_recomp_13_pkey
              Index Cond: (c13 = 1)
~~END~~

exec    p_recomp_13 1 with recompile
go
~~START~~
text
Query Text: EXEC    p_recomp_13 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_13 where c13 = "@p"
  ->  Bitmap Heap Scan on tb_recomp_13
        Recheck Cond: (c13 = 1)
        ->  Bitmap Index Scan on tb_recomp_13_pkey
              Index Cond: (c13 = 1)
  Query Text: select * from tb_recomp_13 where c13 = 1
  ->  Bitmap Heap Scan on tb_recomp_13
        Recheck Cond: (c13 = 1)
        ->  Bitmap Index Scan on tb_recomp_13_pkey
              Index Cond: (c13 = 1)
~~END~~

set babelfish_showplan_all off
go

-- tb_recomp_13: generate generic plan after repeated custom plans
declare @i int = 6
while @i > 0
begin
exec    p_recomp_13 1
set @i -= 1
end
go
~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~


-- generic plan is now created for tb_recomp_13 --> no further replanning according to PG approach
select '--- turning on index scan ----'
go
~~START~~
varchar
--- turning on index scan ----
~~END~~

select set_config('enable_indexscan', 'on', false)
go
~~START~~
text
on
~~END~~

select current_setting('enable_indexscan') as indexscan_on
go
~~START~~
text
on
~~END~~


select '--- EXEC with RECOMPILE: recompiled plan: index scan ----'
go
~~START~~
varchar
--- EXEC with RECOMPILE: recompiled plan: index scan ----
~~END~~

set babelfish_showplan_all on
go
execute p_recomp_11 1 with recompile 
go
~~START~~
text
Query Text: EXEC    p_recomp_11 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_11 where c11 = "@p"
  ->  Index Scan using tb_recomp_11_pkey on tb_recomp_11
        Index Cond: (c11 = 1)
  Query Text: select * from tb_recomp_11 where c11 = 1
  ->  Index Scan using tb_recomp_11_pkey on tb_recomp_11
        Index Cond: (c11 = 1)
~~END~~

exec    p_recomp_12 1 with recompile 
go
~~START~~
text
Query Text: EXEC    p_recomp_12 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_12 where c12 = "@p"
  ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
        Index Cond: (c12 = 1)
  Query Text: select * from tb_recomp_12 where c12 = 1
  ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
        Index Cond: (c12 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- EXEC without RECOMPILE: index scan (using cached plan) ----'
go
~~START~~
varchar
--- EXEC without RECOMPILE: index scan (using cached plan) ----
~~END~~

set babelfish_showplan_all on
go
exec    p_recomp_12 1 
go
~~START~~
text
Query Text: EXEC    p_recomp_12 1
  Query Text: select * from tb_recomp_12 where c12 = "@p"
  ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
        Index Cond: (c12 = $1)
  Query Text: select * from tb_recomp_12 where c12 = 1
  ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
        Index Cond: (c12 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- tb_recomp_13: EXEC with RECOMPILE: recompiled plan: index scan for paramtrized stmt, bitmap scan for non-param stmt ----'
go
~~START~~
varchar
--- tb_recomp_13: EXEC with RECOMPILE: recompiled plan: index scan for paramtrized stmt, bitmap scan for non-param stmt ----
~~END~~

set babelfish_showplan_all on
go
execute p_recomp_13 1 with recompile 
go
~~START~~
text
Query Text: EXEC    p_recomp_13 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_13 where c13 = "@p"
  ->  Index Scan using tb_recomp_13_pkey on tb_recomp_13
        Index Cond: (c13 = 1)
  Query Text: select * from tb_recomp_13 where c13 = 1
  ->  Bitmap Heap Scan on tb_recomp_13
        Recheck Cond: (c13 = 1)
        ->  Bitmap Index Scan on tb_recomp_13_pkey
              Index Cond: (c13 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- tb_recomp_13 without RECOMPILE: bitmap scan for both statements ----'
go
~~START~~
varchar
--- tb_recomp_13 without RECOMPILE: bitmap scan for both statements ----
~~END~~

set babelfish_showplan_all on
go
exec    p_recomp_13 1
go
~~START~~
text
Query Text: EXEC    p_recomp_13 1
  Query Text: select * from tb_recomp_13 where c13 = "@p"
  ->  Bitmap Heap Scan on tb_recomp_13
        Recheck Cond: (c13 = $1)
        ->  Bitmap Index Scan on tb_recomp_13_pkey
              Index Cond: (c13 = $1)
  Query Text: select * from tb_recomp_13 where c13 = 1
  ->  Bitmap Heap Scan on tb_recomp_13
        Recheck Cond: (c13 = 1)
        ->  Bitmap Index Scan on tb_recomp_13_pkey
              Index Cond: (c13 = 1)
~~END~~

exec    p_recomp_13 1 with recompile
go
~~START~~
text
Query Text: EXEC    p_recomp_13 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_13 where c13 = "@p"
  ->  Index Scan using tb_recomp_13_pkey on tb_recomp_13
        Index Cond: (c13 = 1)
  Query Text: select * from tb_recomp_13 where c13 = 1
  ->  Bitmap Heap Scan on tb_recomp_13
        Recheck Cond: (c13 = 1)
        ->  Bitmap Index Scan on tb_recomp_13_pkey
              Index Cond: (c13 = 1)
~~END~~

set babelfish_showplan_all off
go


select '==== EXEC with RECOMPILE tests with plan_cache_mode=force_generic_plan ======'  
go
~~START~~
varchar
==== EXEC with RECOMPILE tests with plan_cache_mode=force_generic_plan ======
~~END~~

select set_config('plan_cache_mode', 'force_generic_plan', false)
go
~~START~~
text
force_generic_plan
~~END~~

SELECT current_setting('plan_cache_mode') as plan_mode_before
go
~~START~~
text
force_generic_plan
~~END~~

SELECT current_setting('enable_indexscan') as enable_indexscan_after
go
~~START~~
text
on
~~END~~



select '--- p_recomp_21: no generic plan generated first ------'
go
~~START~~
varchar
--- p_recomp_21: no generic plan generated first ------
~~END~~

select '--- using index scan ----'
go
~~START~~
varchar
--- using index scan ----
~~END~~

set babelfish_showplan_all on
go
execute p_recomp_21 1
go
~~START~~
text
Query Text: EXEC    p_recomp_21 1
  Query Text: select * from tb_recomp_21 where c21 = "@p"
  ->  Index Scan using tb_recomp_21_pkey on tb_recomp_21
        Index Cond: (c21 = $1)
  Query Text: select * from tb_recomp_21 where c21 = 1
  ->  Index Scan using tb_recomp_21_pkey on tb_recomp_21
        Index Cond: (c21 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- tb_recomp_22: generate generic plan after repeated custom plans ------'
go
~~START~~
varchar
--- tb_recomp_22: generate generic plan after repeated custom plans ------
~~END~~


-- tb_recomp_22: generate generic plan after repeated custom plans
declare @i int = 6
while @i > 0
begin
exec    p_recomp_22 1
set @i -= 1
end
go
~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~


-- generic plan is now created for tb_recomp_22 --> no further replanning according to PG approach
set babelfish_showplan_all on
go
exec    p_recomp_22 1
go
~~START~~
text
Query Text: EXEC    p_recomp_22 1
  Query Text: select * from tb_recomp_22 where c22 = "@p"
  ->  Index Scan using tb_recomp_22_pkey on tb_recomp_22
        Index Cond: (c22 = $1)
  Query Text: select * from tb_recomp_22 where c22 = 1
  ->  Index Scan using tb_recomp_22_pkey on tb_recomp_22
        Index Cond: (c22 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- turning off index scan ----'
go
~~START~~
varchar
--- turning off index scan ----
~~END~~

select set_config('enable_indexscan', 'off', false)
go
~~START~~
text
off
~~END~~

select current_setting('enable_indexscan') as indexscan_off
go
~~START~~
text
off
~~END~~


select '--- EXEC with RECOMPILE: recompiled plan: bitmap scan for parametrized stmt, index scan for non-parametrized ----'
go
~~START~~
varchar
--- EXEC with RECOMPILE: recompiled plan: bitmap scan for parametrized stmt, index scan for non-parametrized ----
~~END~~


set babelfish_showplan_all on
go
execute p_recomp_21 1 with recompile
go
~~START~~
text
Query Text: EXEC    p_recomp_21 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_21 where c21 = "@p"
  ->  Bitmap Heap Scan on tb_recomp_21
        Recheck Cond: (c21 = 1)
        ->  Bitmap Index Scan on tb_recomp_21_pkey
              Index Cond: (c21 = 1)
  Query Text: select * from tb_recomp_21 where c21 = 1
  ->  Index Scan using tb_recomp_21_pkey on tb_recomp_21
        Index Cond: (c21 = 1)
~~END~~

exec    p_recomp_22 1 with recompile
go
~~START~~
text
Query Text: EXEC    p_recomp_22 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_22 where c22 = "@p"
  ->  Bitmap Heap Scan on tb_recomp_22
        Recheck Cond: (c22 = 1)
        ->  Bitmap Index Scan on tb_recomp_22_pkey
              Index Cond: (c22 = 1)
  Query Text: select * from tb_recomp_22 where c22 = 1
  ->  Index Scan using tb_recomp_22_pkey on tb_recomp_22
        Index Cond: (c22 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- EXEC without RECOMPILE: index scan (using cached plan) ----'
go
~~START~~
varchar
--- EXEC without RECOMPILE: index scan (using cached plan) ----
~~END~~

set babelfish_showplan_all on
go
exec    p_recomp_22 1 
go
~~START~~
text
Query Text: EXEC    p_recomp_22 1
  Query Text: select * from tb_recomp_22 where c22 = "@p"
  ->  Index Scan using tb_recomp_22_pkey on tb_recomp_22
        Index Cond: (c22 = $1)
  Query Text: select * from tb_recomp_22 where c22 = 1
  ->  Index Scan using tb_recomp_22_pkey on tb_recomp_22
        Index Cond: (c22 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- tb_recomp_23: first execution: bitmap scan for both statements ----'
go
~~START~~
varchar
--- tb_recomp_23: first execution: bitmap scan for both statements ----
~~END~~

set babelfish_showplan_all on
go
exec    p_recomp_23 1
go
~~START~~
text
Query Text: EXEC    p_recomp_23 1
  Query Text: select * from tb_recomp_23 where c23 = "@p"
  ->  Bitmap Heap Scan on tb_recomp_23
        Recheck Cond: (c23 = $1)
        ->  Bitmap Index Scan on tb_recomp_23_pkey
              Index Cond: (c23 = $1)
  Query Text: select * from tb_recomp_23 where c23 = 1
  ->  Bitmap Heap Scan on tb_recomp_23
        Recheck Cond: (c23 = 1)
        ->  Bitmap Index Scan on tb_recomp_23_pkey
              Index Cond: (c23 = 1)
~~END~~

exec    p_recomp_23 1 with recompile
go
~~START~~
text
Query Text: EXEC    p_recomp_23 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_23 where c23 = "@p"
  ->  Bitmap Heap Scan on tb_recomp_23
        Recheck Cond: (c23 = 1)
        ->  Bitmap Index Scan on tb_recomp_23_pkey
              Index Cond: (c23 = 1)
  Query Text: select * from tb_recomp_23 where c23 = 1
  ->  Bitmap Heap Scan on tb_recomp_23
        Recheck Cond: (c23 = 1)
        ->  Bitmap Index Scan on tb_recomp_23_pkey
              Index Cond: (c23 = 1)
~~END~~

set babelfish_showplan_all off
go

-- tb_recomp_23: generate generic plan after repeated custom plans
declare @i int = 6
while @i > 0
begin
exec    p_recomp_23 1
set @i -= 1
end
go
~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~


-- generic plan is now created for tb_recomp_23 --> no further replanning according to PG approach
select '--- turning on index scan ----'
go
~~START~~
varchar
--- turning on index scan ----
~~END~~

select set_config('enable_indexscan', 'on', false)
go
~~START~~
text
on
~~END~~

select current_setting('enable_indexscan') as indexscan_on
go
~~START~~
text
on
~~END~~


select '--- EXEC with RECOMPILE: recompiled plan: index scan ----'
go
~~START~~
varchar
--- EXEC with RECOMPILE: recompiled plan: index scan ----
~~END~~

set babelfish_showplan_all on
go
execute p_recomp_21 1 with recompile 
go
~~START~~
text
Query Text: EXEC    p_recomp_21 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_21 where c21 = "@p"
  ->  Index Scan using tb_recomp_21_pkey on tb_recomp_21
        Index Cond: (c21 = 1)
  Query Text: select * from tb_recomp_21 where c21 = 1
  ->  Index Scan using tb_recomp_21_pkey on tb_recomp_21
        Index Cond: (c21 = 1)
~~END~~

exec    p_recomp_22 1 with recompile 
go
~~START~~
text
Query Text: EXEC    p_recomp_22 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_22 where c22 = "@p"
  ->  Index Scan using tb_recomp_22_pkey on tb_recomp_22
        Index Cond: (c22 = 1)
  Query Text: select * from tb_recomp_22 where c22 = 1
  ->  Index Scan using tb_recomp_22_pkey on tb_recomp_22
        Index Cond: (c22 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- EXEC without RECOMPILE: index scan (using cached plan) ----'
go
~~START~~
varchar
--- EXEC without RECOMPILE: index scan (using cached plan) ----
~~END~~

set babelfish_showplan_all on
go
exec    p_recomp_22 1 
go
~~START~~
text
Query Text: EXEC    p_recomp_22 1
  Query Text: select * from tb_recomp_22 where c22 = "@p"
  ->  Index Scan using tb_recomp_22_pkey on tb_recomp_22
        Index Cond: (c22 = $1)
  Query Text: select * from tb_recomp_22 where c22 = 1
  ->  Index Scan using tb_recomp_22_pkey on tb_recomp_22
        Index Cond: (c22 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- tb_recomp_23: EXEC with RECOMPILE: recompiled plan: index scan for paramtrized stmt, bitmap scan for non-param stmt ----'
go
~~START~~
varchar
--- tb_recomp_23: EXEC with RECOMPILE: recompiled plan: index scan for paramtrized stmt, bitmap scan for non-param stmt ----
~~END~~

set babelfish_showplan_all on
go
execute p_recomp_23 1 with recompile 
go
~~START~~
text
Query Text: EXEC    p_recomp_23 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_23 where c23 = "@p"
  ->  Index Scan using tb_recomp_23_pkey on tb_recomp_23
        Index Cond: (c23 = 1)
  Query Text: select * from tb_recomp_23 where c23 = 1
  ->  Bitmap Heap Scan on tb_recomp_23
        Recheck Cond: (c23 = 1)
        ->  Bitmap Index Scan on tb_recomp_23_pkey
              Index Cond: (c23 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- tb_recomp_23 without RECOMPILE: bitmap scan for both statements ----'
go
~~START~~
varchar
--- tb_recomp_23 without RECOMPILE: bitmap scan for both statements ----
~~END~~

set babelfish_showplan_all on
go
exec    p_recomp_23 1
go
~~START~~
text
Query Text: EXEC    p_recomp_23 1
  Query Text: select * from tb_recomp_23 where c23 = "@p"
  ->  Bitmap Heap Scan on tb_recomp_23
        Recheck Cond: (c23 = $1)
        ->  Bitmap Index Scan on tb_recomp_23_pkey
              Index Cond: (c23 = $1)
  Query Text: select * from tb_recomp_23 where c23 = 1
  ->  Bitmap Heap Scan on tb_recomp_23
        Recheck Cond: (c23 = 1)
        ->  Bitmap Index Scan on tb_recomp_23_pkey
              Index Cond: (c23 = 1)
~~END~~

exec    p_recomp_23 1 with recompile
go
~~START~~
text
Query Text: EXEC    p_recomp_23 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_23 where c23 = "@p"
  ->  Index Scan using tb_recomp_23_pkey on tb_recomp_23
        Index Cond: (c23 = 1)
  Query Text: select * from tb_recomp_23 where c23 = 1
  ->  Bitmap Heap Scan on tb_recomp_23
        Recheck Cond: (c23 = 1)
        ->  Bitmap Index Scan on tb_recomp_23_pkey
              Index Cond: (c23 = 1)
~~END~~

set babelfish_showplan_all off
go


select '==== EXEC with RECOMPILE tests with plan_cache_mode=force_custom_plan ======'  
go
~~START~~
varchar
==== EXEC with RECOMPILE tests with plan_cache_mode=force_custom_plan ======
~~END~~

select set_config('plan_cache_mode', 'force_custom_plan', false)
go
~~START~~
text
force_custom_plan
~~END~~

SELECT current_setting('plan_cache_mode') as plan_mode_before
go
~~START~~
text
force_custom_plan
~~END~~

SELECT current_setting('enable_indexscan') as enable_indexscan_after
go
~~START~~
text
on
~~END~~




select '--- p_recomp_31: no generic plan generated first ------'
go
~~START~~
varchar
--- p_recomp_31: no generic plan generated first ------
~~END~~

select '--- using index scan ----'
go
~~START~~
varchar
--- using index scan ----
~~END~~

set babelfish_showplan_all on
go
execute p_recomp_31 1
go
~~START~~
text
Query Text: EXEC    p_recomp_31 1
  Query Text: select * from tb_recomp_31 where c31 = "@p"
  ->  Index Scan using tb_recomp_31_pkey on tb_recomp_31
        Index Cond: (c31 = 1)
  Query Text: select * from tb_recomp_31 where c31 = 1
  ->  Index Scan using tb_recomp_31_pkey on tb_recomp_31
        Index Cond: (c31 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- tb_recomp_32: generate generic plan after repeated custom plans ------'
go
~~START~~
varchar
--- tb_recomp_32: generate generic plan after repeated custom plans ------
~~END~~


-- tb_recomp_32: generate generic plan after repeated custom plans
declare @i int = 6
while @i > 0
begin
exec    p_recomp_32 1
set @i -= 1
end
go
~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~


-- generic plan is now created for tb_recomp_32 --> no further replanning according to PG approach
set babelfish_showplan_all on
go
exec    p_recomp_32 1
go
~~START~~
text
Query Text: EXEC    p_recomp_32 1
  Query Text: select * from tb_recomp_32 where c32 = "@p"
  ->  Index Scan using tb_recomp_32_pkey on tb_recomp_32
        Index Cond: (c32 = 1)
  Query Text: select * from tb_recomp_32 where c32 = 1
  ->  Index Scan using tb_recomp_32_pkey on tb_recomp_32
        Index Cond: (c32 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- turning off index scan ----'
go
~~START~~
varchar
--- turning off index scan ----
~~END~~

select set_config('enable_indexscan', 'off', false)
go
~~START~~
text
off
~~END~~

select current_setting('enable_indexscan') as indexscan_off
go
~~START~~
text
off
~~END~~


select '--- EXEC with RECOMPILE: recompiled plan: bitmap scan for parametrized stmt, index scan for non-parametrized ----'
go
~~START~~
varchar
--- EXEC with RECOMPILE: recompiled plan: bitmap scan for parametrized stmt, index scan for non-parametrized ----
~~END~~


set babelfish_showplan_all on
go
execute p_recomp_31 1 with recompile
go
~~START~~
text
Query Text: EXEC    p_recomp_31 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_31 where c31 = "@p"
  ->  Bitmap Heap Scan on tb_recomp_31
        Recheck Cond: (c31 = 1)
        ->  Bitmap Index Scan on tb_recomp_31_pkey
              Index Cond: (c31 = 1)
  Query Text: select * from tb_recomp_31 where c31 = 1
  ->  Index Scan using tb_recomp_31_pkey on tb_recomp_31
        Index Cond: (c31 = 1)
~~END~~

exec    p_recomp_32 1 with recompile
go
~~START~~
text
Query Text: EXEC    p_recomp_32 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_32 where c32 = "@p"
  ->  Bitmap Heap Scan on tb_recomp_32
        Recheck Cond: (c32 = 1)
        ->  Bitmap Index Scan on tb_recomp_32_pkey
              Index Cond: (c32 = 1)
  Query Text: select * from tb_recomp_32 where c32 = 1
  ->  Index Scan using tb_recomp_32_pkey on tb_recomp_32
        Index Cond: (c32 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- EXEC without RECOMPILE: bitmap scan (due to force_custom_plans ----'
go
~~START~~
varchar
--- EXEC without RECOMPILE: bitmap scan (due to force_custom_plans ----
~~END~~

set babelfish_showplan_all on
go
exec    p_recomp_32 1 
go
~~START~~
text
Query Text: EXEC    p_recomp_32 1
  Query Text: select * from tb_recomp_32 where c32 = "@p"
  ->  Bitmap Heap Scan on tb_recomp_32
        Recheck Cond: (c32 = 1)
        ->  Bitmap Index Scan on tb_recomp_32_pkey
              Index Cond: (c32 = 1)
  Query Text: select * from tb_recomp_32 where c32 = 1
  ->  Index Scan using tb_recomp_32_pkey on tb_recomp_32
        Index Cond: (c32 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- tb_recomp_33: first execution: bitmap scan for both statements ----'
go
~~START~~
varchar
--- tb_recomp_33: first execution: bitmap scan for both statements ----
~~END~~

set babelfish_showplan_all on
go
exec    p_recomp_33 1
go
~~START~~
text
Query Text: EXEC    p_recomp_33 1
  Query Text: select * from tb_recomp_33 where c33 = "@p"
  ->  Bitmap Heap Scan on tb_recomp_33
        Recheck Cond: (c33 = 1)
        ->  Bitmap Index Scan on tb_recomp_33_pkey
              Index Cond: (c33 = 1)
  Query Text: select * from tb_recomp_33 where c33 = 1
  ->  Bitmap Heap Scan on tb_recomp_33
        Recheck Cond: (c33 = 1)
        ->  Bitmap Index Scan on tb_recomp_33_pkey
              Index Cond: (c33 = 1)
~~END~~

exec    p_recomp_33 1 with recompile
go
~~START~~
text
Query Text: EXEC    p_recomp_33 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_33 where c33 = "@p"
  ->  Bitmap Heap Scan on tb_recomp_33
        Recheck Cond: (c33 = 1)
        ->  Bitmap Index Scan on tb_recomp_33_pkey
              Index Cond: (c33 = 1)
  Query Text: select * from tb_recomp_33 where c33 = 1
  ->  Bitmap Heap Scan on tb_recomp_33
        Recheck Cond: (c33 = 1)
        ->  Bitmap Index Scan on tb_recomp_33_pkey
              Index Cond: (c33 = 1)
~~END~~

set babelfish_showplan_all off
go

-- tb_recomp_33: generate generic plan after repeated custom plans
declare @i int = 6
while @i > 0
begin
exec    p_recomp_33 1
set @i -= 1
end
go
~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~


-- generic plan is now created for tb_recomp_33 --> no further replanning according to PG approach
select '--- turning on index scan ----'
go
~~START~~
varchar
--- turning on index scan ----
~~END~~

select set_config('enable_indexscan', 'on', false)
go
~~START~~
text
on
~~END~~

select current_setting('enable_indexscan') as indexscan_on
go
~~START~~
text
on
~~END~~


select '--- EXEC with RECOMPILE: recompiled plan: index scan ----'
go
~~START~~
varchar
--- EXEC with RECOMPILE: recompiled plan: index scan ----
~~END~~

set babelfish_showplan_all on
go
execute p_recomp_31 1 with recompile 
go
~~START~~
text
Query Text: EXEC    p_recomp_31 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_31 where c31 = "@p"
  ->  Index Scan using tb_recomp_31_pkey on tb_recomp_31
        Index Cond: (c31 = 1)
  Query Text: select * from tb_recomp_31 where c31 = 1
  ->  Index Scan using tb_recomp_31_pkey on tb_recomp_31
        Index Cond: (c31 = 1)
~~END~~

exec    p_recomp_32 1 with recompile 
go
~~START~~
text
Query Text: EXEC    p_recomp_32 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_32 where c32 = "@p"
  ->  Index Scan using tb_recomp_32_pkey on tb_recomp_32
        Index Cond: (c32 = 1)
  Query Text: select * from tb_recomp_32 where c32 = 1
  ->  Index Scan using tb_recomp_32_pkey on tb_recomp_32
        Index Cond: (c32 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- EXEC without RECOMPILE: index scan (using cached plan) ----'
go
~~START~~
varchar
--- EXEC without RECOMPILE: index scan (using cached plan) ----
~~END~~

set babelfish_showplan_all on
go
exec    p_recomp_32 1 
go
~~START~~
text
Query Text: EXEC    p_recomp_32 1
  Query Text: select * from tb_recomp_32 where c32 = "@p"
  ->  Index Scan using tb_recomp_32_pkey on tb_recomp_32
        Index Cond: (c32 = 1)
  Query Text: select * from tb_recomp_32 where c32 = 1
  ->  Index Scan using tb_recomp_32_pkey on tb_recomp_32
        Index Cond: (c32 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- tb_recomp_33: EXEC with RECOMPILE: recompiled plan: index scan for paramtrized stmt, bitmap scan for non-param stmt ----'
go
~~START~~
varchar
--- tb_recomp_33: EXEC with RECOMPILE: recompiled plan: index scan for paramtrized stmt, bitmap scan for non-param stmt ----
~~END~~

set babelfish_showplan_all on
go
execute p_recomp_33 1 with recompile 
go
~~START~~
text
Query Text: EXEC    p_recomp_33 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_33 where c33 = "@p"
  ->  Index Scan using tb_recomp_33_pkey on tb_recomp_33
        Index Cond: (c33 = 1)
  Query Text: select * from tb_recomp_33 where c33 = 1
  ->  Bitmap Heap Scan on tb_recomp_33
        Recheck Cond: (c33 = 1)
        ->  Bitmap Index Scan on tb_recomp_33_pkey
              Index Cond: (c33 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- tb_recomp_33 without RECOMPILE: index scan for paramtrized stmt, bitmap scan for non-param stmt due to force_custom_plan ----'
go
~~START~~
varchar
--- tb_recomp_33 without RECOMPILE: index scan for paramtrized stmt, bitmap scan for non-param stmt due to force_custom_plan ----
~~END~~

set babelfish_showplan_all on
go
exec    p_recomp_33 1
go
~~START~~
text
Query Text: EXEC    p_recomp_33 1
  Query Text: select * from tb_recomp_33 where c33 = "@p"
  ->  Index Scan using tb_recomp_33_pkey on tb_recomp_33
        Index Cond: (c33 = 1)
  Query Text: select * from tb_recomp_33 where c33 = 1
  ->  Bitmap Heap Scan on tb_recomp_33
        Recheck Cond: (c33 = 1)
        ->  Bitmap Index Scan on tb_recomp_33_pkey
              Index Cond: (c33 = 1)
~~END~~

exec    p_recomp_33 1 with recompile
go
~~START~~
text
Query Text: EXEC    p_recomp_33 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_33 where c33 = "@p"
  ->  Index Scan using tb_recomp_33_pkey on tb_recomp_33
        Index Cond: (c33 = 1)
  Query Text: select * from tb_recomp_33 where c33 = 1
  ->  Bitmap Heap Scan on tb_recomp_33
        Recheck Cond: (c33 = 1)
        ->  Bitmap Index Scan on tb_recomp_33_pkey
              Index Cond: (c33 = 1)
~~END~~

set babelfish_showplan_all off
go

select '==== CREATE with RECOMPILE tests with plan_cache_mode=auto ======'  
go
~~START~~
varchar
==== CREATE with RECOMPILE tests with plan_cache_mode=auto ======
~~END~~

select set_config('plan_cache_mode', 'auto', false)
go
~~START~~
text
auto
~~END~~

select set_config('enable_indexscan', 'on', false)
go
~~START~~
text
on
~~END~~

SELECT current_setting('plan_cache_mode') as plan_mode_before
go
~~START~~
text
auto
~~END~~

SELECT current_setting('enable_indexscan') as enable_indexscan_before
go
~~START~~
text
on
~~END~~


select '--- tb_recomp_41/61 was created with RECOMPILE, so every execution uses RECOMPILE implicitly ------'
go
~~START~~
varchar
--- tb_recomp_41/61 was created with RECOMPILE, so every execution uses RECOMPILE implicitly ------
~~END~~


-- tb_recomp_41/61: following the same logic as for creating a generic plan, even though every call creates a custom plan
declare @i int = 6
while @i > 0
begin
exec    p_recomp_41 1
exec    p_recomp_61 1
set @i -= 1
end
go
~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~


select '--- index scan for both statements ---'
go
~~START~~
varchar
--- index scan for both statements ---
~~END~~

set babelfish_showplan_all on
go
exec    p_recomp_41 1
exec    p_recomp_61 1
go
~~START~~
text
Query Text: EXEC    p_recomp_41 1
  Query Text: select * from tb_recomp_41 where c41 = "@p"
  ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
        Index Cond: (c41 = 1)
  Query Text: select * from tb_recomp_41 where c41 = 1
  ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
        Index Cond: (c41 = 1)
Query Text: EXEC    p_recomp_61 1
  Query Text: select * from tb_recomp_61 where c61 = "@p"
  ->  Index Scan using tb_recomp_61_pkey on tb_recomp_61
        Index Cond: (c61 = 1)
  Query Text: select * from tb_recomp_61 where c61 = 1
  ->  Index Scan using tb_recomp_61_pkey on tb_recomp_61
        Index Cond: (c61 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- turning off index scan ----'
go
~~START~~
varchar
--- turning off index scan ----
~~END~~

select set_config('enable_indexscan', 'off', false)
go
~~START~~
text
off
~~END~~

select current_setting('enable_indexscan') as indexscan_off
go
~~START~~
text
off
~~END~~


select '--- EXEC without RECOMPILE: still creating recompiled plan on every execution: bitmap scan for parametrized stmt, index scan for non-parametrized ----'
go
~~START~~
varchar
--- EXEC without RECOMPILE: still creating recompiled plan on every execution: bitmap scan for parametrized stmt, index scan for non-parametrized ----
~~END~~


set babelfish_showplan_all on
go
exec    p_recomp_41 1 
exec    p_recomp_61 1 
go
~~START~~
text
Query Text: EXEC    p_recomp_41 1
  Query Text: select * from tb_recomp_41 where c41 = "@p"
  ->  Bitmap Heap Scan on tb_recomp_41
        Recheck Cond: (c41 = 1)
        ->  Bitmap Index Scan on tb_recomp_41_pkey
              Index Cond: (c41 = 1)
  Query Text: select * from tb_recomp_41 where c41 = 1
  ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
        Index Cond: (c41 = 1)
Query Text: EXEC    p_recomp_61 1
  Query Text: select * from tb_recomp_61 where c61 = "@p"
  ->  Bitmap Heap Scan on tb_recomp_61
        Recheck Cond: (c61 = 1)
        ->  Bitmap Index Scan on tb_recomp_61_pkey
              Index Cond: (c61 = 1)
  Query Text: select * from tb_recomp_61 where c61 = 1
  ->  Index Scan using tb_recomp_61_pkey on tb_recomp_61
        Index Cond: (c61 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- EXEC with RECOMPILE: same as EXEC without RECOMPILE ----'
go
~~START~~
varchar
--- EXEC with RECOMPILE: same as EXEC without RECOMPILE ----
~~END~~

set babelfish_showplan_all on
go
exec    p_recomp_41 1 with recompile
exec    p_recomp_61 1 with recompile
go
~~START~~
text
Query Text: EXEC    p_recomp_41 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_41 where c41 = "@p"
  ->  Bitmap Heap Scan on tb_recomp_41
        Recheck Cond: (c41 = 1)
        ->  Bitmap Index Scan on tb_recomp_41_pkey
              Index Cond: (c41 = 1)
  Query Text: select * from tb_recomp_41 where c41 = 1
  ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
        Index Cond: (c41 = 1)
Query Text: EXEC    p_recomp_61 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_61 where c61 = "@p"
  ->  Bitmap Heap Scan on tb_recomp_61
        Recheck Cond: (c61 = 1)
        ->  Bitmap Index Scan on tb_recomp_61_pkey
              Index Cond: (c61 = 1)
  Query Text: select * from tb_recomp_61 where c61 = 1
  ->  Index Scan using tb_recomp_61_pkey on tb_recomp_61
        Index Cond: (c61 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- turning on index scan ----'
go
~~START~~
varchar
--- turning on index scan ----
~~END~~

select set_config('enable_indexscan', 'on', false)
go
~~START~~
text
on
~~END~~

select current_setting('enable_indexscan') as indexscan_on
go
~~START~~
text
on
~~END~~


select '--- EXEC without RECOMPILE: still creating recompiled plan on every execution: index scan for both statements ----'
go
~~START~~
varchar
--- EXEC without RECOMPILE: still creating recompiled plan on every execution: index scan for both statements ----
~~END~~


set babelfish_showplan_all on
go
exec    p_recomp_41 1 
exec    p_recomp_61 1 
go
~~START~~
text
Query Text: EXEC    p_recomp_41 1
  Query Text: select * from tb_recomp_41 where c41 = "@p"
  ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
        Index Cond: (c41 = 1)
  Query Text: select * from tb_recomp_41 where c41 = 1
  ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
        Index Cond: (c41 = 1)
Query Text: EXEC    p_recomp_61 1
  Query Text: select * from tb_recomp_61 where c61 = "@p"
  ->  Index Scan using tb_recomp_61_pkey on tb_recomp_61
        Index Cond: (c61 = 1)
  Query Text: select * from tb_recomp_61 where c61 = 1
  ->  Index Scan using tb_recomp_61_pkey on tb_recomp_61
        Index Cond: (c61 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- EXEC with RECOMPILE: same as EXEC without RECOMPILE ----'
go
~~START~~
varchar
--- EXEC with RECOMPILE: same as EXEC without RECOMPILE ----
~~END~~

set babelfish_showplan_all on
go
exec    p_recomp_41 1 with recompile
exec    p_recomp_61 1 with recompile
go
~~START~~
text
Query Text: EXEC    p_recomp_41 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_41 where c41 = "@p"
  ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
        Index Cond: (c41 = 1)
  Query Text: select * from tb_recomp_41 where c41 = 1
  ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
        Index Cond: (c41 = 1)
Query Text: EXEC    p_recomp_61 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_61 where c61 = "@p"
  ->  Index Scan using tb_recomp_61_pkey on tb_recomp_61
        Index Cond: (c61 = 1)
  Query Text: select * from tb_recomp_61 where c61 = 1
  ->  Index Scan using tb_recomp_61_pkey on tb_recomp_61
        Index Cond: (c61 = 1)
~~END~~

set babelfish_showplan_all off
go

select '==== nested proc calls with plan_cache_mode=auto ======'  
go
~~START~~
varchar
==== nested proc calls with plan_cache_mode=auto ======
~~END~~

select set_config('plan_cache_mode', 'auto', false)
go
~~START~~
text
auto
~~END~~

select set_config('enable_indexscan', 'on', false)
go
~~START~~
text
on
~~END~~

SELECT current_setting('plan_cache_mode') as plan_mode_before
go
~~START~~
text
auto
~~END~~

SELECT current_setting('enable_indexscan') as enable_indexscan_before
go
~~START~~
text
on
~~END~~


-- tb_recomp_51: creating a generic plan
declare @i int = 6
while @i > 0
begin
exec    p_recomp_51 1
set @i -= 1
end
go
~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~

~~START~~
int#!#int
~~END~~


select '--- index scan for all stmts ----'
go
~~START~~
varchar
--- index scan for all stmts ----
~~END~~

set babelfish_showplan_all on
go
exec    p_recomp_51 1
go
~~START~~
text
Query Text: EXEC    p_recomp_51 1
  Query Text: select * from tb_recomp_51 where c51 = "@p"
  ->  Index Scan using tb_recomp_51_pkey on tb_recomp_51
        Index Cond: (c51 = $1)
  Query Text: select * from tb_recomp_51 where c51 = 1
  ->  Index Scan using tb_recomp_51_pkey on tb_recomp_51
        Index Cond: (c51 = 1)
  Query Text: EXEC p_recomp_12 1
    Query Text: select * from tb_recomp_12 where c12 = "@p"
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = $1)
    Query Text: select * from tb_recomp_12 where c12 = 1
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = 1)
  Query Text: EXEC p_recomp_12 1 /*EXECUTE WITH RECOMPILE*/
    Query Text: select * from tb_recomp_12 where c12 = "@p"
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = 1)
    Query Text: select * from tb_recomp_12 where c12 = 1
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = 1)
  Query Text: EXEC p_recomp_12 1 /*EXECUTE WITH RECOMPILE*/
    Query Text: select * from tb_recomp_12 where c12 = "@p"
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = 1)
    Query Text: select * from tb_recomp_12 where c12 = 1
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = 1)
  Query Text: EXEC p_recomp_41 1
    Query Text: select * from tb_recomp_41 where c41 = "@p"
    ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
          Index Cond: (c41 = 1)
    Query Text: select * from tb_recomp_41 where c41 = 1
    ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
          Index Cond: (c41 = 1)
  Query Text: EXEC p_recomp_41 1 /*EXECUTE WITH RECOMPILE*/
    Query Text: select * from tb_recomp_41 where c41 = "@p"
    ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
          Index Cond: (c41 = 1)
    Query Text: select * from tb_recomp_41 where c41 = 1
    ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
          Index Cond: (c41 = 1)
  Query Text: EXEC p_recomp_41 1 /*EXECUTE WITH RECOMPILE*/
    Query Text: select * from tb_recomp_41 where c41 = "@p"
    ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
          Index Cond: (c41 = 1)
    Query Text: select * from tb_recomp_41 where c41 = 1
    ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
          Index Cond: (c41 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- turning off index scan ----'
go
~~START~~
varchar
--- turning off index scan ----
~~END~~

select set_config('enable_indexscan', 'off', false)
go
~~START~~
text
off
~~END~~

select current_setting('enable_indexscan') as indexscan_off
go
~~START~~
text
off
~~END~~


select '--- index scan for all stmts, bitmap scan for paramterized stmts in recompiled calls ----'
go
~~START~~
varchar
--- index scan for all stmts, bitmap scan for paramterized stmts in recompiled calls ----
~~END~~

set babelfish_showplan_all on
go
exec    p_recomp_51 1
go
~~START~~
text
Query Text: EXEC    p_recomp_51 1
  Query Text: select * from tb_recomp_51 where c51 = "@p"
  ->  Index Scan using tb_recomp_51_pkey on tb_recomp_51
        Index Cond: (c51 = $1)
  Query Text: select * from tb_recomp_51 where c51 = 1
  ->  Index Scan using tb_recomp_51_pkey on tb_recomp_51
        Index Cond: (c51 = 1)
  Query Text: EXEC p_recomp_12 1
    Query Text: select * from tb_recomp_12 where c12 = "@p"
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = $1)
    Query Text: select * from tb_recomp_12 where c12 = 1
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = 1)
  Query Text: EXEC p_recomp_12 1 /*EXECUTE WITH RECOMPILE*/
    Query Text: select * from tb_recomp_12 where c12 = "@p"
    ->  Bitmap Heap Scan on tb_recomp_12
          Recheck Cond: (c12 = 1)
          ->  Bitmap Index Scan on tb_recomp_12_pkey
                Index Cond: (c12 = 1)
    Query Text: select * from tb_recomp_12 where c12 = 1
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = 1)
  Query Text: EXEC p_recomp_12 1 /*EXECUTE WITH RECOMPILE*/
    Query Text: select * from tb_recomp_12 where c12 = "@p"
    ->  Bitmap Heap Scan on tb_recomp_12
          Recheck Cond: (c12 = 1)
          ->  Bitmap Index Scan on tb_recomp_12_pkey
                Index Cond: (c12 = 1)
    Query Text: select * from tb_recomp_12 where c12 = 1
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = 1)
  Query Text: EXEC p_recomp_41 1
    Query Text: select * from tb_recomp_41 where c41 = "@p"
    ->  Bitmap Heap Scan on tb_recomp_41
          Recheck Cond: (c41 = 1)
          ->  Bitmap Index Scan on tb_recomp_41_pkey
                Index Cond: (c41 = 1)
    Query Text: select * from tb_recomp_41 where c41 = 1
    ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
          Index Cond: (c41 = 1)
  Query Text: EXEC p_recomp_41 1 /*EXECUTE WITH RECOMPILE*/
    Query Text: select * from tb_recomp_41 where c41 = "@p"
    ->  Bitmap Heap Scan on tb_recomp_41
          Recheck Cond: (c41 = 1)
          ->  Bitmap Index Scan on tb_recomp_41_pkey
                Index Cond: (c41 = 1)
    Query Text: select * from tb_recomp_41 where c41 = 1
    ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
          Index Cond: (c41 = 1)
  Query Text: EXEC p_recomp_41 1 /*EXECUTE WITH RECOMPILE*/
    Query Text: select * from tb_recomp_41 where c41 = "@p"
    ->  Bitmap Heap Scan on tb_recomp_41
          Recheck Cond: (c41 = 1)
          ->  Bitmap Index Scan on tb_recomp_41_pkey
                Index Cond: (c41 = 1)
    Query Text: select * from tb_recomp_41 where c41 = 1
    ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
          Index Cond: (c41 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- bitmap scan for paramterized stmts in recompiled calls, index scan on all others ----'
go
~~START~~
varchar
--- bitmap scan for paramterized stmts in recompiled calls, index scan on all others ----
~~END~~

set babelfish_showplan_all on
go
exec    p_recomp_51 1 with recompile
go
~~START~~
text
Query Text: EXEC    p_recomp_51 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_51 where c51 = "@p"
  ->  Bitmap Heap Scan on tb_recomp_51
        Recheck Cond: (c51 = 1)
        ->  Bitmap Index Scan on tb_recomp_51_pkey
              Index Cond: (c51 = 1)
  Query Text: select * from tb_recomp_51 where c51 = 1
  ->  Index Scan using tb_recomp_51_pkey on tb_recomp_51
        Index Cond: (c51 = 1)
  Query Text: EXEC p_recomp_12 1
    Query Text: select * from tb_recomp_12 where c12 = "@p"
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = $1)
    Query Text: select * from tb_recomp_12 where c12 = 1
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = 1)
  Query Text: EXEC p_recomp_12 1 /*EXECUTE WITH RECOMPILE*/
    Query Text: select * from tb_recomp_12 where c12 = "@p"
    ->  Bitmap Heap Scan on tb_recomp_12
          Recheck Cond: (c12 = 1)
          ->  Bitmap Index Scan on tb_recomp_12_pkey
                Index Cond: (c12 = 1)
    Query Text: select * from tb_recomp_12 where c12 = 1
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = 1)
  Query Text: EXEC p_recomp_12 1 /*EXECUTE WITH RECOMPILE*/
    Query Text: select * from tb_recomp_12 where c12 = "@p"
    ->  Bitmap Heap Scan on tb_recomp_12
          Recheck Cond: (c12 = 1)
          ->  Bitmap Index Scan on tb_recomp_12_pkey
                Index Cond: (c12 = 1)
    Query Text: select * from tb_recomp_12 where c12 = 1
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = 1)
  Query Text: EXEC p_recomp_41 1
    Query Text: select * from tb_recomp_41 where c41 = "@p"
    ->  Bitmap Heap Scan on tb_recomp_41
          Recheck Cond: (c41 = 1)
          ->  Bitmap Index Scan on tb_recomp_41_pkey
                Index Cond: (c41 = 1)
    Query Text: select * from tb_recomp_41 where c41 = 1
    ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
          Index Cond: (c41 = 1)
  Query Text: EXEC p_recomp_41 1 /*EXECUTE WITH RECOMPILE*/
    Query Text: select * from tb_recomp_41 where c41 = "@p"
    ->  Bitmap Heap Scan on tb_recomp_41
          Recheck Cond: (c41 = 1)
          ->  Bitmap Index Scan on tb_recomp_41_pkey
                Index Cond: (c41 = 1)
    Query Text: select * from tb_recomp_41 where c41 = 1
    ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
          Index Cond: (c41 = 1)
  Query Text: EXEC p_recomp_41 1 /*EXECUTE WITH RECOMPILE*/
    Query Text: select * from tb_recomp_41 where c41 = "@p"
    ->  Bitmap Heap Scan on tb_recomp_41
          Recheck Cond: (c41 = 1)
          ->  Bitmap Index Scan on tb_recomp_41_pkey
                Index Cond: (c41 = 1)
    Query Text: select * from tb_recomp_41 where c41 = 1
    ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
          Index Cond: (c41 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- turning on index scan ----'
go
~~START~~
varchar
--- turning on index scan ----
~~END~~

select set_config('enable_indexscan', 'on', false)
go
~~START~~
text
on
~~END~~

select current_setting('enable_indexscan') as indexscan_on
go
~~START~~
text
on
~~END~~


select '--- index scan for all stmts ----'
go
~~START~~
varchar
--- index scan for all stmts ----
~~END~~


set babelfish_showplan_all on
go
exec    p_recomp_51 1 
go
~~START~~
text
Query Text: EXEC    p_recomp_51 1
  Query Text: select * from tb_recomp_51 where c51 = "@p"
  ->  Index Scan using tb_recomp_51_pkey on tb_recomp_51
        Index Cond: (c51 = $1)
  Query Text: select * from tb_recomp_51 where c51 = 1
  ->  Index Scan using tb_recomp_51_pkey on tb_recomp_51
        Index Cond: (c51 = 1)
  Query Text: EXEC p_recomp_12 1
    Query Text: select * from tb_recomp_12 where c12 = "@p"
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = $1)
    Query Text: select * from tb_recomp_12 where c12 = 1
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = 1)
  Query Text: EXEC p_recomp_12 1 /*EXECUTE WITH RECOMPILE*/
    Query Text: select * from tb_recomp_12 where c12 = "@p"
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = 1)
    Query Text: select * from tb_recomp_12 where c12 = 1
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = 1)
  Query Text: EXEC p_recomp_12 1 /*EXECUTE WITH RECOMPILE*/
    Query Text: select * from tb_recomp_12 where c12 = "@p"
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = 1)
    Query Text: select * from tb_recomp_12 where c12 = 1
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = 1)
  Query Text: EXEC p_recomp_41 1
    Query Text: select * from tb_recomp_41 where c41 = "@p"
    ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
          Index Cond: (c41 = 1)
    Query Text: select * from tb_recomp_41 where c41 = 1
    ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
          Index Cond: (c41 = 1)
  Query Text: EXEC p_recomp_41 1 /*EXECUTE WITH RECOMPILE*/
    Query Text: select * from tb_recomp_41 where c41 = "@p"
    ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
          Index Cond: (c41 = 1)
    Query Text: select * from tb_recomp_41 where c41 = 1
    ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
          Index Cond: (c41 = 1)
  Query Text: EXEC p_recomp_41 1 /*EXECUTE WITH RECOMPILE*/
    Query Text: select * from tb_recomp_41 where c41 = "@p"
    ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
          Index Cond: (c41 = 1)
    Query Text: select * from tb_recomp_41 where c41 = 1
    ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
          Index Cond: (c41 = 1)
~~END~~

set babelfish_showplan_all off
go

select '--- index scan for all stmts ----'
go
~~START~~
varchar
--- index scan for all stmts ----
~~END~~


set babelfish_showplan_all on
go
exec    p_recomp_51 1 with recompile
go
~~START~~
text
Query Text: EXEC    p_recomp_51 1 /*EXECUTE WITH RECOMPILE*/
  Query Text: select * from tb_recomp_51 where c51 = "@p"
  ->  Index Scan using tb_recomp_51_pkey on tb_recomp_51
        Index Cond: (c51 = 1)
  Query Text: select * from tb_recomp_51 where c51 = 1
  ->  Index Scan using tb_recomp_51_pkey on tb_recomp_51
        Index Cond: (c51 = 1)
  Query Text: EXEC p_recomp_12 1
    Query Text: select * from tb_recomp_12 where c12 = "@p"
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = $1)
    Query Text: select * from tb_recomp_12 where c12 = 1
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = 1)
  Query Text: EXEC p_recomp_12 1 /*EXECUTE WITH RECOMPILE*/
    Query Text: select * from tb_recomp_12 where c12 = "@p"
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = 1)
    Query Text: select * from tb_recomp_12 where c12 = 1
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = 1)
  Query Text: EXEC p_recomp_12 1 /*EXECUTE WITH RECOMPILE*/
    Query Text: select * from tb_recomp_12 where c12 = "@p"
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = 1)
    Query Text: select * from tb_recomp_12 where c12 = 1
    ->  Index Scan using tb_recomp_12_pkey on tb_recomp_12
          Index Cond: (c12 = 1)
  Query Text: EXEC p_recomp_41 1
    Query Text: select * from tb_recomp_41 where c41 = "@p"
    ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
          Index Cond: (c41 = 1)
    Query Text: select * from tb_recomp_41 where c41 = 1
    ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
          Index Cond: (c41 = 1)
  Query Text: EXEC p_recomp_41 1 /*EXECUTE WITH RECOMPILE*/
    Query Text: select * from tb_recomp_41 where c41 = "@p"
    ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
          Index Cond: (c41 = 1)
    Query Text: select * from tb_recomp_41 where c41 = 1
    ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
          Index Cond: (c41 = 1)
  Query Text: EXEC p_recomp_41 1 /*EXECUTE WITH RECOMPILE*/
    Query Text: select * from tb_recomp_41 where c41 = "@p"
    ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
          Index Cond: (c41 = 1)
    Query Text: select * from tb_recomp_41 where c41 = 1
    ->  Index Scan using tb_recomp_41_pkey on tb_recomp_41
          Index Cond: (c41 = 1)
~~END~~

set babelfish_showplan_all off
go

select '==== end of tests ======'  
go
~~START~~
varchar
==== end of tests ======
~~END~~

select set_config('plan_cache_mode', 'auto', false)
go
~~START~~
text
auto
~~END~~

SELECT current_setting('plan_cache_mode') as plan_mode_after
go
~~START~~
text
auto
~~END~~

SELECT current_setting('enable_indexscan') as enable_indexscan_after
go
~~START~~
text
on
~~END~~

