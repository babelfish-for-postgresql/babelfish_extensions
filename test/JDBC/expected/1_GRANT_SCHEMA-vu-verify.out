-- tsql
-- check for inconsistent metadata after upgrade
select COUNT(*) FROM sys.babelfish_inconsistent_metadata();
go
~~START~~
int
0
~~END~~


-- psql
select schema_name, object_name, permission, grantee, object_type, function_args, grantor from sys.babelfish_schema_permissions where schema_name = 'babel_4768_s1' collate sys.database_default and grantee like '%babel_4768_u1' collate sys.database_default order by object_name;
go
~~START~~
"sys"."varchar"#!#"sys"."varchar"#!#int4#!#"sys"."varchar"#!#bpchar#!#text#!#"sys"."varchar"
babel_4768_s1#!#ALL#!#130#!#master_babel_4768_u1#!#s#!#<NULL>#!#<NULL>
babel_4768_s1#!#babel_4768_f1#!#128#!#master_babel_4768_u1#!#f#!##!#<NULL>
babel_4768_s1#!#babel_4768_f2#!#128#!#master_babel_4768_u1#!#f#!#pg_catalog.int4#!#<NULL>
babel_4768_s1#!#babel_4768_p1#!#128#!#master_babel_4768_u1#!#p#!##!#<NULL>
babel_4768_s1#!#babel_4768_p2#!#128#!#master_babel_4768_u1#!#p#!#sys.datetimeoffset#!#<NULL>
babel_4768_s1#!#babel_4768_t1#!#2#!#master_babel_4768_u1#!#r#!#<NULL>#!#<NULL>
babel_4768_s1#!#babel_4768_v1#!#2#!#master_babel_4768_u1#!#r#!#<NULL>#!#<NULL>
~~END~~


select schema_name, object_name, permission, grantee, object_type, function_args, grantor from sys.babelfish_schema_permissions where schema_name = 'dbo' collate sys.database_default and grantee like '%babel_4768_u1' collate sys.database_default order by object_name;
go
~~START~~
"sys"."varchar"#!#"sys"."varchar"#!#int4#!#"sys"."varchar"#!#bpchar#!#text#!#"sys"."varchar"
dbo#!#ALL#!#130#!#master_babel_4768_u1#!#s#!#<NULL>#!#<NULL>
dbo#!#babel_4768_f1#!#128#!#master_babel_4768_u1#!#f#!##!#<NULL>
dbo#!#babel_4768_f2#!#128#!#master_babel_4768_u1#!#f#!#pg_catalog.int4#!#<NULL>
dbo#!#babel_4768_p1#!#128#!#master_babel_4768_u1#!#p#!##!#<NULL>
dbo#!#babel_4768_p2#!#128#!#master_babel_4768_u1#!#p#!#sys.datetimeoffset#!#<NULL>
dbo#!#babel_4768_t1#!#2#!#master_babel_4768_u1#!#r#!#<NULL>#!#<NULL>
dbo#!#babel_4768_v1#!#2#!#master_babel_4768_u1#!#r#!#<NULL>#!#<NULL>
~~END~~


-- tsql
-- rename the objects where permissions are already granted
sp_rename 'babel_4768_s1.babel_4768_t1', 'babel_4768_t1_new', 'OBJECT';
go
sp_rename 'babel_4768_s1.babel_4768_v1', 'babel_4768_v1_new', 'OBJECT';
go
sp_rename 'babel_4768_s1.babel_4768_p1', 'babel_4768_p1_new', 'OBJECT';
go
sp_rename 'babel_4768_s1.babel_4768_p2', 'babel_4768_p2_new', 'OBJECT';
go
sp_rename 'babel_4768_s1.babel_4768_f1', 'babel_4768_f1_new', 'OBJECT';
go
sp_rename 'babel_4768_s1.babel_4768_f2', 'babel_4768_f2_new', 'OBJECT';
go

sp_rename 'babel_4768_t1', 'babel_4768_t1_new', 'OBJECT';
go
sp_rename 'babel_4768_v1', 'babel_4768_v1_new', 'OBJECT';
go
sp_rename 'babel_4768_p1', 'babel_4768_p1_new', 'OBJECT';
go
sp_rename 'babel_4768_p2', 'babel_4768_p2_new', 'OBJECT';
go
sp_rename 'babel_4768_f1', 'babel_4768_f1_new', 'OBJECT';
go
sp_rename 'babel_4768_f2', 'babel_4768_f2_new', 'OBJECT';
go

-- psql
-- catalog should show new object names
select schema_name, object_name, permission, grantee, object_type, function_args from sys.babelfish_schema_permissions where schema_name = 'babel_4768_s1' collate sys.database_default and grantee like '%babel_4768_u1' collate sys.database_default order by object_name;
go
~~START~~
"sys"."varchar"#!#"sys"."varchar"#!#int4#!#"sys"."varchar"#!#bpchar#!#text
babel_4768_s1#!#ALL#!#130#!#master_babel_4768_u1#!#s#!#<NULL>
babel_4768_s1#!#babel_4768_f1_new#!#128#!#master_babel_4768_u1#!#f#!#
babel_4768_s1#!#babel_4768_f2_new#!#128#!#master_babel_4768_u1#!#f#!#pg_catalog.int4
babel_4768_s1#!#babel_4768_p1_new#!#128#!#master_babel_4768_u1#!#p#!#
babel_4768_s1#!#babel_4768_p2_new#!#128#!#master_babel_4768_u1#!#p#!#sys.datetimeoffset
babel_4768_s1#!#babel_4768_t1_new#!#2#!#master_babel_4768_u1#!#r#!#<NULL>
babel_4768_s1#!#babel_4768_v1_new#!#2#!#master_babel_4768_u1#!#r#!#<NULL>
~~END~~


select schema_name, object_name, permission, grantee, object_type, function_args from sys.babelfish_schema_permissions where schema_name = 'dbo' collate sys.database_default and grantee like '%babel_4768_u1' collate sys.database_default order by object_name;
go
~~START~~
"sys"."varchar"#!#"sys"."varchar"#!#int4#!#"sys"."varchar"#!#bpchar#!#text
dbo#!#ALL#!#130#!#master_babel_4768_u1#!#s#!#<NULL>
dbo#!#babel_4768_f1_new#!#128#!#master_babel_4768_u1#!#f#!#
dbo#!#babel_4768_f2_new#!#128#!#master_babel_4768_u1#!#f#!#pg_catalog.int4
dbo#!#babel_4768_p1_new#!#128#!#master_babel_4768_u1#!#p#!#
dbo#!#babel_4768_p2_new#!#128#!#master_babel_4768_u1#!#p#!#sys.datetimeoffset
dbo#!#babel_4768_t1_new#!#2#!#master_babel_4768_u1#!#r#!#<NULL>
dbo#!#babel_4768_v1_new#!#2#!#master_babel_4768_u1#!#r#!#<NULL>
~~END~~


-- psql
-- This is needed so that MVU passes
DO $$
BEGIN 
    IF EXISTS (SELECT 1 FROM
information_schema.tables WHERE
table_name = 'tbl_creation_should_succeed' AND
table_schema = 'master_dbo') THEN
        EXECUTE 'GRANT ALL ON
master_dbo.tbl_creation_should_succeed TO master_dbo';
    END IF;
END $$;
GO

-- tsql
REVOKE SELECT, EXECUTE ON SCHEMA::dbo FROM babel_4768_u1
GO

REVOKE SELECT, EXECUTE ON SCHEMA::babel_4768_s1 FROM babel_4768_u1
GO

-- psql
-- catalog entry ALL should be gone now
select schema_name, object_name, permission, grantee, object_type, function_args from sys.babelfish_schema_permissions where schema_name = 'babel_4768_s1' collate sys.database_default and grantee like '%babel_4768_u1' collate sys.database_default order by object_name;
go
~~START~~
"sys"."varchar"#!#"sys"."varchar"#!#int4#!#"sys"."varchar"#!#bpchar#!#text
babel_4768_s1#!#babel_4768_f1_new#!#128#!#master_babel_4768_u1#!#f#!#
babel_4768_s1#!#babel_4768_f2_new#!#128#!#master_babel_4768_u1#!#f#!#pg_catalog.int4
babel_4768_s1#!#babel_4768_p1_new#!#128#!#master_babel_4768_u1#!#p#!#
babel_4768_s1#!#babel_4768_p2_new#!#128#!#master_babel_4768_u1#!#p#!#sys.datetimeoffset
babel_4768_s1#!#babel_4768_t1_new#!#2#!#master_babel_4768_u1#!#r#!#<NULL>
babel_4768_s1#!#babel_4768_v1_new#!#2#!#master_babel_4768_u1#!#r#!#<NULL>
~~END~~


select schema_name, object_name, permission, grantee, object_type, function_args from sys.babelfish_schema_permissions where schema_name = 'dbo' collate sys.database_default and grantee like '%babel_4768_u1' collate sys.database_default order by object_name;
go
~~START~~
"sys"."varchar"#!#"sys"."varchar"#!#int4#!#"sys"."varchar"#!#bpchar#!#text
dbo#!#babel_4768_f1_new#!#128#!#master_babel_4768_u1#!#f#!#
dbo#!#babel_4768_f2_new#!#128#!#master_babel_4768_u1#!#f#!#pg_catalog.int4
dbo#!#babel_4768_p1_new#!#128#!#master_babel_4768_u1#!#p#!#
dbo#!#babel_4768_p2_new#!#128#!#master_babel_4768_u1#!#p#!#sys.datetimeoffset
dbo#!#babel_4768_t1_new#!#2#!#master_babel_4768_u1#!#r#!#<NULL>
dbo#!#babel_4768_v1_new#!#2#!#master_babel_4768_u1#!#r#!#<NULL>
~~END~~


-- tsql
-- REVOKE individual object access from babel_4768_u1
REVOKE SELECT ON dbo.babel_4768_t1_new FROM babel_4768_u1
go

REVOKE SELECT ON babel_4768_s1.babel_4768_t1_new FROM babel_4768_u1
go

REVOKE SELECT ON dbo.babel_4768_v1_new FROM babel_4768_u1
go

REVOKE SELECT ON babel_4768_s1.babel_4768_v1_new FROM babel_4768_u1
go

REVOKE EXECUTE ON babel_4768_p1_new FROM babel_4768_u1
GO

REVOKE EXECUTE ON babel_4768_s1.babel_4768_p1_new FROM babel_4768_u1
GO

REVOKE EXECUTE ON babel_4768_p2_new FROM babel_4768_u1
GO

REVOKE EXECUTE ON babel_4768_s1.babel_4768_p2_new FROM babel_4768_u1
GO

REVOKE EXECUTE ON babel_4768_f1_new FROM babel_4768_u1
GO

REVOKE EXECUTE ON babel_4768_s1.babel_4768_f1_new FROM babel_4768_u1
GO

REVOKE EXECUTE ON babel_4768_f2_new FROM babel_4768_u1
GO

REVOKE EXECUTE ON babel_4768_s1.babel_4768_f2_new FROM babel_4768_u1
GO

REVOKE SELECT ON babel_4768_schema_longer_than_64_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.t1 FROM babel_4768_u1
go


REVOKE SELECT ON babel_4768_s2.t1 FROM babel_4768_u1
go

REVOKE SELECT ON babel_4768_s2.v1 FROM babel_4768_u1
go

REVOKE EXECUTE ON babel_4768_s2.p1 FROM babel_4768_u1
go

REVOKE SELECT ON babel_4768„É≠„Ç∞„Ç§„É≥Œ±ŒπœéŒΩŒπŒ±.t1 FROM babel_4768_u1
go

REVOKE SELECT ON "babel_4768 üòé$chem@ #123 üåçrder".t1 FROM babel_4768_u1
go

REVOKE SELECT ON [babel_4768Ïú†ÎãàÏΩîÎìúÏä§ÌÇ§Îßàüëª].t1 FROM babel_4768_u1
go

-- psql
-- catalog should be empty now
select schema_name, object_name, permission, grantee, object_type, function_args from sys.babelfish_schema_permissions where schema_name = 'babel_4768_s1' collate sys.database_default and grantee like '%babel_4768_u1' collate sys.database_default order by object_name;
go
~~START~~
"sys"."varchar"#!#"sys"."varchar"#!#int4#!#"sys"."varchar"#!#bpchar#!#text
~~END~~


select schema_name, object_name, permission, grantee, object_type, function_args from sys.babelfish_schema_permissions where schema_name = 'dbo' collate sys.database_default and grantee like '%babel_4768_u1' collate sys.database_default order by object_name;
go
~~START~~
"sys"."varchar"#!#"sys"."varchar"#!#int4#!#"sys"."varchar"#!#bpchar#!#text
~~END~~


-- tsql user=babel_5172_l1 password=123
-- create objects with babel_5172_u1 user
use babel_5172_db
go

-- grant select privilege on the schema with user babel_5172_u1
grant select, execute on schema::babel_5172_s1 to babel_5172_u2;
go

use master;
go

-- tsql user=babel_5172_l2 password=123
-- objects created by dbo should be accessible
use babel_5172_db;
go

select * from babel_5172_s1.t1;
go
~~START~~
int
~~END~~


select * from babel_5172_s1.v1;
go
~~START~~
int
1
~~END~~


exec babel_5172_s1.p1;
go
~~START~~
int
1
~~END~~


select babel_5172_s1.f1();
go
~~START~~
int
1
~~END~~


-- objects created by babel_5172_u1 should be accessible
select * from babel_5172_s1.t2;
go
~~START~~
int
~~END~~


select * from babel_5172_s1.v2;
go
~~START~~
int
1
~~END~~


exec babel_5172_s1.p2;
go
~~START~~
int
1
~~END~~


select babel_5172_s1.f2();
go
~~START~~
int
1
~~END~~


use master
go

-- tsql
-- create new objects using dbo
use babel_5172_db
go

create table babel_5172_s1.t3(a int);
go

create view babel_5172_s1.v3 as select 1;
go

create proc babel_5172_s1.p3 as select 1;
go

create function babel_5172_s1.f3() returns int begin declare @a int; set @a = 1; return @a; end 
go

use master
go

-- tsql user=babel_5172_l1 password=123
-- create new objects using babel_5172_u1 user
use babel_5172_db
go

create table babel_5172_s1.t4(a int);
go

create view babel_5172_s1.v4 as select 1;
go

create proc babel_5172_s1.p4 as select 1;
go

create function babel_5172_s1.f4() returns int begin declare @a int; set @a = 1; return @a; end 
go

use master;
go

-- tsql user=babel_5172_l2 password=123
-- new objects created by dbo should be accessible
use babel_5172_db;
go

select * from babel_5172_s1.t3;
go
~~START~~
int
~~END~~


select * from babel_5172_s1.v3;
go
~~START~~
int
1
~~END~~


exec babel_5172_s1.p3;
go
~~START~~
int
1
~~END~~


select babel_5172_s1.f3();
go
~~START~~
int
1
~~END~~


-- objects created by babel_5172_u1 should be accessible
select * from babel_5172_s1.t4;
go
~~START~~
int
~~END~~


select * from babel_5172_s1.v4;
go
~~START~~
int
1
~~END~~


exec babel_5172_s1.p4;
go
~~START~~
int
1
~~END~~


select babel_5172_s1.f4();
go
~~START~~
int
1
~~END~~


use master
go

-- tsql user=babel_5172_l1 password=123
-- revoke privilege from the schema
use babel_5172_db;
go

-- revoke select privilege on the schema with user babel_5172_u1
revoke select, execute on schema::babel_5172_s1 from babel_5172_u2;
go

use master;
go

-- tsql user=babel_5172_l2 password=123
-- no objects should be accessible, since schema privilege is revoked
use babel_5172_db;
go

select * from babel_5172_s1.t1;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: permission denied for table t1)~~


select * from babel_5172_s1.v1;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: permission denied for view v1)~~


exec babel_5172_s1.p1;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: permission denied for procedure p1)~~


select babel_5172_s1.f1();
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: permission denied for function f1)~~


select * from babel_5172_s1.t2;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: permission denied for table t2)~~


select * from babel_5172_s1.v2;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: permission denied for view v2)~~


exec babel_5172_s1.p2;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: permission denied for procedure p2)~~


select babel_5172_s1.f2();
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: permission denied for function f2)~~


select * from babel_5172_s1.t3;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: permission denied for table t3)~~


select * from babel_5172_s1.v3;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: permission denied for view v3)~~


exec babel_5172_s1.p3;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: permission denied for procedure p3)~~


select babel_5172_s1.f3();
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: permission denied for function f3)~~


select * from babel_5172_s1.t4;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: permission denied for table t4)~~


select * from babel_5172_s1.v4;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: permission denied for view v4)~~


exec babel_5172_s1.p4;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: permission denied for procedure p4)~~


select babel_5172_s1.f4();
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: permission denied for function f4)~~


use master
go
