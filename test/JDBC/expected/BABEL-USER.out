CREATE LOGIN test1 WITH PASSWORD = 'abc';
GO

CREATE LOGIN test2 WITH PASSWORD = 'abc';
GO

CREATE LOGIN test3 WITH PASSWORD = 'abc';
GO

CREATE LOGIN test4 WITH PASSWORD = 'abc';
GO

SELECT DB_NAME();
GO
~~START~~
nvarchar
master
~~END~~


-- Check for default users
CREATE DATABASE db1;
GO

SELECT rolname, login_name, orig_username, database_name, default_schema_name
FROM sys.babelfish_authid_user_ext
ORDER BY rolname;
GO
~~START~~
varchar#!#varchar#!#nvarchar#!#nvarchar#!#nvarchar
db_owner#!##!#db_owner#!#db1#!#
dbo#!##!#dbo#!#db1#!#dbo
master_db_owner#!##!#db_owner#!#master#!#
master_dbo#!##!#dbo#!#master#!#dbo
master_guest#!##!#guest#!#master#!#
msdb_db_owner#!##!#db_owner#!#msdb#!#
msdb_dbo#!##!#dbo#!#msdb#!#dbo
msdb_guest#!##!#guest#!#msdb#!#
tempdb_db_owner#!##!#db_owner#!#tempdb#!#
tempdb_dbo#!##!#dbo#!#tempdb#!#dbo
tempdb_guest#!##!#guest#!#tempdb#!#
~~END~~


SELECT name, default_schema_name
FROM sys.database_principals
ORDER BY default_schema_name DESC, name;
GO
~~START~~
varchar#!#varchar
dbo#!#dbo
db_owner#!#
guest#!#
~~END~~


SELECT rolname, rolcreaterole FROM pg_roles
WHERE rolname LIKE '%dbo'
ORDER BY rolname;
GO
~~START~~
varchar#!#bit
dbo#!#1
master_dbo#!#1
msdb_dbo#!#1
tempdb_dbo#!#1
~~END~~


-- Test default create user
CREATE USER test1;
GO

SELECT rolname, login_name, orig_username, database_name, default_schema_name
FROM sys.babelfish_authid_user_ext
WHERE orig_username = 'test1';
GO
~~START~~
varchar#!#varchar#!#nvarchar#!#nvarchar#!#nvarchar
master_test1#!#test1#!#test1#!#master#!#dbo
~~END~~


SELECT name, default_schema_name
FROM sys.database_principals
WHERE name = 'test1';
GO
~~START~~
varchar#!#varchar
test1#!#dbo
~~END~~


SELECT user_name(user_id('test1'));
GO
~~START~~
nvarchar
test1
~~END~~


-- Test create user with login uniqueness in the database
CREATE USER test2 FOR LOGIN test2;
GO

CREATE USER test3 FOR LOGIN test2;
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Existing user already maps to login 'test2' in current database.)~~


SELECT rolname, login_name, orig_username, database_name, default_schema_name
FROM sys.babelfish_authid_user_ext
WHERE orig_username = 'test2';
GO
~~START~~
varchar#!#varchar#!#nvarchar#!#nvarchar#!#nvarchar
master_test2#!#test2#!#test2#!#master#!#dbo
~~END~~


SELECT name, default_schema_name
FROM sys.database_principals
WHERE name = 'test2';
GO
~~START~~
varchar#!#varchar
test2#!#dbo
~~END~~


-- Test create user with schema option
CREATE USER test3 WITH DEFAULT_SCHEMA = sch3;
GO

CREATE SCHEMA sch3;
GO

SELECT rolname, login_name, orig_username, database_name, default_schema_name
FROM sys.babelfish_authid_user_ext
WHERE orig_username = 'test3';
GO
~~START~~
varchar#!#varchar#!#nvarchar#!#nvarchar#!#nvarchar
master_test3#!#test3#!#test3#!#master#!#sch3
~~END~~


SELECT name, default_schema_name
FROM sys.database_principals
WHERE name = 'test3';
GO
~~START~~
varchar#!#varchar
test3#!#sch3
~~END~~


-- Test create user with invalid login
CREATE USER test4 FOR LOGIN fake_login WITH DEFAULT_SCHEMA = dbo;
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: role "fake_login" does not exist)~~


-- Test with long name
-- 65 character length name
CREATE USER AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
FOR LOGIN test4;
GO

SELECT rolname, login_name, orig_username, database_name, default_schema_name
FROM sys.babelfish_authid_user_ext
WHERE orig_username = 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';
GO
~~START~~
varchar#!#varchar#!#nvarchar#!#nvarchar#!#nvarchar
master_aaaaaaaaaaaaaaaaaaaaaaaac0168b98fb7152e447c9b9e9ad6f31dd#!#test4#!#AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA#!#master#!#dbo
~~END~~


SELECT name, default_schema_name
FROM sys.database_principals
WHERE name = 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';
GO
~~START~~
varchar#!#varchar
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA#!#dbo
~~END~~


-- Test alter user
ALTER USER test1 WITH DEFAULT_SCHEMA = sch3;
GO

SELECT rolname, login_name, orig_username, database_name, default_schema_name
FROM sys.babelfish_authid_user_ext
WHERE orig_username = 'test1';
GO
~~START~~
varchar#!#varchar#!#nvarchar#!#nvarchar#!#nvarchar
master_test1#!#test1#!#test1#!#master#!#sch3
~~END~~


SELECT name, default_schema_name
FROM sys.database_principals
WHERE name = 'test1';
GO
~~START~~
varchar#!#varchar
test1#!#sch3
~~END~~


ALTER USER test1 WITH DEFAULT_SCHEMA = NULL;
GO

SELECT rolname, login_name, orig_username, database_name, default_schema_name
FROM sys.babelfish_authid_user_ext
WHERE orig_username = 'test1';
GO
~~START~~
varchar#!#varchar#!#nvarchar#!#nvarchar#!#nvarchar
master_test1#!#test1#!#test1#!#master#!#dbo
~~END~~


SELECT name, default_schema_name
FROM sys.database_principals
WHERE name = 'test1';
GO
~~START~~
varchar#!#varchar
test1#!#dbo
~~END~~


ALTER USER test1 WITH NAME = new_test1;
GO

SELECT rolname, login_name, orig_username, database_name, default_schema_name
FROM sys.babelfish_authid_user_ext
WHERE orig_username = 'new_test1';
GO
~~START~~
varchar#!#varchar#!#nvarchar#!#nvarchar#!#nvarchar
master_new_test1#!#test1#!#new_test1#!#master#!#dbo
~~END~~


SELECT name, default_schema_name
FROM sys.database_principals
WHERE name = 'new_test1';
GO
~~START~~
varchar#!#varchar
new_test1#!#dbo
~~END~~


SELECT rolname FROM pg_roles WHERE rolname = 'master_new_test1';
GO
~~START~~
varchar
master_new_test1
~~END~~


-- Test alter user on predefined database users
ALTER USER dbo WITH DEFAULT_SCHEMA = sch3;
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Cannot alter the user dbo)~~


ALTER USER db_owner WITH NAME = new_db_owner;
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Cannot alter the user db_owner)~~


ALTER USER guest WITH NAME = new_guest;
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Cannot alter the user guest)~~


-- Clean up
DROP USER new_test1;
GO

SELECT name, default_schema_name
FROM sys.database_principals
WHERE name = 'test1';
GO
~~START~~
varchar#!#varchar
~~END~~


DROP USER IF EXISTS test2;
GO

SELECT name, default_schema_name
FROM sys.database_principals
WHERE name = 'test2';
GO
~~START~~
varchar#!#varchar
~~END~~


DROP USER test3;
GO

SELECT name, default_schema_name
FROM sys.database_principals
WHERE name = 'test3';
GO
~~START~~
varchar#!#varchar
~~END~~


DROP USER AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
GO

SELECT name, default_schema_name
FROM sys.database_principals
WHERE name = 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';
GO
~~START~~
varchar#!#varchar
~~END~~


DROP SCHEMA sch3;
GO

DROP LOGIN test1;
GO

DROP LOGIN test2;
GO

DROP LOGIN test3;
GO

DROP LOGIN test4;
GO

DROP DATABASE db1;
GO
