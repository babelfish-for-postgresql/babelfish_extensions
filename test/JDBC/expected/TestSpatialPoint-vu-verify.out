DECLARE @point geometry;
SET @point = geometry::STPointFromText('POINT(-122.34900 47.65100)', 4326);
SELECT STAsText(@point);
Go
~~START~~
text
POINT(-122.349 47.651)
~~END~~


DECLARE @point geometry;
SET @point = geometry::POINT(22.34900, -47.65100, 4326);
SELECT STAsText(@point);
Go
~~START~~
text
POINT(22.349 -47.651)
~~END~~


DECLARE @point geometry;
SET @point = geometry::STGeomFromText('POINT(-122.34900 47.65100)', 4326);
SELECT stx(@point);
SELECT sty(@point);
Go
~~START~~
float
-122.349
~~END~~

~~START~~
float
47.651
~~END~~


DECLARE @point geometry;
SET @point = geometry::POINT(22.34900, -47.65100, 4326);
SELECT stx(@point);
SELECT sty(@point);
Go
~~START~~
float
22.349
~~END~~

~~START~~
float
-47.651
~~END~~


DECLARE @point1 geometry, @point2 geometry;
SET @point1 = geometry::STPointFromText('POINT(-122.34900 47.65100)', 4326);
SET @point2 = geometry::STGeomFromText('POINT(-122.35000 47.65000)', 4326);
SELECT STDistance(@point1, @point2);
Go
~~START~~
float
0.0014142135623697993
~~END~~


SELECT * FROM TextFromGeom;
GO
~~START~~
text
POINT(47.651 -22.349)
POINT(1 2)
POINT(47.651 -22.349)
<NULL>
POINT(47.651 -22.349)
POINT(1 2)
POINT(47.651 -22.349)
POINT(47.651 -22.349)
POINT(1 2)
POINT(47.651 -22.349)
~~END~~


SELECT * FROM BinaryFromGeom;
GO
~~START~~
varbinary
010100000017D9CEF753D34740D34D6210585936C0
0101000000000000000000F03F0000000000000040
010100000017D9CEF753D34740D34D6210585936C0
<NULL>
010100000017D9CEF753D34740D34D6210585936C0
0101000000000000000000F03F0000000000000040
010100000017D9CEF753D34740D34D6210585936C0
010100000017D9CEF753D34740D34D6210585936C0
0101000000000000000000F03F0000000000000040
010100000017D9CEF753D34740D34D6210585936C0
~~END~~


SELECT * FROM CoordsFromGeom;
GO
~~START~~
float#!#float
47.651#!#-22.349
1.0#!#2.0
47.651#!#-22.349
<NULL>#!#<NULL>
47.651#!#-22.349
1.0#!#2.0
47.651#!#-22.349
47.651#!#-22.349
1.0#!#2.0
47.651#!#-22.349
~~END~~


SELECT * FROM equal_geom;
GO
~~START~~
geometry
E6100000010C17D9CEF753D34740D34D6210585936C0
E6100000010C17D9CEF753D34740D34D6210585936C0
E6100000010C17D9CEF753D34740D34D6210585936C0
E6100000010C17D9CEF753D34740D34D6210585936C0
E6100000010C000000000000F03F0000000000000040
E6100000010C000000000000F03F0000000000000040
E6100000010C000000000000F03F0000000000000040
00000000010C17D9CEF753D34740D34D6210585936C0
00000000010C17D9CEF753D34740D34D6210585936C0
E6100000010C17D9CEF753D34740D34D6210585936C0
E6100000010C17D9CEF753D34740D34D6210585936C0
E6100000010C17D9CEF753D34740D34D6210585936C0
E6100000010C17D9CEF753D34740D34D6210585936C0
E6100000010C000000000000F03F0000000000000040
E6100000010C000000000000F03F0000000000000040
E6100000010C000000000000F03F0000000000000040
E6100000010C17D9CEF753D34740D34D6210585936C0
E6100000010C17D9CEF753D34740D34D6210585936C0
E6100000010C17D9CEF753D34740D34D6210585936C0
E6100000010C17D9CEF753D34740D34D6210585936C0
E6100000010C17D9CEF753D34740D34D6210585936C0
E6100000010C17D9CEF753D34740D34D6210585936C0
E6100000010C17D9CEF753D34740D34D6210585936C0
E6100000010C17D9CEF753D34740D34D6210585936C0
E6100000010C000000000000F03F0000000000000040
E6100000010C000000000000F03F0000000000000040
E6100000010C000000000000F03F0000000000000040
00000000010C17D9CEF753D34740D34D6210585936C0
00000000010C17D9CEF753D34740D34D6210585936C0
~~END~~


SELECT * FROM point_distances_geom;
GO
~~START~~
geometry#!#geometry#!#float
E6100000010C17D9CEF753D34740D34D6210585936C0#!#E6100000010C000000000000F03F0000000000000040#!#52.62309000809436
~~ERROR (Code: 33557097)~~

~~ERROR (Message: ST_Distance: Operation on mixed SRID geometries (Point, 4326) != (Point, 0))~~


SELECT location FROM SPATIALPOINTGEOM_dt; 
GO
~~START~~
geometry
E6100000010C17D9CEF753D34740D34D6210585936C0
E6100000010C000000000000F03F0000000000000040
00000000010C17D9CEF753D34740D34D6210585936C0
<NULL>
E6100000010C17D9CEF753D34740D34D6210585936C0
E6100000010C000000000000F03F0000000000000040
E6100000010C17D9CEF753D34740D34D6210585936C0
E6100000010C17D9CEF753D34740D34D6210585936C0
E6100000010C000000000000F03F0000000000000040
00000000010C17D9CEF753D34740D34D6210585936C0
~~END~~


-- Create Type Test Case currently Babelfish supports it but TSQL doesn't for spatial Types, Although it doesn't break anything
-- TODO: Make it similar to T-SQL
SELECT * FROM TypeTable;
GO
~~START~~
int#!#geometry
1#!#E6100000010C000000000000F03F0000000000000040
~~END~~


SELECT * FROM GeomToVarbinary;
GO
~~START~~
varbinary
~~END~~

SELECT * FROM GeomTochar;
GO
~~START~~
char
~~END~~

SELECT * FROM GeomToVarchar;
GO
~~START~~
varchar
~~END~~

SELECT * FROM TypeToGeom;
GO
~~START~~
geometry
E6100000010C17D9CEF753D34740D34D6210585936C0
00000000010C000000000000F03F0000000000000040
00000000010C000000000000F03F0000000000000040
~~END~~


-- Testing Explicit CASTs to and from Geometry data type
-- Supported CASTs to and from Geometry data type
Select CAST(CAST (0xE6100000010C17D9CEF753D34740D34D6210585936C0 AS binary) as geometry)
GO
~~START~~
geometry
E6100000010C17D9CEF753D34740D34D6210585936C0
~~END~~

Select CAST(CAST (0xE6100000010C17D9CEF753D34740D34D6210585936C0 AS varbinary(MAX)) as geometry)
GO
~~START~~
geometry
E6100000010C17D9CEF753D34740D34D6210585936C0
~~END~~

Select CAST (geometry::STGeomFromText('POINT(1.0 2.0)', 4326) AS varbinary(MAX))
GO
~~START~~
varbinary
E6100000010C000000000000F03F0000000000000040
~~END~~

Select CAST(CAST ('POINT(1 2)' AS char) as geometry)
GO
~~START~~
geometry
00000000010C000000000000F03F0000000000000040
~~END~~

Select CAST (geometry::STGeomFromText('POINT(1.0 2.0)', 4326) AS char)
GO
~~START~~
char
POINT(1 2)                    
~~END~~

Select CAST(CAST ('POINT(1 2)' AS nchar) as geometry)
GO
~~START~~
geometry
00000000010C000000000000F03F0000000000000040
~~END~~

Select CAST (geometry::STGeomFromText('POINT(1.0 2.0)', 4326) AS nchar)
GO
~~START~~
nchar
POINT(1 2)                    
~~END~~

Select CAST(CAST ('POINT(1 2)' AS varchar) as geometry)
GO
~~START~~
geometry
00000000010C000000000000F03F0000000000000040
~~END~~

Select CAST (geometry::STGeomFromText('POINT(1.0 2.0)', 4326) AS varchar)
GO
~~START~~
varchar
POINT(1 2)
~~END~~

Select CAST(CAST ('POINT(1 2)' AS nvarchar) as geometry)
GO
~~START~~
geometry
00000000010C000000000000F03F0000000000000040
~~END~~

Select CAST (geometry::STGeomFromText('POINT(1.0 2.0)', 4326) AS nvarchar)
GO
~~START~~
nvarchar
POINT(1 2)
~~END~~


-- UnSupported CASTs to and from Geometry data type
Select CAST (geometry::STGeomFromText('POINT(1.0 2.0)', 4326) AS datetime)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type geometry to datetime)~~

Select CAST(CAST (0001-01-01 AS datetime) as geometry)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type datetime to geometry)~~

Select CAST (geometry::STGeomFromText('POINT(1.0 2.0)', 4326) AS decimal)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type geometry to "decimal")~~

Select CAST(CAST (20.0 AS decimal) as geometry)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type "decimal" to geometry)~~

Select CAST (geometry::STGeomFromText('POINT(1.0 2.0)', 4326) AS bigInt)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type geometry to bigint)~~

Select CAST(CAST (20 AS bigInt) as geometry)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type bigint to geometry)~~

Select CAST (geometry::STGeomFromText('POINT(1.0 2.0)', 4326) AS bigInt)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type geometry to bigint)~~

Select CAST(CAST (20 AS bigInt) as geometry)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type bigint to geometry)~~

Select CAST (geometry::STGeomFromText('POINT(1.0 2.0)', 4326) AS money)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type geometry to money)~~

Select CAST(CAST ($1 AS money) as geometry)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type money to geometry)~~

Select CAST (geometry::STGeomFromText('POINT(1.0 2.0)', 4326) AS bit)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type geometry to "bit")~~

Select CAST(CAST (1 AS bit) as geometry)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type "bit" to geometry)~~

Select CAST (geometry::STGeomFromText('POINT(1.0 2.0)', 4326) AS uniqueidentifier)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type geometry to uniqueidentifier)~~

Select CAST(CAST ('6F9619FF-8B86-D011-B42D-00C04FC964FF' AS uniqueidentifier) as geometry)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type uniqueidentifier to geometry)~~

Select CAST(CAST ('POINT(1 2)' AS text) as geometry)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Explicit Conversion from data type Text to sys.Geometry is not allowed.)~~

Select CAST (geometry::STGeomFromText('POINT(1.0 2.0)', 4326) AS text)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Explicit Conversion from data type sys.Geometry to Text is not allowed.)~~

Select CAST (geometry::STGeomFromText('POINT(1.0 2.0)', 4326) AS sql_variant)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type geometry to sql_variant)~~

Select CAST(CAST ('POINT(1 2)' AS sql_variant) as geometry)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type sql_variant to geometry)~~

Select CAST (geometry::STGeomFromText('POINT(1.0 2.0)', 4326) AS xml)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type geometry to xml)~~

Select CAST(CAST ('<head>point(1 2)</head>' AS xml) as geometry)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type xml to geometry)~~

Select CAST (geometry::STGeomFromText('POINT(1.0 2.0)', 4326) AS geography)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type geometry to geography)~~

Select CAST (geography::STGeomFromText('POINT(1.0 2.0)', 4326) AS geometry)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type geography to geometry)~~


-- UnSupported CASTs which are currently supported for geometry
-- This is because Image type is created as -> CREATE DOMAIN sys.IMAGE AS sys.BBF_VARBINARY; so it is always converted to it's baseType i.e. varbinary
Select CAST (geometry::STGeomFromText('POINT(1.0 2.0)', 4326) AS image)
GO
~~START~~
image
E6100000010C000000000000F03F0000000000000040
~~END~~

Select CAST(CAST (0xE6100000010C17D9CEF753D34740D34D6210585936C0 AS image) as geometry)
GO
~~START~~
geometry
E6100000010C17D9CEF753D34740D34D6210585936C0
~~END~~


DECLARE @point geography;
SET @point = geography::STGeomFromText('POINT(-122.34900 47.65100)', 4326);
SELECT STAsText(@point);
Go
~~START~~
text
POINT(-122.349 47.651)
~~END~~


DECLARE @point geography;
SET @point = geography::POINT(22.34900, -47.65100, 4326);
SELECT STAsText(@point);
Go
~~START~~
text
POINT(-47.651 22.349)
~~END~~


DECLARE @point geography;
SET @point = geography::STPointFromText('POINT(-122.34900 47.65100)', 4326);
SELECT long(@point);
SELECT lat(@point);
Go
~~START~~
float
-122.349
~~END~~

~~START~~
float
47.651
~~END~~


DECLARE @point geography;
SET @point = geography::POINT(22.34900, -47.65100, 4326);
SELECT long(@point);
SELECT lat(@point);
Go
~~START~~
float
-47.651
~~END~~

~~START~~
float
22.349
~~END~~


DECLARE @point1 geography, @point2 geography;
SET @point1 = geography::STPointFromText('POINT(-122.34900 47.65100)', 4326);
SET @point2 = geography::STGeomFromText('POINT(-122.35000 47.65000)', 4326);
SELECT STDistance(@point1, @point2);
Go
~~START~~
float
134.1864008701007
~~END~~


SELECT * FROM TextFromGeog;
GO
~~START~~
text
POINT(47.651 -22.349)
POINT(1 2)
<NULL>
POINT(47.651 -22.349)
POINT(1 2)
POINT(-22.349 47.651)
POINT(47.651 -22.349)
POINT(1 2)
~~END~~


SELECT * FROM BinaryFromGeog;
GO
~~START~~
varbinary
010100000017D9CEF753D34740D34D6210585936C0
0101000000000000000000F03F0000000000000040
<NULL>
010100000017D9CEF753D34740D34D6210585936C0
0101000000000000000000F03F0000000000000040
0101000000D34D6210585936C017D9CEF753D34740
010100000017D9CEF753D34740D34D6210585936C0
0101000000000000000000F03F0000000000000040
~~END~~


SELECT * FROM CoordsFromGeog;
GO
~~START~~
float#!#float
47.651#!#-22.349
1.0#!#2.0
<NULL>#!#<NULL>
47.651#!#-22.349
1.0#!#2.0
-22.349#!#47.651
47.651#!#-22.349
1.0#!#2.0
~~END~~


SELECT * FROM TransformFromGeog;
GO
~~START~~
geography
E6100000010CD34D6210585936C017D9CEF753D34740
E6100000010C0000000000000040000000000000F03F
<NULL>
E6100000010CD34D6210585936C017D9CEF753D34740
E6100000010C0000000000000040000000000000F03F
E6100000010C17D9CEF753D34740D34D6210585936C0
E6100000010CD34D6210585936C017D9CEF753D34740
E6100000010C0000000000000040000000000000F03F
~~END~~


SELECT * FROM equal_geog;
GO
~~START~~
geography
E6100000010CD34D6210585936C017D9CEF753D34740
E6100000010CD34D6210585936C017D9CEF753D34740
E6100000010CD34D6210585936C017D9CEF753D34740
E6100000010C0000000000000040000000000000F03F
E6100000010C0000000000000040000000000000F03F
E6100000010C0000000000000040000000000000F03F
E6100000010CD34D6210585936C017D9CEF753D34740
E6100000010CD34D6210585936C017D9CEF753D34740
E6100000010CD34D6210585936C017D9CEF753D34740
E6100000010C0000000000000040000000000000F03F
E6100000010C0000000000000040000000000000F03F
E6100000010C0000000000000040000000000000F03F
E6100000010C17D9CEF753D34740D34D6210585936C0
E6100000010CD34D6210585936C017D9CEF753D34740
E6100000010CD34D6210585936C017D9CEF753D34740
E6100000010CD34D6210585936C017D9CEF753D34740
E6100000010C0000000000000040000000000000F03F
E6100000010C0000000000000040000000000000F03F
E6100000010C0000000000000040000000000000F03F
~~END~~


SELECT * FROM point_distances_geog;
GO
~~START~~
geography#!#geography#!#float
E6100000010CD34D6210585936C017D9CEF753D34740#!#E6100000010C0000000000000040000000000000F03F#!#5736178.674863189
E6100000010CD34D6210585936C017D9CEF753D34740#!#E6100000010C0000000000000040000000000000F03F#!#5736178.674863189
E6100000010CD34D6210585936C017D9CEF753D34740#!#E6100000010C17D9CEF753D34740D34D6210585936C0#!#1.04243622548279E7
E6100000010CD34D6210585936C017D9CEF753D34740#!#E6100000010C0000000000000040000000000000F03F#!#5736178.674863189
E6100000010C0000000000000040000000000000F03F#!#E6100000010CD34D6210585936C017D9CEF753D34740#!#5736178.674863189
E6100000010C0000000000000040000000000000F03F#!#E6100000010CD34D6210585936C017D9CEF753D34740#!#5736178.674863189
E6100000010C0000000000000040000000000000F03F#!#E6100000010C17D9CEF753D34740D34D6210585936C0#!#5535965.307328846
E6100000010C0000000000000040000000000000F03F#!#E6100000010CD34D6210585936C017D9CEF753D34740#!#5736178.674863189
E6100000010CD34D6210585936C017D9CEF753D34740#!#E6100000010C0000000000000040000000000000F03F#!#5736178.674863189
E6100000010CD34D6210585936C017D9CEF753D34740#!#E6100000010C0000000000000040000000000000F03F#!#5736178.674863189
E6100000010CD34D6210585936C017D9CEF753D34740#!#E6100000010C17D9CEF753D34740D34D6210585936C0#!#1.04243622548279E7
E6100000010CD34D6210585936C017D9CEF753D34740#!#E6100000010C0000000000000040000000000000F03F#!#5736178.674863189
E6100000010C0000000000000040000000000000F03F#!#E6100000010CD34D6210585936C017D9CEF753D34740#!#5736178.674863189
E6100000010C0000000000000040000000000000F03F#!#E6100000010CD34D6210585936C017D9CEF753D34740#!#5736178.674863189
E6100000010C0000000000000040000000000000F03F#!#E6100000010C17D9CEF753D34740D34D6210585936C0#!#5535965.307328846
E6100000010C0000000000000040000000000000F03F#!#E6100000010CD34D6210585936C017D9CEF753D34740#!#5736178.674863189
E6100000010C17D9CEF753D34740D34D6210585936C0#!#E6100000010CD34D6210585936C017D9CEF753D34740#!#1.04243622548279E7
E6100000010C17D9CEF753D34740D34D6210585936C0#!#E6100000010C0000000000000040000000000000F03F#!#5535965.307328846
E6100000010C17D9CEF753D34740D34D6210585936C0#!#E6100000010CD34D6210585936C017D9CEF753D34740#!#1.04243622548279E7
E6100000010C17D9CEF753D34740D34D6210585936C0#!#E6100000010C0000000000000040000000000000F03F#!#5535965.307328846
E6100000010C17D9CEF753D34740D34D6210585936C0#!#E6100000010CD34D6210585936C017D9CEF753D34740#!#1.04243622548279E7
E6100000010C17D9CEF753D34740D34D6210585936C0#!#E6100000010C0000000000000040000000000000F03F#!#5535965.307328846
E6100000010CD34D6210585936C017D9CEF753D34740#!#E6100000010C0000000000000040000000000000F03F#!#5736178.674863189
E6100000010CD34D6210585936C017D9CEF753D34740#!#E6100000010C0000000000000040000000000000F03F#!#5736178.674863189
E6100000010CD34D6210585936C017D9CEF753D34740#!#E6100000010C17D9CEF753D34740D34D6210585936C0#!#1.04243622548279E7
E6100000010CD34D6210585936C017D9CEF753D34740#!#E6100000010C0000000000000040000000000000F03F#!#5736178.674863189
E6100000010C0000000000000040000000000000F03F#!#E6100000010CD34D6210585936C017D9CEF753D34740#!#5736178.674863189
E6100000010C0000000000000040000000000000F03F#!#E6100000010CD34D6210585936C017D9CEF753D34740#!#5736178.674863189
E6100000010C0000000000000040000000000000F03F#!#E6100000010C17D9CEF753D34740D34D6210585936C0#!#5535965.307328846
E6100000010C0000000000000040000000000000F03F#!#E6100000010CD34D6210585936C017D9CEF753D34740#!#5736178.674863189
~~END~~


SELECT location FROM SPATIALPOINTGEOG_dt;
GO
~~START~~
geography
E6100000010CD34D6210585936C017D9CEF753D34740
E6100000010C0000000000000040000000000000F03F
<NULL>
E6100000010CD34D6210585936C017D9CEF753D34740
E6100000010C0000000000000040000000000000F03F
E6100000010C17D9CEF753D34740D34D6210585936C0
E6100000010CD34D6210585936C017D9CEF753D34740
E6100000010C0000000000000040000000000000F03F
~~END~~


SELECT * FROM GeogToVarbinary;
GO
~~START~~
varbinary
~~END~~

SELECT * FROM GeogTochar;
GO
~~START~~
char
~~END~~

SELECT * FROM GeogToVarchar;
GO
~~START~~
varchar
~~END~~

SELECT * FROM TypeToGeog;
GO
~~START~~
geography
E6100000010C17D9CEF753D34740D34D6210585936C0
E6100000010C0000000000000040000000000000F03F
E6100000010C0000000000000040000000000000F03F
~~END~~


-- Testing Explicit CASTs to and from Geography data type
-- Supported CASTs to and from Geography data type
Select CAST(CAST (0xE6100000010C17D9CEF753D34740D34D6210585936C0 AS binary) as geography)
GO
~~START~~
geography
E6100000010C17D9CEF753D34740D34D6210585936C0
~~END~~

Select CAST(CAST (0xE6100000010C17D9CEF753D34740D34D6210585936C0 AS varbinary(MAX)) as geography)
GO
~~START~~
geography
E6100000010C17D9CEF753D34740D34D6210585936C0
~~END~~

Select CAST (geography::STGeomFromText('POINT(1.0 2.0)', 4326) AS varbinary(MAX))
GO
~~START~~
varbinary
E6100000010C0000000000000040000000000000F03F
~~END~~

Select CAST(CAST ('POINT(1 2)' AS char) as geography)
GO
~~START~~
geography
E6100000010C0000000000000040000000000000F03F
~~END~~

Select CAST (geography::STGeomFromText('POINT(1.0 2.0)', 4326) AS char)
GO
~~START~~
char
POINT(1 2)                    
~~END~~

Select CAST(CAST ('POINT(1 2)' AS nchar) as geography)
GO
~~START~~
geography
E6100000010C0000000000000040000000000000F03F
~~END~~

Select CAST (geography::STGeomFromText('POINT(1.0 2.0)', 4326) AS nchar)
GO
~~START~~
nchar
POINT(1 2)                    
~~END~~

Select CAST(CAST ('POINT(1 2)' AS varchar) as geography)
GO
~~START~~
geography
E6100000010C0000000000000040000000000000F03F
~~END~~

Select CAST (geography::STGeomFromText('POINT(1.0 2.0)', 4326) AS varchar)
GO
~~START~~
varchar
POINT(1 2)
~~END~~

Select CAST(CAST ('POINT(1 2)' AS nvarchar) as geography)
GO
~~START~~
geography
E6100000010C0000000000000040000000000000F03F
~~END~~

Select CAST (geography::STGeomFromText('POINT(1.0 2.0)', 4326) AS nvarchar)
GO
~~START~~
nvarchar
POINT(1 2)
~~END~~


-- UnSupported CASTs to and from Geography data type
Select CAST (geography::STGeomFromText('POINT(1.0 2.0)', 4326) AS datetime)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type geography to datetime)~~

Select CAST(CAST (0001-01-01 AS datetime) as geography)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type datetime to geography)~~

Select CAST (geography::STGeomFromText('POINT(1.0 2.0)', 4326) AS decimal)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type geography to "decimal")~~

Select CAST(CAST (20.0 AS decimal) as geography)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type "decimal" to geography)~~

Select CAST (geography::STGeomFromText('POINT(1.0 2.0)', 4326) AS bigInt)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type geography to bigint)~~

Select CAST(CAST (20 AS bigInt) as geography)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type bigint to geography)~~

Select CAST (geography::STGeomFromText('POINT(1.0 2.0)', 4326) AS bigInt)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type geography to bigint)~~

Select CAST(CAST (20 AS bigInt) as geography)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type bigint to geography)~~

Select CAST (geography::STGeomFromText('POINT(1.0 2.0)', 4326) AS money)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type geography to money)~~

Select CAST(CAST ($1 AS money) as geography)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type money to geography)~~

Select CAST (geography::STGeomFromText('POINT(1.0 2.0)', 4326) AS bit)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type geography to "bit")~~

Select CAST(CAST (1 AS bit) as geography)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type "bit" to geography)~~

Select CAST (geography::STGeomFromText('POINT(1.0 2.0)', 4326) AS uniqueidentifier)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type geography to uniqueidentifier)~~

Select CAST(CAST ('6F9619FF-8B86-D011-B42D-00C04FC964FF' AS uniqueidentifier) as geography)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type uniqueidentifier to geography)~~

Select CAST(CAST ('POINT(1 2)' AS text) as geography)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Explicit Conversion from data type Text to sys.Geography is not allowed.)~~

Select CAST (geography::STGeomFromText('POINT(1.0 2.0)', 4326) AS text)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Explicit Conversion from data type sys.Geography to Text is not allowed.)~~

Select CAST (geography::STGeomFromText('POINT(1.0 2.0)', 4326) AS sql_variant)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type geography to sql_variant)~~

Select CAST(CAST ('POINT(1 2)' AS sql_variant) as geography)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type sql_variant to geography)~~

Select CAST (geography::STGeomFromText('POINT(1.0 2.0)', 4326) AS xml)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type geography to xml)~~

Select CAST(CAST ('<head>point(1 2)</head>' AS xml) as geography)
GO
~~ERROR (Code: 33557097)~~

~~ERROR (Message: cannot cast type xml to geography)~~


-- UnSupported CASTs which are currently supported for geography
-- This is because Image type is created as -> CREATE DOMAIN sys.IMAGE AS sys.BBF_VARBINARY; so it is always converted to it's baseType i.e. varbinary
Select CAST (geography::STGeomFromText('POINT(1.0 2.0)', 4326) AS image)
GO
~~START~~
image
E6100000010C0000000000000040000000000000F03F
~~END~~

Select CAST(CAST (0xE6100000010C17D9CEF753D34740D34D6210585936C0 AS image) as geography)
GO
~~START~~
geography
E6100000010C17D9CEF753D34740D34D6210585936C0
~~END~~


SELECT * FROM SPATIALPOINT_dt;
GO
~~START~~
int#!#geometry#!#geography
1#!#E6100000010C17D9CEF753D34740D34D6210585936C0#!#<NULL>
2#!#<NULL>#!#E6100000010CD34D6210585936C017D9CEF753D34740
3#!#E6100000010C000000000000F03F0000000000000040#!#E6100000010C0000000000000040000000000000F03F
4#!#E6100000010C17D9CEF753D34740D34D6210585936C0#!#<NULL>
5#!#<NULL>#!#E6100000010CD34D6210585936C017D9CEF753D34740
6#!#E6100000010C000000000000F03F0000000000000040#!#E6100000010C0000000000000040000000000000F03F
~~END~~

