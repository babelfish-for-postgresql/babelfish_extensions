-- tsql
-- sanity checks for metadata stored in babelfish catalog
select owner, name from sys.babelfish_sysdatabases where name = 'sp_rename_database1' order by name;
select nspname, orig_name from sys.babelfish_namespace_ext where nspname LIKE 'sp_rename_database%' order by nspname;
select rolname, login_name, orig_username, database_name from sys.babelfish_authid_user_ext where rolname LIKE 'sp_rename_database%' order by rolname;
select rolname, default_database_name from sys.babelfish_authid_login_ext where default_database_name LIKE 'sp_rename_database%' order by rolname;
go
~~START~~
varchar#!#text
jdbc_user#!#sp_rename_database1
~~END~~

~~START~~
varchar#!#nvarchar
sp_rename_database1_dbo#!#dbo
sp_rename_database1_guest#!#guest
sp_rename_database1_sp_rename_schema1#!#sp_rename_schema1
~~END~~

~~START~~
varchar#!#varchar#!#nvarchar#!#nvarchar
sp_rename_database1_db_accessadmin#!##!#db_accessadmin#!#sp_rename_database1
sp_rename_database1_db_owner#!##!#db_owner#!#sp_rename_database1
sp_rename_database1_dbo#!##!#dbo#!#sp_rename_database1
sp_rename_database1_guest#!##!#guest#!#sp_rename_database1
sp_rename_database1_sp_rename_login2#!#sp_rename_login2#!#sp_rename_login2#!#sp_rename_database1
sp_rename_database1_sp_rename_role1#!##!#sp_rename_role1#!#sp_rename_database1
~~END~~

~~START~~
varchar#!#nvarchar
sp_rename_login1#!#sp_rename_database1
~~END~~


-- sanity check
use sp_rename_database1;
go
-- Renaming the current database is also allowed
exec sp_rename 'sp_rename_database1' , 'sp_rename_database2', 'database';
go
select db_name()
go
~~START~~
nvarchar
sp_rename_database2
~~END~~

use sp_rename_database1;
go
~~ERROR (Code: 911)~~

~~ERROR (Message: database "sp_rename_database1" does not exist)~~

use sp_rename_database2;
go
exec sp_rename 'sp_rename_database2', 'sp_rename_database1', 'database';
go

use master
go
exec sp_rename 'sp_rename_database1', 'sp_rename_database2', 'database';
go
-- should return updated rows
select owner, name from sys.babelfish_sysdatabases where name LIKE 'sp_rename_database%' order by name;
select nspname, orig_name from sys.babelfish_namespace_ext where nspname LIKE 'sp_rename_database%' order by nspname;
select rolname, login_name, orig_username, database_name from sys.babelfish_authid_user_ext where rolname LIKE 'sp_rename_database%' order by rolname;
select rolname, default_database_name from sys.babelfish_authid_login_ext where default_database_name LIKE 'sp_rename_database%' order by rolname;
go
~~START~~
varchar#!#text
jdbc_user#!#sp_rename_database2
~~END~~

~~START~~
varchar#!#nvarchar
sp_rename_database2_dbo#!#dbo
sp_rename_database2_guest#!#guest
sp_rename_database2_sp_rename_schema1#!#sp_rename_schema1
~~END~~

~~START~~
varchar#!#varchar#!#nvarchar#!#nvarchar
sp_rename_database2_db_accessadmin#!##!#db_accessadmin#!#sp_rename_database2
sp_rename_database2_db_owner#!##!#db_owner#!#sp_rename_database2
sp_rename_database2_dbo#!##!#dbo#!#sp_rename_database2
sp_rename_database2_guest#!##!#guest#!#sp_rename_database2
sp_rename_database2_sp_rename_login2#!#sp_rename_login2#!#sp_rename_login2#!#sp_rename_database2
sp_rename_database2_sp_rename_role1#!##!#sp_rename_role1#!#sp_rename_database2
~~END~~

~~START~~
varchar#!#nvarchar
sp_rename_login1#!#sp_rename_database2
~~END~~


-- sanity check to use db
use sp_rename_database1;
go
~~ERROR (Code: 911)~~

~~ERROR (Message: database "sp_rename_database1" does not exist)~~

use sp_rename_database2;
go

use master
go

-- rollback changes
exec sp_rename 'sp_rename_database2', 'sp_rename_database1', 'database'
go

-- sp_rename inside transaction is allowed
Begin Transaction;
go
exec sp_rename 'sp_rename_database2', 'sp_rename_database1', 'database'
go
~~ERROR (Code: 574)~~

~~ERROR (Message: SP_RENAME/SP_RENAMEDB cannot run inside a transaction block)~~

-- does not rollback transaction
select @@trancount
go
~~START~~
int
1
~~END~~

commit
go

-- exec sp_rename inside a function/procedure should pass
create function sp_rename_function(@a text, @b text) returns int Begin exec sp_rename @a, @b, 'database' END
go
create procedure sp_rename_procedure(@a text, @b text) as exec sp_rename @a, @b, 'database'
go

select sp_rename_function('sp_rename_database1', 'sp_rename_database2');
go
~~START~~
int
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Only functions can be executed within a function)~~

exec sp_rename_procedure @a = 'sp_rename_database1', @b = 'sp_rename_database1'
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: schema "sp_rename_database1_dbo" already exists)~~


-- Renaming system databases is prohibited
exec sp_rename 'master', 'master1', 'DATABASE';
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Cannot change the name of the system database master.)~~

exec sp_rename 'tempdb', 'tempdb1', 'DATABASE';
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Cannot change the name of the system database tempdb.)~~

exec sp_rename 'msdb', 'msdb1', 'DATABASE';
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Cannot change the name of the system database msdb.)~~


-- Rename a case sensitive and len>64 database name
exec sp_rename '[sp_rename_ThisOldDatabaseNameIsCaseSensitiveAndIsLongerThan64DigitsToTestRenameDb]',
 '[sp_rename_ThisNewDatabaseNameIsCaseSensitiveAndIsLongerThan64DigitsToTestRenameDb]', 'database'
go

-- should return updated rows
select owner, name from sys.babelfish_sysdatabases where name LIKE 'sp_rename_this%' order by name;
select nspname, orig_name from sys.babelfish_namespace_ext where nspname LIKE 'sp_rename_this%' order by nspname;
select rolname, login_name, orig_username, database_name from sys.babelfish_authid_user_ext where rolname LIKE 'sp_rename_this%' order by rolname;
select rolname, default_database_name from sys.babelfish_authid_login_ext where default_database_name LIKE 'sp_rename_this%' order by rolname;
go
~~START~~
varchar#!#text
jdbc_user#!#sp_rename_thisnewdatabasenameisb8bd7c94f797959aa629fc2f9e821637
~~END~~

~~START~~
varchar#!#nvarchar
sp_rename_thisnewdatabasenameis21f79a8b66248a73068dca6edd5b0ca3#!#guest
sp_rename_thisnewdatabasenameisfacf8af797f428fdc401ffddc672894d#!#dbo
~~END~~

~~START~~
varchar#!#varchar#!#nvarchar#!#nvarchar
sp_rename_thisnewdatabasenameis1e39ca7c78a1fba2342467331fb5bd56#!##!#db_owner#!#sp_rename_thisnewdatabasenameisb8bd7c94f797959aa629fc2f9e821637
sp_rename_thisnewdatabasenameis21f79a8b66248a73068dca6edd5b0ca3#!##!#guest#!#sp_rename_thisnewdatabasenameisb8bd7c94f797959aa629fc2f9e821637
sp_rename_thisnewdatabasenameisa0a5aa90abf2314f4773860fda5e43a2#!##!#db_accessadmin#!#sp_rename_thisnewdatabasenameisb8bd7c94f797959aa629fc2f9e821637
sp_rename_thisnewdatabasenameisfacf8af797f428fdc401ffddc672894d#!##!#dbo#!#sp_rename_thisnewdatabasenameisb8bd7c94f797959aa629fc2f9e821637
~~END~~

~~START~~
varchar#!#nvarchar
~~END~~


-- sanity check to use db
use [sp_rename_ThisOldDatabaseNameIsCaseSensitiveAndIsLongerThan64DigitsToTestRenameDb];
go
~~ERROR (Code: 911)~~

~~ERROR (Message: database "sp_rename_thisolddatabasenameis486955ab4c9cc6b742c1a6caa1f22a49" does not exist)~~

use [sp_rename_ThisNewDatabaseNameIsCaseSensitiveAndIsLongerThan64DigitsToTestRenameDb]
go

use master
go

-- tsql user=sp_rename_login1 password=1234
use sp_rename_database1
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: The server principal "sp_rename_login1" is not able to access the database "sp_rename_database1" under the current security context)~~

-- user that does not have access to db, cannot modify name
exec sp_rename 'sp_rename_database1', 'sp_rename_database2', 'database';
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: User does not have permission to rename the database 'sp_rename_database1', the database does not exist, or the database is not in a state that allows access checks.)~~


-- tsql
-- give sp_rename_login1 permission to the db
alter server role sysadmin add member sp_rename_login1
go

-- tsql user=sp_rename_login1 password=1234
-- should work now
exec sp_rename 'sp_rename_database1', 'sp_rename_database2', 'database';
go
-- connect to the database to test concurrencies
use sp_rename_database2
go

-- tsql
-- should throw error since there is an active session using sp_rename_database2
exec sp_rename 'sp_rename_database2', 'sp_rename_database1', 'database';
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: The database could not be exclusively locked to perform the operation.)~~


-- tsql user=sp_rename_login1 password=1234
-- now disconnect from that database in the 2nd connection and test alter again
select db_name()
go
~~START~~
nvarchar
sp_rename_database2
~~END~~

use master
go

-- tsql
exec sp_rename 'sp_rename_database2', 'sp_rename_database1', 'database';
go

drop function sp_rename_function
drop procedure sp_rename_procedure
go

-- testing invalid args for sp_rename
create database sp_rename_db1_temp;
go
-- NULL old_db_name
exec sp_rename NULL, 'sp_rename_db1_temp', 'DATABASE';
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: The database '(null)' does not exist. Supply a valid database name. To see available databases, use sys.databases.)~~

-- NULL new_db_name
exec sp_rename 'sp_rename_db1_temp  ', NULL, 'Database';
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: The value for the @newname parameter contains invalid characters or violates a basic restriction ((null)).)~~

-- both NULL
exec sp_rename NULL, NULL, 'DaTaBaSe';
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: The database '(null)' does not exist. Supply a valid database name. To see available databases, use sys.databases.)~~

-- empty string old_db_name
exec sp_rename '', '     sp_rename_db1_temp', 'database';
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: The value for the @objname parameter contains invalid characters or violates a basic restriction (()).)~~

-- empty string new_db_name
exec sp_rename '    sp_rename_db1_temp', '', 'dAtAbAsE';
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: The value for the @newname parameter contains invalid characters or violates a basic restriction (()).)~~

-- both empty string
exec sp_rename '    ', ' ', ' Database '
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: The value for the @objname parameter contains invalid characters or violates a basic restriction (()).)~~

-- 3 part names
exec sp_rename ' sp_rename_db1_temp.sch1.t1', 'db2      ', '   DATABASE'
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: The value for the @objname parameter contains invalid characters or violates a basic restriction (( sp_rename_db1_temp.sch1.t1)).)~~

-- 3 part names
exec sp_rename 'sp_rename_db1_temp', 'db2.sch2.t2', 'DATABASE   '
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: The value for the @newname parameter contains invalid characters or violates a basic restriction ((db2.sch2.t2)).)~~

-- 3 part names
exec sp_rename 'db1.sch1.t1', 'db2.sch2.t2', 'DATABASE'
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: The value for the @objname parameter contains invalid characters or violates a basic restriction ((db1.sch1.t1)).)~~

-- valid input, should get db does not exist
exec sp_rename '[db1.sch1.t1]', 'sp_rename_db1_temp      ', 'DATABASE'
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Database db1.sch1.t1 does not exist. Make sure that the name is entered correctly.)~~

-- valid input, should get db does not exist
exec sp_rename 'sp_rename_db1_temp', '[db2.sch2.t2]     ', 'DATABASE'
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: syntax error at or near ".")~~

drop database sp_rename_db1_temp
go
