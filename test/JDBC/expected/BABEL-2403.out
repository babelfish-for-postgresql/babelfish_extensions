-- psql
ALTER SYSTEM SET babelfishpg_tsql.migration_mode = 'single-db';
SELECT pg_reload_conf();
GO
~~START~~
bool
t
~~END~~


-- tsql
SELECT 1;
GO
~~START~~
int
1
~~END~~


-- psql
-- Output inconsistency, should be empty
SELECT * FROM sys.babelfish_inconsistent_metadata();
GO
~~START~~
varchar#!#varchar#!#varchar#!#jsonb
~~END~~


-- Output passed rules
SELECT * FROM sys.babelfish_inconsistent_metadata(true);
GO
~~START~~
varchar#!#varchar#!#varchar#!#jsonb
text#!#sys#!#name#!#{"Rule": "master must exist in babelfish_sysdatabases"}
text#!#sys#!#name#!#{"Rule": "tempdb must exist in babelfish_sysdatabases"}
text#!#sys#!#name#!#{"Rule": "msdb must exist in babelfish_sysdatabases"}
name#!#sys#!#rolname#!#{"Rule": "Current role name must exist in babelfish_authid_login_ext"}
name#!#sys#!#nspname#!#{"Rule": "master_dbo must exist in babelfish_namespace_ext"}
name#!#sys#!#nspname#!#{"Rule": "tempdb_dbo must exist in babelfish_namespace_ext"}
name#!#sys#!#nspname#!#{"Rule": "msdb_dbo must exist in babelfish_namespace_ext"}
name#!#sys#!#rolname#!#{"Rule": "master_db_owner must exist in babelfish_authid_user_ext"}
name#!#sys#!#rolname#!#{"Rule": "master_dbo must exist in babelfish_authid_user_ext"}
name#!#sys#!#rolname#!#{"Rule": "master_guest must exist in babelfish_authid_user_ext"}
name#!#sys#!#rolname#!#{"Rule": "tempdb_db_owner must exist in babelfish_authid_user_ext"}
name#!#sys#!#rolname#!#{"Rule": "tempdb_dbo must exist in babelfish_authid_user_ext"}
name#!#sys#!#rolname#!#{"Rule": "tempdb_guest must exist in babelfish_authid_user_ext"}
name#!#sys#!#rolname#!#{"Rule": "msdb_db_owner must exist in babelfish_authid_user_ext"}
name#!#sys#!#rolname#!#{"Rule": "msdb_dbo must exist in babelfish_authid_user_ext"}
name#!#sys#!#rolname#!#{"Rule": "msdb_guest must exist in babelfish_authid_user_ext"}
name#!#sys#!#rolname#!#{"Rule": "<owner> in babelfish_sysdatabases must also exist in babelfish_authid_login_ext"}
name#!#sys#!#rolname#!#{"Rule": "<owner> in babelfish_sysdatabases must also exist in babelfish_authid_login_ext"}
name#!#sys#!#rolname#!#{"Rule": "<owner> in babelfish_sysdatabases must also exist in babelfish_authid_login_ext"}
name#!#pg_catalog#!#nspname#!#{"Rule": "<nspname> in babelfish_namespace_ext must also exist in pg_namespace"}
name#!#pg_catalog#!#nspname#!#{"Rule": "<nspname> in babelfish_namespace_ext must also exist in pg_namespace"}
name#!#pg_catalog#!#nspname#!#{"Rule": "<nspname> in babelfish_namespace_ext must also exist in pg_namespace"}
name#!#pg_catalog#!#rolname#!#{"Rule": "<rolname> in babelfish_authid_login_ext must also exist in pg_authid"}
text#!#sys#!#name#!#{"Rule": "<default_database_name> in babelfish_authid_login_ext must also exist in babelfish_sysdatabases"}
name#!#pg_catalog#!#rolname#!#{"Rule": "<rolname> in babelfish_authid_login_ext must also exist in pg_authid"}
text#!#sys#!#name#!#{"Rule": "<default_database_name> in babelfish_authid_login_ext must also exist in babelfish_sysdatabases"}
name#!#pg_catalog#!#rolname#!#{"Rule": "<rolname> in babelfish_authid_user_ext must also exist in pg_authid"}
text#!#sys#!#name#!#{"Rule": "<database_name> in babelfish_authid_user_ext must also exist in babelfish_sysdatabases"}
name#!#pg_catalog#!#rolname#!#{"Rule": "<rolname> in babelfish_authid_user_ext must also exist in pg_authid"}
text#!#sys#!#name#!#{"Rule": "<database_name> in babelfish_authid_user_ext must also exist in babelfish_sysdatabases"}
name#!#pg_catalog#!#rolname#!#{"Rule": "<rolname> in babelfish_authid_user_ext must also exist in pg_authid"}
text#!#sys#!#name#!#{"Rule": "<database_name> in babelfish_authid_user_ext must also exist in babelfish_sysdatabases"}
name#!#pg_catalog#!#rolname#!#{"Rule": "<rolname> in babelfish_authid_user_ext must also exist in pg_authid"}
text#!#sys#!#name#!#{"Rule": "<database_name> in babelfish_authid_user_ext must also exist in babelfish_sysdatabases"}
name#!#pg_catalog#!#rolname#!#{"Rule": "<rolname> in babelfish_authid_user_ext must also exist in pg_authid"}
text#!#sys#!#name#!#{"Rule": "<database_name> in babelfish_authid_user_ext must also exist in babelfish_sysdatabases"}
name#!#pg_catalog#!#rolname#!#{"Rule": "<rolname> in babelfish_authid_user_ext must also exist in pg_authid"}
text#!#sys#!#name#!#{"Rule": "<database_name> in babelfish_authid_user_ext must also exist in babelfish_sysdatabases"}
name#!#pg_catalog#!#rolname#!#{"Rule": "<rolname> in babelfish_authid_user_ext must also exist in pg_authid"}
text#!#sys#!#name#!#{"Rule": "<database_name> in babelfish_authid_user_ext must also exist in babelfish_sysdatabases"}
name#!#pg_catalog#!#rolname#!#{"Rule": "<rolname> in babelfish_authid_user_ext must also exist in pg_authid"}
text#!#sys#!#name#!#{"Rule": "<database_name> in babelfish_authid_user_ext must also exist in babelfish_sysdatabases"}
name#!#pg_catalog#!#rolname#!#{"Rule": "<rolname> in babelfish_authid_user_ext must also exist in pg_authid"}
text#!#sys#!#name#!#{"Rule": "<database_name> in babelfish_authid_user_ext must also exist in babelfish_sysdatabases"}
~~END~~


-- psql
ALTER SYSTEM SET babelfishpg_tsql.migration_mode = 'multi-db';
SELECT pg_reload_conf();
GO
~~START~~
bool
t
~~END~~


-- tsql
SELECT 1;
GO
~~START~~
int
1
~~END~~


-- psql
-- Output inconsistency, should be empty
SELECT * FROM sys.babelfish_inconsistent_metadata();
GO
~~START~~
varchar#!#varchar#!#varchar#!#jsonb
~~END~~


-- Output passed rules
SELECT * FROM sys.babelfish_inconsistent_metadata(true);
GO
~~START~~
varchar#!#varchar#!#varchar#!#jsonb
text#!#sys#!#name#!#{"Rule": "master must exist in babelfish_sysdatabases"}
text#!#sys#!#name#!#{"Rule": "tempdb must exist in babelfish_sysdatabases"}
text#!#sys#!#name#!#{"Rule": "msdb must exist in babelfish_sysdatabases"}
name#!#sys#!#rolname#!#{"Rule": "Current role name must exist in babelfish_authid_login_ext"}
name#!#sys#!#nspname#!#{"Rule": "master_dbo must exist in babelfish_namespace_ext"}
name#!#sys#!#nspname#!#{"Rule": "tempdb_dbo must exist in babelfish_namespace_ext"}
name#!#sys#!#nspname#!#{"Rule": "msdb_dbo must exist in babelfish_namespace_ext"}
name#!#sys#!#rolname#!#{"Rule": "master_db_owner must exist in babelfish_authid_user_ext"}
name#!#sys#!#rolname#!#{"Rule": "master_dbo must exist in babelfish_authid_user_ext"}
name#!#sys#!#rolname#!#{"Rule": "master_guest must exist in babelfish_authid_user_ext"}
name#!#sys#!#rolname#!#{"Rule": "tempdb_db_owner must exist in babelfish_authid_user_ext"}
name#!#sys#!#rolname#!#{"Rule": "tempdb_dbo must exist in babelfish_authid_user_ext"}
name#!#sys#!#rolname#!#{"Rule": "tempdb_guest must exist in babelfish_authid_user_ext"}
name#!#sys#!#rolname#!#{"Rule": "msdb_db_owner must exist in babelfish_authid_user_ext"}
name#!#sys#!#rolname#!#{"Rule": "msdb_dbo must exist in babelfish_authid_user_ext"}
name#!#sys#!#rolname#!#{"Rule": "msdb_guest must exist in babelfish_authid_user_ext"}
name#!#sys#!#rolname#!#{"Rule": "<owner> in babelfish_sysdatabases must also exist in babelfish_authid_login_ext"}
name#!#pg_catalog#!#rolname#!#{"Rule": "In multi-db mode, for each <name> in babelfish_sysdatabases, <name>_db_owner must also exist in pg_authid"}
name#!#pg_catalog#!#rolname#!#{"Rule": "In multi-db mode, for each <name> in babelfish_sysdatabases, <name>_dbo must also exist in pg_authid"}
name#!#sys#!#nspname#!#{"Rule": "In multi-db mode, for each <name> in babelfish_sysdatabases, <name>_dbo must also exist in babelfish_namespace_ext"}
name#!#sys#!#rolname#!#{"Rule": "<owner> in babelfish_sysdatabases must also exist in babelfish_authid_login_ext"}
name#!#pg_catalog#!#rolname#!#{"Rule": "In multi-db mode, for each <name> in babelfish_sysdatabases, <name>_db_owner must also exist in pg_authid"}
name#!#pg_catalog#!#rolname#!#{"Rule": "In multi-db mode, for each <name> in babelfish_sysdatabases, <name>_dbo must also exist in pg_authid"}
name#!#sys#!#nspname#!#{"Rule": "In multi-db mode, for each <name> in babelfish_sysdatabases, <name>_dbo must also exist in babelfish_namespace_ext"}
name#!#sys#!#rolname#!#{"Rule": "<owner> in babelfish_sysdatabases must also exist in babelfish_authid_login_ext"}
name#!#pg_catalog#!#rolname#!#{"Rule": "In multi-db mode, for each <name> in babelfish_sysdatabases, <name>_db_owner must also exist in pg_authid"}
name#!#pg_catalog#!#rolname#!#{"Rule": "In multi-db mode, for each <name> in babelfish_sysdatabases, <name>_dbo must also exist in pg_authid"}
name#!#sys#!#nspname#!#{"Rule": "In multi-db mode, for each <name> in babelfish_sysdatabases, <name>_dbo must also exist in babelfish_namespace_ext"}
name#!#pg_catalog#!#nspname#!#{"Rule": "<nspname> in babelfish_namespace_ext must also exist in pg_namespace"}
name#!#pg_catalog#!#nspname#!#{"Rule": "<nspname> in babelfish_namespace_ext must also exist in pg_namespace"}
name#!#pg_catalog#!#nspname#!#{"Rule": "<nspname> in babelfish_namespace_ext must also exist in pg_namespace"}
name#!#pg_catalog#!#rolname#!#{"Rule": "<rolname> in babelfish_authid_login_ext must also exist in pg_authid"}
text#!#sys#!#name#!#{"Rule": "<default_database_name> in babelfish_authid_login_ext must also exist in babelfish_sysdatabases"}
name#!#pg_catalog#!#rolname#!#{"Rule": "<rolname> in babelfish_authid_login_ext must also exist in pg_authid"}
text#!#sys#!#name#!#{"Rule": "<default_database_name> in babelfish_authid_login_ext must also exist in babelfish_sysdatabases"}
name#!#pg_catalog#!#rolname#!#{"Rule": "<rolname> in babelfish_authid_user_ext must also exist in pg_authid"}
text#!#sys#!#name#!#{"Rule": "<database_name> in babelfish_authid_user_ext must also exist in babelfish_sysdatabases"}
name#!#pg_catalog#!#rolname#!#{"Rule": "<rolname> in babelfish_authid_user_ext must also exist in pg_authid"}
text#!#sys#!#name#!#{"Rule": "<database_name> in babelfish_authid_user_ext must also exist in babelfish_sysdatabases"}
name#!#pg_catalog#!#rolname#!#{"Rule": "<rolname> in babelfish_authid_user_ext must also exist in pg_authid"}
text#!#sys#!#name#!#{"Rule": "<database_name> in babelfish_authid_user_ext must also exist in babelfish_sysdatabases"}
name#!#pg_catalog#!#rolname#!#{"Rule": "<rolname> in babelfish_authid_user_ext must also exist in pg_authid"}
text#!#sys#!#name#!#{"Rule": "<database_name> in babelfish_authid_user_ext must also exist in babelfish_sysdatabases"}
name#!#pg_catalog#!#rolname#!#{"Rule": "<rolname> in babelfish_authid_user_ext must also exist in pg_authid"}
text#!#sys#!#name#!#{"Rule": "<database_name> in babelfish_authid_user_ext must also exist in babelfish_sysdatabases"}
name#!#pg_catalog#!#rolname#!#{"Rule": "<rolname> in babelfish_authid_user_ext must also exist in pg_authid"}
text#!#sys#!#name#!#{"Rule": "<database_name> in babelfish_authid_user_ext must also exist in babelfish_sysdatabases"}
name#!#pg_catalog#!#rolname#!#{"Rule": "<rolname> in babelfish_authid_user_ext must also exist in pg_authid"}
text#!#sys#!#name#!#{"Rule": "<database_name> in babelfish_authid_user_ext must also exist in babelfish_sysdatabases"}
name#!#pg_catalog#!#rolname#!#{"Rule": "<rolname> in babelfish_authid_user_ext must also exist in pg_authid"}
text#!#sys#!#name#!#{"Rule": "<database_name> in babelfish_authid_user_ext must also exist in babelfish_sysdatabases"}
name#!#pg_catalog#!#rolname#!#{"Rule": "<rolname> in babelfish_authid_user_ext must also exist in pg_authid"}
text#!#sys#!#name#!#{"Rule": "<database_name> in babelfish_authid_user_ext must also exist in babelfish_sysdatabases"}
~~END~~


-- psql
ALTER SYSTEM SET babelfishpg_tsql.migration_mode = 'single-db';
SELECT pg_reload_conf();
GO
~~START~~
bool
t
~~END~~


-- tsql
SELECT 1;
GO
~~START~~
int
1
~~END~~

