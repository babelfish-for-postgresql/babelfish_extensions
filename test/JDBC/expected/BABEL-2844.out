use master;
go

select current_setting('babelfishpg_tsql.explain_costs');
go
~~START~~
text
on
~~END~~


-- CREATE TABLE should not be executed
set BABELFISH_SHOWPLAN_ALL oN;
go
create table babel_2844_t1 (a1 int, b1 int);
go
~~START~~
text
Query Text: create table babel_2844_t1 (a1 int, b1 int);
~~END~~

select * from babel_2844_t1 where b1 = 1;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: relation "babel_2844_t1" does not exist)~~


-- SELECT should not be executed
select * from set_config('babelfishpg_tsql.explain_costs', 'off', false);
go
~~START~~
text
Query Text: select * from set_config('babelfishpg_tsql.explain_costs', 'off', false)
Function Scan on set_config  (cost=0.00..0.01 rows=1 width=32)
~~END~~

set BABELFISH_SHOWPLAN_ALL OFF;
go
select current_setting('babelfishpg_tsql.explain_costs');
go
~~START~~
text
on
~~END~~


-- Create tables
create table babel_2844_t1 (a1 int, b1 int);
go
insert babel_2844_t1 values (1, 1);
go
~~ROW COUNT: 1~~

create table babel_2844_t2 (a2 int, b2 int);
go

-- INSERT should not be executed
set BABELFISH_SHOWPLAN_ALL ON;
go
insert babel_2844_t1 values (2, 2);
go
~~START~~
text
Query Text: insert babel_2844_t1 values (2, 2);
Insert on babel_2844_t1  (cost=0.00..0.01 rows=0 width=0)
  ->  Result  (cost=0.00..0.01 rows=1 width=8)
~~END~~

insert into babel_2844_t2 select * from babel_2844_t1 where a1 = 1;
go
~~START~~
text
Query Text: insert into babel_2844_t2 select * from babel_2844_t1 where a1 = 1;
Insert on babel_2844_t2  (cost=0.00..38.25 rows=0 width=0)
  ->  Seq Scan on babel_2844_t1  (cost=0.00..38.25 rows=11 width=8)
        Filter: (a1 = 1)
~~END~~

set BABELFISH_SHOWPLAN_ALL OFF;
go
select * from babel_2844_t1;
go
~~START~~
int#!#int
1#!#1
~~END~~

select * from babel_2844_t2;
go
~~START~~
int#!#int
~~END~~


-- single statement
set BABELFISH_SHOWPLAN_ALL ON;
go
select 1;
go
~~START~~
text
Query Text: select 1
Result  (cost=0.00..0.01 rows=1 width=4)
~~END~~

select * from babel_2844_t1 where b1 = 1;
go
~~START~~
text
Query Text: select * from babel_2844_t1 where b1 = 1
Seq Scan on babel_2844_t1  (cost=0.00..38.25 rows=11 width=8)
  Filter: (b1 = 1)
~~END~~


-- Other formats
set BABELFISH_SHOWPLAN_ALL OFF;
go
select set_config('babelfishpg_tsql.explain_format', 'xml', false);
go
~~START~~
text
xml
~~END~~

set BABELFISH_SHOWPLAN_ALL ON;
go
select * from babel_2844_t1 where b1 = 1;
go
~~START~~
text
Query Text: select * from babel_2844_t1 where b1 = 1
Seq Scan on babel_2844_t1  (cost=0.00..38.25 rows=11 width=8)
  Filter: (b1 = 1)
~~END~~

set BABELFISH_SHOWPLAN_ALL OFF;
go
select set_config('babelfishpg_tsql.explain_format', 'json', false);
go
~~START~~
text
json
~~END~~

set BABELFISH_SHOWPLAN_ALL ON;
go
select * from babel_2844_t1 where b1 = 1;
go
~~START~~
text
Query Text: select * from babel_2844_t1 where b1 = 1
Seq Scan on babel_2844_t1  (cost=0.00..38.25 rows=11 width=8)
  Filter: (b1 = 1)
~~END~~

set BABELFISH_SHOWPLAN_ALL OFF;
go
select set_config('babelfishpg_tsql.explain_format', 'yaml', false);
go
~~START~~
text
yaml
~~END~~

set BABELFISH_SHOWPLAN_ALL ON;
select * from babel_2844_t1 where b1 = 1;
go
~~START~~
text
Query Text: select * from babel_2844_t1 where b1 = 1
Seq Scan on babel_2844_t1  (cost=0.00..38.25 rows=11 width=8)
  Filter: (b1 = 1)
~~END~~

set BABELFISH_SHOWPLAN_ALL OFF;
go
select set_config('babelfishpg_tsql.explain_format', 'text', false);
go
~~START~~
text
text
~~END~~


-- multiple statements
set BABELFISH_SHOWPLAN_ALL ON;
insert babel_2844_t1 values (2, 2);
insert into babel_2844_t2 select * from babel_2844_t1 where a1 in (1, 2);
select * from babel_2844_t1;
select * from babel_2844_t2;
go
~~START~~
text
Query Text: insert babel_2844_t1 values (2, 2);
Insert on babel_2844_t1  (cost=0.00..0.01 rows=0 width=0)
  ->  Result  (cost=0.00..0.01 rows=1 width=8)
Query Text: insert into babel_2844_t2 select * from babel_2844_t1 where a1 in (1, 2);
Insert on babel_2844_t2  (cost=0.00..38.25 rows=0 width=0)
  ->  Seq Scan on babel_2844_t1  (cost=0.00..38.25 rows=23 width=8)
        Filter: (a1 = ANY ('{1,2}'::integer[]))
Query Text: select * from babel_2844_t1
Seq Scan on babel_2844_t1  (cost=0.00..32.60 rows=2260 width=8)
Query Text: select * from babel_2844_t2
Seq Scan on babel_2844_t2  (cost=0.00..32.60 rows=2260 width=8)
~~END~~


set BABELFISH_SHOWPLAN_ALL OFF;
go
select * from babel_2844_t1;
go
~~START~~
int#!#int
1#!#1
~~END~~

select * from babel_2844_t2;
go
~~START~~
int#!#int
~~END~~


-- pltsql procedure
create procedure babel_2844_proc @param int
as
    insert babel_2844_t1 values (3, 3);
    select * from babel_2844_t1 where a1 = @param;
go
set BABELFISH_SHOWPLAN_ALL ON;
go
execute babel_2844_proc 3;
go
~~START~~
text
Query Text: EXEC babel_2844_proc 3
  Query Text: insert babel_2844_t1 values (3, 3);
  ->  Insert on babel_2844_t1  (cost=0.00..0.01 rows=0 width=0)
        ->  Result  (cost=0.00..0.01 rows=1 width=8)
  Query Text: select * from babel_2844_t1 where a1 = "@param"
  ->  Seq Scan on babel_2844_t1  (cost=0.00..38.25 rows=11 width=8)
        Filter: (a1 = 3)
~~END~~

set BABELFISH_SHOWPLAN_ALL OFF;
go
select * from babel_2844_t1;
go
~~START~~
int#!#int
1#!#1
~~END~~

drop procedure babel_2844_proc;
go

-- C procedure
set BABELFISH_SHOWPLAN_ALL ON;
go
declare @handle int;
EXEC SP_PREPARE @handle OUT, NULL, 'select * from babel_2844_t1';
go
~~START~~
text
Query Text: EXEC SP_PREPARE @handle OUT, NULL, 'select * from babel_2844_t1'
~~END~~

set BABELFISH_SHOWPLAN_ALL OFF;
go

-- ITVF (Inline Table-Valued Function)
create function babel_2844_itvf(@param int)
returns table
    as return (
        select * from babel_2844_t1 where a1 = @param
    );
go
set BABELFISH_SHOWPLAN_ALL ON;
go
select * from babel_2844_itvf(1);
go
~~START~~
text
Query Text: select * from babel_2844_itvf(1)
Function Scan on babel_2844_itvf  (cost=0.25..10.25 rows=1000 width=8)
~~END~~

set BABELFISH_SHOWPLAN_ALL OFF;
go
drop function babel_2844_itvf;
go

-- MSTVF (Multi-Statement Table-Valued Function)
create function babel_2844_mstvf(@param int)
returns @tab table (a int, b int)
as begin
    insert into @tab select * from babel_2844_t1 where a1 = @param;
    insert into @tab select * from babel_2844_t2 where a2 = @param;
    return;
end;
go
set BABELFISH_SHOWPLAN_ALL ON;
go
select * from babel_2844_mstvf(1);
go
~~START~~
text
Query Text: select * from babel_2844_mstvf(1)
Function Scan on babel_2844_mstvf  (cost=0.25..10.25 rows=1000 width=8)
~~END~~

set BABELFISH_SHOWPLAN_ALL OFF;
go
drop function babel_2844_mstvf;
go

-- Control structure
set BABELFISH_SHOWPLAN_ALL ON;
go
if (select a1 from babel_2844_t1 where b1 = 1) = 1
    select 1
else
    select 2
;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Showing Estimated Execution Plan for CONDITIONAL GOTO statement is not yet supported)~~


-- sp_executesql
EXECUTE sp_executesql N'select * from babel_2844_t1 where a1 = @param', N'@param int',
        @param = 2;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: Showing Estimated Execution Plan for EXEC SP statment is not yet supported)~~


-- Temp tables
create table #babel_2844_tt1 (a int, b int);
select * from #babel_2844_tt1 where a = 1;
go
~~ERROR (Code: 33557097)~~

~~ERROR (Message: relation "#babel_2844_tt1" does not exist)~~


-- SET EXPLAIN ANALYZE
set BABELFISH_STATISTICS PROFILE ON;
go
~~START~~
text
Query Text: set BABELFISH_STATISTICS PROFILE ON;
~~END~~


set BABELFISH_SHOWPLAN_ALL OfF;
go

-- Should not return a query plan
select * from babel_2844_t1;
go
~~START~~
int#!#int
1#!#1
~~END~~


drop table babel_2844_t1;
go
drop table babel_2844_t2;
go
