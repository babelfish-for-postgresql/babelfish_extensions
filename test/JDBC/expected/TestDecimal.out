CREATE TABLE decimal_table(num decimal(5, 2));

prepst#!#INSERT INTO decimal_table(num) VALUES(?) #!#decimal|-|a|-|3|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a|-|123.456|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a|-|123.4|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a|-|123|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a|-|123.45|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a|-|<NULL>|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a|-|-123.456|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a|-|-123.4|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a|-|-123|-|5|-|2
~~ROW COUNT: 1~~

#prepst#!#exec#!#decimal|-|a|-|0|-|5|-|2
prepst#!#exec#!#decimal|-|a|-|-1|-|3|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a|-|-123|-|9|-|2
~~ROW COUNT: 1~~


SELECT * FROM decimal_table;
~~START~~
numeric
3.00
123.46
123.40
123.00
123.45
<NULL>
-123.46
-123.40
-123.00
-1.00
-123.00
~~END~~


DROP TABLE decimal_table;

CREATE TABLE decimal_table(num decimal(38, 3));

prepst#!#INSERT INTO decimal_table(num) VALUES(?) #!#decimal|-|a1|-|3|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a1|-|123.456|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a1|-|123.4|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a1|-|123|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a1|-|123.45|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a1|-|<NULL>|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a1|-|-123.456|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a1|-|-123.4|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a1|-|-123|-|5|-|2
~~ROW COUNT: 1~~

#prepst#!#exec#!#decimal|-|a1|-|0|-|5|-|2
prepst#!#exec#!#decimal|-|a1|-|-1|-|3|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a1|-|-123|-|9|-|2
~~ROW COUNT: 1~~


prepst#!#exec#!#decimal|-|a1|-|2147483647|-|10|-|0
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a1|-|-2147483647|-|10|-|0
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a1|-|2147483646|-|10|-|0
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a1|-|-2147483646|-|10|-|0
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a1|-|2147483648|-|10|-|0
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a1|-|-2147483648|-|10|-|0
~~ROW COUNT: 1~~


SELECT * FROM decimal_table;
~~START~~
numeric
3.000
123.456
123.400
123.000
123.450
<NULL>
-123.456
-123.400
-123.000
-1.000
-123.000
2147483647.000
-2147483647.000
2147483646.000
-2147483646.000
2147483648.000
-2147483648.000
~~END~~


DROP TABLE decimal_table;

# JIRA 507, WORKING FOR BABEL
#CREATE TABLE decimal_table(num decimal(39, 20));

CREATE TABLE decimal_table(num decimal(38, 20));

prepst#!#INSERT INTO decimal_table(num) VALUES(?) #!#decimal|-|a2|-|3|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a2|-|123.456|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a2|-|123.4|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a2|-|123|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a2|-|123.45|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a2|-|<NULL>|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a2|-|-123.456|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a2|-|-123.4|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a2|-|-123|-|5|-|2
~~ROW COUNT: 1~~

#prepst#!#exec#!#decimal|-|a2|-|0|-|5|-|2
prepst#!#exec#!#decimal|-|a2|-|-1|-|3|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a2|-|-123|-|9|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a2|-|2147483647|-|10|-|0
~~ROW COUNT: 1~~

SELECT * FROM decimal_table;
~~START~~
numeric
3.00000000000000000000
123.45600000000000000000
123.40000000000000000000
123.00000000000000000000
123.45000000000000000000
<NULL>
-123.45600000000000000000
-123.40000000000000000000
-123.00000000000000000000
-1.00000000000000000000
-123.00000000000000000000
2147483647.00000000000000000000
~~END~~


DROP TABLE decimal_table;

CREATE TABLE decimal_table(num decimal(38, 20));
prepst#!#INSERT INTO decimal_table(num) VALUES(?) #!#decimal|-|a3|-|3|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a3|-|123.456|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a3|-|123.4|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a3|-|123|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a3|-|123.45|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a3|-|<NULL>|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a3|-|-123.456|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a3|-|-123.4|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a3|-|-123|-|5|-|2
~~ROW COUNT: 1~~

#prepst#!#exec#!#decimal|-|a3|-|0|-|5|-|2
prepst#!#exec#!#decimal|-|a3|-|-1|-|3|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a3|-|-123|-|9|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a3|-|2147483647|-|10|-|0
~~ROW COUNT: 1~~

SELECT * FROM decimal_table;
~~START~~
numeric
3.00000000000000000000
123.45600000000000000000
123.40000000000000000000
123.00000000000000000000
123.45000000000000000000
<NULL>
-123.45600000000000000000
-123.40000000000000000000
-123.00000000000000000000
-1.00000000000000000000
-123.00000000000000000000
2147483647.00000000000000000000
~~END~~


DROP TABLE decimal_table;

CREATE TABLE decimal_table(num decimal(38, 21));
prepst#!#INSERT INTO decimal_table(num) VALUES(?) #!#decimal|-|a4|-|3|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a4|-|123.456|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a4|-|123.4|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a4|-|123|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a4|-|123.45|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a4|-|<NULL>|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a4|-|-123.456|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a4|-|-123.4|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a4|-|-123|-|5|-|2
~~ROW COUNT: 1~~

#prepst#!#exec#!#decimal|-|a4|-|0|-|5|-|2
prepst#!#exec#!#decimal|-|a4|-|-1|-|3|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a4|-|-123|-|9|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a4|-|2147483647|-|10|-|0
~~ROW COUNT: 1~~

SELECT * FROM decimal_table;
~~START~~
numeric
3.000000000000000000000
123.456000000000000000000
123.400000000000000000000
123.000000000000000000000
123.450000000000000000000
<NULL>
-123.456000000000000000000
-123.400000000000000000000
-123.000000000000000000000
-1.000000000000000000000
-123.000000000000000000000
2147483647.000000000000000000000
~~END~~


DROP TABLE decimal_table;

CREATE TABLE decimal_table(num decimal(38, 22));
prepst#!#INSERT INTO decimal_table(num) VALUES(?) #!#decimal|-|a5|-|3|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a5|-|123.456|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a5|-|123.4|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a5|-|123|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a5|-|123.45|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a5|-|<NULL>|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a5|-|-123.456|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a5|-|-123.4|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a5|-|-123|-|5|-|2
~~ROW COUNT: 1~~

#prepst#!#exec#!#decimal|-|a5|-|0|-|5|-|2
prepst#!#exec#!#decimal|-|a5|-|-1|-|3|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a5|-|-123|-|9|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a5|-|2147483647|-|10|-|0
~~ROW COUNT: 1~~

SELECT * FROM decimal_table;
~~START~~
numeric
3.0000000000000000000000
123.4560000000000000000000
123.4000000000000000000000
123.0000000000000000000000
123.4500000000000000000000
<NULL>
-123.4560000000000000000000
-123.4000000000000000000000
-123.0000000000000000000000
-1.0000000000000000000000
-123.0000000000000000000000
2147483647.0000000000000000000000
~~END~~


DROP TABLE decimal_table;

CREATE TABLE decimal_table(num decimal(38, 23));
prepst#!#INSERT INTO decimal_table(num) VALUES(?) #!#decimal|-|a6|-|3|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a6|-|123.456|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a6|-|123.4|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a6|-|123|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a6|-|123.45|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a6|-|<NULL>|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a6|-|-123.456|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a6|-|-123.4|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a6|-|-123|-|5|-|2
~~ROW COUNT: 1~~

#prepst#!#exec#!#decimal|-|a6|-|0|-|5|-|2
prepst#!#exec#!#decimal|-|a6|-|-1|-|3|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a6|-|-123|-|9|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a6|-|2147483647|-|10|-|0
~~ROW COUNT: 1~~

SELECT * FROM decimal_table;
~~START~~
numeric
3.00000000000000000000000
123.45600000000000000000000
123.40000000000000000000000
123.00000000000000000000000
123.45000000000000000000000
<NULL>
-123.45600000000000000000000
-123.40000000000000000000000
-123.00000000000000000000000
-1.00000000000000000000000
-123.00000000000000000000000
2147483647.00000000000000000000000
~~END~~


DROP TABLE decimal_table;

CREATE TABLE decimal_table(num decimal(38, 25));
prepst#!#INSERT INTO decimal_table(num) VALUES(?) #!#decimal|-|a7|-|3|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a7|-|123.456|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a7|-|123.4|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a7|-|123|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a7|-|123.45|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a7|-|<NULL>|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a7|-|-123.456|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a7|-|-123.4|-|5|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a7|-|-123|-|5|-|2
~~ROW COUNT: 1~~

#prepst#!#exec#!#decimal|-|a7|-|0|-|5|-|2
prepst#!#exec#!#decimal|-|a7|-|-1|-|3|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a7|-|-123|-|9|-|2
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a7|-|247483647|-|10|-|0
~~ROW COUNT: 1~~

prepst#!#exec#!#decimal|-|a7|-|-247483647|-|10|-|0
~~ROW COUNT: 1~~

SELECT * FROM decimal_table;
~~START~~
numeric
3.0000000000000000000000000
123.4560000000000000000000000
123.4000000000000000000000000
123.0000000000000000000000000
123.4500000000000000000000000
<NULL>
-123.4560000000000000000000000
-123.4000000000000000000000000
-123.0000000000000000000000000
-1.0000000000000000000000000
-123.0000000000000000000000000
247483647.0000000000000000000000000
-247483647.0000000000000000000000000
~~END~~


DROP TABLE decimal_table;


CREATE TABLE decimal_table(num decimal(38, 25));

insert into decimal_table values (2147483647)
~~ROW COUNT: 1~~

insert into decimal_table values (-2147483647)
~~ROW COUNT: 1~~


insert into decimal_table values (2147483646)
~~ROW COUNT: 1~~

insert into decimal_table values (-2147483646)
~~ROW COUNT: 1~~


insert into decimal_table values (2147483648)
~~ROW COUNT: 1~~

insert into decimal_table values (-2147483648)
~~ROW COUNT: 1~~


#insert into decimal_table values(123456789123456789.1234567891234567891234567);
#insert into decimal_table values(1234567891234567891.1234567891234567891234567);
#insert into decimal_table values(123456789123456789.12345678912345678912345678);
insert into decimal_table values(0.0);
~~ROW COUNT: 1~~

insert into decimal_table values(0.0000000000000000000000000);
~~ROW COUNT: 1~~

insert into decimal_table values(0.00000000000000000000000000);
~~ROW COUNT: 1~~


SELECT * FROM decimal_table;
~~START~~
numeric
2147483647.0000000000000000000000000
-2147483647.0000000000000000000000000
2147483646.0000000000000000000000000
-2147483646.0000000000000000000000000
2147483648.0000000000000000000000000
-2147483648.0000000000000000000000000
0E-25
0E-25
0E-25
~~END~~


DROP TABLE decimal_table;

# BABEL-3074
CREATE TABLE overflow_test (id integer PRIMARY KEY, amount decimal(6, 2));
INSERT INTO overflow_test VALUES (1, 5000.00);
~~ROW COUNT: 1~~

INSERT INTO overflow_test VALUES (2, 6000.00);
~~ROW COUNT: 1~~

SELECT count(*), sum(amount) FROM overflow_test;
~~START~~
int#!#numeric
2#!#11000.00
~~END~~

DROP TABLE overflow_test;

# BABEL-3157
CREATE TABLE overflow_test (id integer PRIMARY KEY, amount decimal(6, 2));
INSERT INTO overflow_test VALUES (1, 9999.99), (2, 9999.99), (3, 9999.99), (4,9999.99), (5, 9999.99), (6, 9999.99), (7, 9999.99), (8,9999.99), (9, 9999.99), (10,9999.99), (11, 9999.99), (12, 9999.99), (13, 9999.99), (14,9999.99), (15, 9999.99), (16,9999.99);
~~ROW COUNT: 16~~

#testing default precision for both sum() and avg()
#o/p scale = 2 [i/p scale for sum()], o/p scale = 6 [max(6, i/p scale) for avg()]
With Top10 as (select top (10) * from overflow_test) select sum(amount), avg(amount) from Top10;
~~START~~
numeric#!#numeric
99999.90#!#9999.990000
~~END~~

With Top11 as (select top (11) * from overflow_test) select sum(amount), avg(amount) from Top11;
~~START~~
numeric#!#numeric
109999.89#!#9999.990000
~~END~~

DROP TABLE overflow_test;

#testing resultant scale when i/p scale > 6
CREATE TABLE #overflow_test (amount decimal(10, 8));
INSERT INTO #overflow_test VALUES(99.123);
~~ROW COUNT: 1~~

INSERT INTO #overflow_test VALUES(1.123);
~~ROW COUNT: 1~~

#o/p scale = 8 [i/p scale for sum()], o/p scale = 8 [max(6, i/p scale) for avg()]
SELECT sum(amount) from #overflow_test;
~~START~~
numeric
100.24600000
~~END~~

SELECT avg(amount) from #overflow_test;
~~START~~
numeric
50.12300000
~~END~~

DROP TABLE #overflow_test;
 
CREATE TABLE #overflow_test (amount decimal(5, 2));
INSERT INTO #overflow_test VALUES(999.12);
~~ROW COUNT: 1~~

INSERT INTO #overflow_test VALUES(1.12);
~~ROW COUNT: 1~~

#o/p precision = 38, so sum() won't cause an overflow even when #output digits > input precision
SELECT sum(amount) from #overflow_test;
~~START~~
numeric
1000.24
~~END~~

SELECT avg(amount) from #overflow_test;
~~START~~
numeric
500.120000
~~END~~

DROP TABLE #overflow_test;


CREATE TABLE overflow_test (id integer PRIMARY KEY, amount1 decimal(6, 2), amount2 decimal(6,3), amount3 decimal(11,8));
INSERT INTO overflow_test VALUES (1, 9999.99, 999.999, 999.12345678), (2, 9999.99, 999.999, 999.12345678), (3, 9999.99, 999.999, 999.12345678), (4, 9999.99, 999.999, 999.12345678), (5, 9999.99, 999.999, 999.12345678), (6, 9999.99, 999.999, 999.12345678), (7, 9999.99, 999.999, 999.12345678), (8, 9999.99, 999.999, 999.12345678), (9, 9999.99, 999.999, 999.12345678), (10,9999.99, 999.999, 999.12345678), (11, 9999.99, 999.999, 999.12345678), (12, 9999.9, 999.999, 999.12345678), (13, 9999.99, 999.999, 999.12345678), (14,9999.99, 999.999, 999.12345678), (15, 9999.99, 999.999, 999.12345678), (16, 9999.99, 999.999, 999.12345678), (17, 9999.99, 999.999, 999.12345678), (18, 9999.99, 999.999, 999.12345678), (19, 9999.99, 999.999, 999.12345678), (20,9999.99, 999.999, 999.12345678), (21, 9999.99, 999.999, 999.12345678), (22,9999.99, 999.999, 999.12345678);
~~ROW COUNT: 22~~

select sum(amount1), sum(amount2), sum(amount3), avg(amount1), avg(amount2), avg(amount3) from overflow_test;
~~START~~
numeric#!#numeric#!#numeric#!#numeric#!#numeric#!#numeric
219999.69#!#21999.978#!#21980.71604916#!#9999.985909#!#999.999000#!#999.12345678
~~END~~

With Top10 as (select top (10) * from overflow_test) select sum(amount1), sum(amount2), sum(amount3), avg(amount1), avg(amount2), avg(amount3) from Top10;
~~START~~
numeric#!#numeric#!#numeric#!#numeric#!#numeric#!#numeric
99999.90#!#9999.990#!#9991.23456780#!#9999.990000#!#999.999000#!#999.12345678
~~END~~

With Top11 as (select top (11) * from overflow_test) select sum(amount1), sum(amount2), sum(amount3), avg(amount1), avg(amount2), avg(amount3) from Top11;
~~START~~
numeric#!#numeric#!#numeric#!#numeric#!#numeric#!#numeric
109999.89#!#10999.989#!#10990.35802458#!#9999.990000#!#999.999000#!#999.12345678
~~END~~

DROP TABLE overflow_test;
