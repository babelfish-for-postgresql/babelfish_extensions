-- psql
CREATE EXTENSION pg_stat_statements WITH SCHEMA sys;
go

-- psql
SET sys.pg_stat_statements.track = 'none';
SELECT sys.pg_stat_statements_reset();
go
~~START~~
void

~~END~~



-- tsql
--
-- simple and compound statements
--
SELECT 1 AS "int";
go
~~START~~
int
1
~~END~~



SELECT 'hello'
  -- multiline
  AS "text";
go
~~START~~
varchar
hello
~~END~~


SELECT 'world' AS "text";
go
~~START~~
varchar
world
~~END~~




-- tsql

-- transaction
-- BEGIN TRANSACTION;
-- SELECT 1 AS "int";
-- SELECT 'hello' AS "text";
-- COMMIT TRANSACTION;
-- go
-- database
-- CREATE DATABASE test_db
-- go
-- DROP DATABASE test_db
-- go
-- login
-- CREATE LOGIN  l1 with password = '12345678'
-- go
-- DROP LOGIN  l1
-- go
SELECT dbid, toplevel, query, calls, rows, plans from pg_stat_statements where queryid != 0 ORDER BY query COLLATE "C";
go
~~START~~
int#!#bit#!#text#!#bigint#!#bigint#!#bigint
16385#!#1#!#SELECT $1<newline>  -- multiline<newline>  AS "text"#!#2#!#2#!#0
16385#!#1#!#SELECT $1 AS "int"#!#1#!#1#!#0
~~END~~


-- psql
SELECT sys.pg_stat_statements_reset();
go
~~START~~
void

~~END~~


-- tsql

-- CRUD: INSERT SELECT UPDATE DELETE on test table
-- utility "create table" should not be shown
CREATE TABLE test (a int, b char(20));
go

-- tsql
CREATE TRIGGER trigger1 on [dbo].[test] for insert as
PRINT 'after insert trigger called'
go

INSERT INTO test VALUES(generate_series(1, 10), 'aaa');
go
~~WARNING (Code: 0)~~

~~WARNING (Message: after insert trigger called  Server SQLState: S0001)~~

~~ROW COUNT: 10~~

UPDATE test SET b = 'bbb' WHERE a > 7;
DELETE FROM test WHERE a > 9;
go
~~ROW COUNT: 3~~

~~ROW COUNT: 1~~

TRUNCATE TABLE test;
go

-- create role & permissions(grant revoke)
CREATE ROLE test_role
go
GRANT INSERT, UPDATE, SELECT ON test TO test_role
go
REVOKE INSERT, UPDATE, SELECT ON test FROM test_role
go

-- alter 
ALTER TABLE test ENABLE TRIGGER trigger1
go
ALTER TABLE test DISABLE  TRIGGER trigger1
go



-- explicit transaction
-- BEGIN TRANSACTION;
-- UPDATE test SET b = '111' WHERE a = 1 ;
-- COMMIT TRANSACTION;
-- go
-- SELECT without constants
SELECT * FROM test ORDER BY a;
-- SELECT with IN clause
SELECT * FROM test WHERE a IN (1, 2, 3, 4, 5);
go
~~START~~
int#!#char
~~END~~

~~START~~
int#!#char
~~END~~


SELECT dbid, toplevel, query, calls, rows, plans from pg_stat_statements where queryid != 0 ORDER BY query COLLATE "C";
go
~~START~~
int#!#bit#!#text#!#bigint#!#bigint#!#bigint
16385#!#1#!#ALTER TABLE test DISABLE  TRIGGER trigger1#!#1#!#0#!#0
16385#!#1#!#ALTER TABLE test ENABLE TRIGGER trigger1#!#1#!#0#!#0
16385#!#1#!#CREATE ROLE test_role#!#1#!#0#!#0
16385#!#1#!#CREATE TABLE test (a int, b char(20))#!#1#!#0#!#0
16385#!#1#!#DELETE FROM test WHERE a > $1#!#1#!#1#!#0
16385#!#1#!#GRANT INSERT, UPDATE, SELECT ON test TO test_role#!#1#!#0#!#0
16385#!#1#!#INSERT INTO test VALUES(generate_series($1, $2), $3)#!#1#!#10#!#0
16385#!#1#!#REVOKE INSERT, UPDATE, SELECT ON test FROM test_role#!#1#!#0#!#0
16385#!#1#!#SELECT * FROM test ORDER BY a#!#1#!#0#!#0
16385#!#1#!#SELECT * FROM test WHERE a IN ($1, $2, $3, $4, $5)#!#1#!#0#!#0
16385#!#1#!#TRUNCATE TABLE test#!#1#!#0#!#0
16385#!#1#!#UPDATE test SET b = $1 WHERE a > $2#!#1#!#3#!#0
~~END~~


-- psql
SELECT sys.pg_stat_statements_reset();
go
~~START~~
void

~~END~~


-- tsql

-- DROP TRIGGER trigger1
DROP TABLE test;
DROP ROLE test_role;
go

-- tsql
CREATE TABLE customers(customerid int not null, name varchar(22), age int, check (age>=18), primary key(customerid))
CREATE TABLE orders(orderid int not null, customerid int, country varchar(20) default 'INDIA', primary key(orderid), foreign key(customerid) references customers(customerid))
INSERT INTO customers values(1, 'ABC', 18),(2,'XYZ', 21), (3, 'LMN', 29),(4, 'PQR', 52),(5, 'STU', 23)
INSERT INTO orders values(10, 5, 'London'), (11, 3, 'India'), (12, 2, 'USA'), (13, 4, 'Pakistan'),(14, 5, 'Germany'),(15, 1, 'India')
go
~~ROW COUNT: 5~~

~~ROW COUNT: 6~~


SELECT COUNT(*) from orders where country ='India'
go
~~START~~
int
2
~~END~~


CREATE VIEW [India customers] as select customerid from orders where country = 'India'
go

SELECT * FROM [India customers]
go
~~START~~
int
3
1
~~END~~


SELECT * FROM customers
go
~~START~~
int#!#varchar#!#int
1#!#ABC#!#18
2#!#XYZ#!#21
3#!#LMN#!#29
4#!#PQR#!#52
5#!#STU#!#23
~~END~~


SELECT AVG(age) FROM customers
go
~~START~~
int
28
~~END~~


SELECT REVERSE(name) FROM customers
go
~~START~~
text
CBA
ZYX
NML
RQP
UTS
~~END~~


SELECT * FROM information_schema.views;
go
~~START~~
nvarchar#!#nvarchar#!#nvarchar#!#nvarchar#!#varchar#!#varchar
master#!#dbo#!#india customers#!#CREATE VIEW [India customers] as select customerid from orders where country = 'India'#!#NONE#!#NO
master#!#dbo#!#sysdatabases#!#<NULL>#!#NONE#!#NO
~~END~~



-- tsql function

-- CREATE FUNCTION f1(@a INT) RETURNS INT AS BEGIN RETURN (@a + 1) END; 
-- go
CREATE SEQUENCE [dbo].[newCounter] AS int START WITH 5 increment by 5 
go

SELECT NEXT VALUE FOR [dbo].[newCounter]
go
~~START~~
bigint
5
~~END~~


DROP SEQUENCE [dbo].[newCounter]
go


-- Inline table-valued function
-- create function [dbo].[getCustomers](@age int) returns table as return 
-- (select customers.customerid, customers.name, customers.age from customers
-- where age >= @age)
-- go
-- select * from [dbo].[getCustomers](20)
-- go
-- Temp table
CREATE TABLE #demo(age int)
go

DROP VIEW  [India customers]
go
-- DROP FUNCTION [dbo].[getCustomers]
-- go
DROP TABLE orders
go
DROP TABLE customers
go

-- tsql




-- tsql
-- DROP FUNCTION f1
-- go
-- CREATE PROC p1 @a INT, @b FLOAT AS SELECT @a, @b; 
-- go
-- DROP PROCEDURE p1;
-- go
SELECT dbid, toplevel, query, calls, rows, plans from pg_stat_statements where queryid != 0 ORDER BY query COLLATE "C";
go
~~START~~
int#!#bit#!#text#!#bigint#!#bigint#!#bigint
16385#!#1#!#CREATE SEQUENCE [dbo].[newCounter] AS int START WITH 5 increment by 5#!#1#!#0#!#0
16385#!#1#!#CREATE TABLE #demo(age int)#!#1#!#0#!#0
16385#!#1#!#CREATE TABLE customers(customerid int not null, name varchar(22), age int, check (age>=18), primary key(customerid))#!#1#!#0#!#0
16385#!#1#!#CREATE TABLE orders(orderid int not null, customerid int, country varchar(20) default 'INDIA', primary key(orderid), foreign key(customerid) references customers(customerid))#!#1#!#0#!#0
16385#!#1#!#CREATE VIEW [India customers] as select customerid from orders where country = 'India'#!#1#!#0#!#0
16385#!#1#!#DROP ROLE test_role#!#1#!#0#!#0
16385#!#1#!#DROP SEQUENCE [dbo].[newCounter]#!#1#!#0#!#0
16385#!#1#!#DROP TABLE customers#!#1#!#0#!#0
16385#!#1#!#DROP TABLE orders#!#1#!#0#!#0
16385#!#1#!#DROP TABLE test#!#1#!#0#!#0
16385#!#1#!#DROP VIEW  [India customers]#!#1#!#0#!#0
16385#!#1#!#INSERT INTO customers values($1, $2, $3),($4,$5, $6), ($7, $8, $9),($10, $11, $12),($13, $14, $15)#!#1#!#5#!#0
16385#!#1#!#INSERT INTO orders values($1, $2, $3), ($4, $5, $6), ($7, $8, $9), ($10, $11, $12),($13, $14, $15),($16, $17, $18)#!#1#!#6#!#0
16385#!#1#!#SELECT    nextval($1)#!#1#!#1#!#0
16385#!#1#!#SELECT * FROM [India customers]#!#1#!#2#!#0
16385#!#1#!#SELECT * FROM customers#!#1#!#5#!#0
16385#!#1#!#SELECT * FROM information_schema_tsql.views#!#1#!#2#!#0
16385#!#1#!#SELECT AVG(age) FROM customers#!#1#!#1#!#0
16385#!#1#!#SELECT COUNT(*) from orders where country =$1#!#1#!#1#!#0
16385#!#1#!#SELECT REVERSE(name) FROM customers#!#1#!#5#!#0
~~END~~


-- psql
DROP EXTENSION pg_stat_statements;
go


