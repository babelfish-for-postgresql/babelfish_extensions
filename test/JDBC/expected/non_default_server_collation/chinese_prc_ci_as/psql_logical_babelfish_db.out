-- psql
-- check whether we can query system views before setting the GUC. Should return zero rows
select "TABLE_CATALOG", "COLUMN_NAME" from information_schema_tsql.columns where "TABLE_NAME"='sysdatabases' ORDER BY "COLUMN_NAME";
go
~~START~~
"sys"."varchar"#!#"sys"."varchar"
~~END~~


-- GUC should be NULL as it is not set yet
show psql_logical_babelfish_db_name;
go
~~START~~
text

~~END~~


-- set the GUC to master
set psql_logical_babelfish_db_name = 'master';
go

-- check whether the GUC has been set to master
show psql_logical_babelfish_db_name;
go
~~START~~
text
master
~~END~~


-- query system views. Should return metadata of master database
select "TABLE_CATALOG", "COLUMN_NAME" from information_schema_tsql.columns where "TABLE_NAME"='sysdatabases' ORDER BY "COLUMN_NAME";
go
~~START~~
"sys"."varchar"#!#"sys"."varchar"
master#!#category
master#!#cmptlevel
master#!#crdate
master#!#dbid
master#!#filename
master#!#mode
master#!#name
master#!#reserved
master#!#sid
master#!#status
master#!#status2
master#!#version
~~END~~


-- set the GUC to an invalid database
set psql_logical_babelfish_db_name = 'invalid_db'
go

-- should return zero rows as the database set does not exist
select "TABLE_CATALOG", "COLUMN_NAME" from information_schema_tsql.columns where "TABLE_NAME"='sysdatabases' ORDER BY "COLUMN_NAME";
go
~~START~~
"sys"."varchar"#!#"sys"."varchar"
~~END~~


-- tsql
-- should return data of master as the current database is master
select TABLE_CATALOG, COLUMN_NAME from information_schema_tsql.columns where "TABLE_NAME"='sysdatabases' ORDER BY "COLUMN_NAME";
go
~~START~~
nvarchar#!#nvarchar
master#!#category
master#!#cmptlevel
master#!#crdate
master#!#dbid
master#!#filename
master#!#mode
master#!#name
master#!#reserved
master#!#sid
master#!#status
master#!#status2
master#!#version
~~END~~


create database logical_database_db1
go

-- try to set GUC from TSQL endpoint. Should not effect information_schema_tsql.columns view 
-- from TSQL endpoint it is a PG GUC
select set_config('psql_logical_babelfish_db_name', 'logical_database_db1', false)
go
~~START~~
text
logical_database_db1
~~END~~


-- should return data of master as the current database is master
select TABLE_CATALOG, COLUMN_NAME from information_schema_tsql.columns where "TABLE_NAME"='sysdatabases' ORDER BY "COLUMN_NAME";
go
~~START~~
nvarchar#!#nvarchar
master#!#category
master#!#cmptlevel
master#!#crdate
master#!#dbid
master#!#filename
master#!#mode
master#!#name
master#!#reserved
master#!#sid
master#!#status
master#!#status2
master#!#version
~~END~~


use logical_database_db1
go

-- should return data of logical_database_db1 as the current database is logical_database_db1
select TABLE_CATALOG, COLUMN_NAME from information_schema_tsql.columns where "TABLE_NAME"='sysdatabases' ORDER BY "COLUMN_NAME";
go
~~START~~
nvarchar#!#nvarchar
logical_database_db1#!#category
logical_database_db1#!#cmptlevel
logical_database_db1#!#crdate
logical_database_db1#!#dbid
logical_database_db1#!#filename
logical_database_db1#!#mode
logical_database_db1#!#name
logical_database_db1#!#reserved
logical_database_db1#!#sid
logical_database_db1#!#status
logical_database_db1#!#status2
logical_database_db1#!#version
~~END~~


create login logical_database_l1 with password = '12345678'
go

alter server role sysadmin add member logical_database_l1
go

-- psql user=logical_database_l1 password=12345678
select "TABLE_CATALOG", "COLUMN_NAME" from information_schema_tsql.columns where "TABLE_NAME"='sysdatabases' ORDER BY "COLUMN_NAME";
go
~~START~~
"sys"."varchar"#!#"sys"."varchar"
~~END~~


-- any user can set the GUC
set psql_logical_babelfish_db_name = 'logical_database_db1'
go

select "TABLE_CATALOG", "COLUMN_NAME" from information_schema_tsql.columns where "TABLE_NAME"='sysdatabases' ORDER BY "COLUMN_NAME";
go
~~START~~
"sys"."varchar"#!#"sys"."varchar"
logical_database_db1#!#category
logical_database_db1#!#cmptlevel
logical_database_db1#!#crdate
logical_database_db1#!#dbid
logical_database_db1#!#filename
logical_database_db1#!#mode
logical_database_db1#!#name
logical_database_db1#!#reserved
logical_database_db1#!#sid
logical_database_db1#!#status
logical_database_db1#!#status2
logical_database_db1#!#version
~~END~~


-- psql
-- Cleanup
-- Need to terminate active session before cleaning up the login
SELECT pg_terminate_backend(pid) FROM pg_stat_get_activity(NULL)
WHERE sys.suser_name(usesysid) = 'logical_database_l1' AND backend_type = 'client backend' AND usesysid IS NOT NULL;
GO
~~START~~
bool
t
~~END~~


-- Wait to sync with another session
SELECT pg_sleep(1);
GO
~~START~~
void

~~END~~


-- tsql
use master
go

drop login logical_database_l1
go

drop database logical_database_db1
go
