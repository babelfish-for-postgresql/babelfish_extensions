-- Throws an error
SELECT OBJECT_DEFINITION();
GO
~~ERROR (Code: 201)~~

~~ERROR (Message: function object_definition expects parameter "object_id", which was not supplied.)~~


-- Should return NULL
SELECT OBJECT_DEFINITION(NULL);
GO
~~START~~
nvarchar
<NULL>
~~END~~


-- Should return NULL
SELECT OBJECT_DEFINITION(OBJECT_ID('object_definition_t1'))
GO
~~START~~
nvarchar
<NULL>
~~END~~


USE object_definition_db;
GO

-- Should return NULL
SELECT OBJECT_DEFINITION(OBJECT_ID('object_definition_t1'))
GO
~~START~~
nvarchar
<NULL>
~~END~~


-- Default constraint
SELECT OBJECT_DEFINITION(cc.object_id) FROM sys.default_constraints cc WHERE parent_object_id = OBJECT_ID('object_definition_t1');
GO
~~START~~
nvarchar
100
~~END~~


-- Check constraint
SELECT OBJECT_DEFINITION(cc.object_id) FROM sys.check_constraints cc WHERE parent_object_id = OBJECT_ID('object_definition_t2');
GO
~~START~~
nvarchar
((b <> 'b'))
~~END~~


-- Procedure
SELECT OBJECT_DEFINITION(OBJECT_ID('object_definition_proc'))
GO
~~START~~
nvarchar
CREATE PROC object_definition_proc<newline>AS<newline>SELECT 1;
~~END~~


-- Scalar function
SELECT OBJECT_DEFINITION(OBJECT_ID('object_definition_fc1'))
GO
~~START~~
nvarchar
CREATE FUNCTION object_definition_fc1(@fc1_a nvarchar) RETURNS nvarchar AS BEGIN return @fc1_a END;
~~END~~


-- DML trigger
-- TODO: After BABEL-3927 is fixed, we get the correct trigger definition.
-- Now, it shows NULL.
SELECT OBJECT_DEFINITION(OBJECT_ID('object_definition_tr1'))
GO
~~START~~
nvarchar
<NULL>
~~END~~


-- Inline table-valued function
SELECT OBJECT_DEFINITION(OBJECT_ID('object_definition_itvf'))
GO
~~START~~
nvarchar
CREATE FUNCTION object_definition_itvf()<newline>RETURNS table<newline>AS<newline>RETURN (SELECT 42 AS VALUE)
~~END~~


-- Table-valued function
SELECT OBJECT_DEFINITION(OBJECT_ID('object_definition_tvf'))
GO
~~START~~
nvarchar
CREATE FUNCTION object_definition_tvf()<newline>RETURNS @testFuncTvf table (tvf int PRIMARY KEY)<newline>AS<newline>BEGIN<newline>INSERT INTO @testFuncTvf VALUES (1)<newline>RETURN<newline>END;
~~END~~


-- View
SELECT OBJECT_DEFINITION(OBJECT_ID('object_definition_sch.object_definition_v1'))
GO
~~START~~
nvarchar
CREATE VIEW object_definition_sch.object_definition_v1<newline>AS<newline>SELECT * FROM object_definition_t2
~~END~~

