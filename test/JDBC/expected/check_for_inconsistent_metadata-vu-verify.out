-- psql





-- Updating one entry from pg_proc pg catalog so that metadata inconsistency fails during check against babelfish_function_ext babelfish catalog
UPDATE pg_catalog.pg_proc SET proname = 'check_for_inconsistent_metadata_vu_prepare_func_wrong' WHERE proname = 'check_for_inconsistent_metadata_vu_prepare_func';
SELECT proname, prosrc FROM pg_catalog.pg_proc WHERE proname = 'check_for_inconsistent_metadata_vu_prepare_func_wrong';
SELECT nspname, funcname FROM sys.babelfish_function_ext WHERE funcname = 'check_for_inconsistent_metadata_vu_prepare_func';
-- should return true because of inconsistency
SELECT sys.check_for_inconsistent_metadata();
-- should return the inconsistent row data
SELECT sys.babelfish_inconsistent_metadata();
UPDATE pg_catalog.pg_proc SET proname = 'check_for_inconsistent_metadata_vu_prepare_func' WHERE proname = 'check_for_inconsistent_metadata_vu_prepare_func_wrong';
GO
~~ROW COUNT: 1~~

~~START~~
name#!#text
check_for_inconsistent_metadata_vu_prepare_func_wrong#!#BEGIN<newline>RETURN (SELECT sys.check_for_inconsistent_metadata())<newline>END
~~END~~

~~START~~
name#!#name
master_dbo#!#check_for_inconsistent_metadata_vu_prepare_func
~~END~~

~~START~~
bool
t
~~END~~

~~START~~
record
(name,pg_catalog,proname,"{""Rule"": ""<funcname> in babelfish_function_ext must also exist in pg_proc""}")
~~END~~

~~ROW COUNT: 1~~


-- tsql
-- since data is consistent now, this should return 0
SELECT check_for_inconsistent_metadata_vu_prepare_func()
GO
~~START~~
bit
0
~~END~~

