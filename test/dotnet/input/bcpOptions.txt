# -a packet_size
Create table sourceTable(a int, b int not null)
Create table destinationTable(a int, b int not null)
Insert into sourceTable values (1, 1);
Insert into sourceTable values (NULL, 2);
bcp -a 1024#!#out#!#bcp_source#!#sourceTable
bcp -a 1024#!#in#!#bcp_source#!#destinationTable
Select * from sourceTable
Select * from destinationTable
drop table sourceTable
drop table destinationTable

# -b batch_size
Create table sourceTable(a int, b int not null)
Create table destinationTable(a int, b int not null)
Insert into sourceTable values (1, 1);
Insert into sourceTable values (NULL, 2);
bcp -b 1024#!#out#!#bcp_source#!#sourceTable
bcp -b 1024#!#in#!#bcp_source#!#destinationTable
Select * from sourceTable
Select * from destinationTable
drop table sourceTable
drop table destinationTable

# -c character_data_type
Create table sourceTable(a int, b int not null)
Create table destinationTable(a int, b int not null)
Insert into sourceTable values (1, 1);
Insert into sourceTable values (NULL, 2);
bcp -c#!#out#!#bcp_source#!#sourceTable
bcp -c#!#in#!#bcp_source#!#destinationTable
Select * from sourceTable
Select * from destinationTable
drop table sourceTable
drop table destinationTable

# -F first row
Create table sourceTable(a int, b int not null)
Create table destinationTable(a int, b int not null)
Insert into sourceTable values (1, 1);
Insert into sourceTable values (NULL, 2);
Insert into sourceTable values (3, 1);
Insert into sourceTable values (2, 2);
bcp -F 2#!#out#!#bcp_source#!#sourceTable
bcp -F 2#!#in#!#bcp_source#!#destinationTable
Select * from sourceTable
Select * from destinationTable
drop table sourceTable
drop table destinationTable

# -L last row
Create table sourceTable(a int, b int not null)
Create table destinationTable(a int, b int not null)
Insert into sourceTable values (1, 1);
Insert into sourceTable values (NULL, 2);
Insert into sourceTable values (3, 1);
Insert into sourceTable values (2, 2);
bcp -L 3#!#out#!#bcp_source#!#sourceTable
bcp -L 2#!#in#!#bcp_source#!#destinationTable
Select * from sourceTable
Select * from destinationTable
drop table sourceTable
drop table destinationTable

# -m max_errors
Create table sourceTable(a int, b int not null)
Create table destinationTable(a int, b int not null)
Insert into sourceTable values (1, 1);
Insert into sourceTable values (NULL, 2);
bcp -m 1#!#out#!#bcp_source#!#sourceTable
bcp -m 1#!#in#!#bcp_source#!#destinationTable
Select * from sourceTable
Select * from destinationTable
drop table sourceTable
drop table destinationTable

# -n native datatype
Create table sourceTable(a int, b int not null)
Create table destinationTable(a int, b int not null)
Insert into sourceTable values (1, 1);
Insert into sourceTable values (NULL, 2);
bcp -n#!#out#!#bcp_source#!#sourceTable
bcp -n#!#in#!#bcp_source#!#destinationTable
Select * from sourceTable
Select * from destinationTable
drop table sourceTable
drop table destinationTable

# -N 
Create table sourceTable(a int, b int not null)
Create table destinationTable(a int, b int not null)
Insert into sourceTable values (1, 1);
Insert into sourceTable values (NULL, 2);
bcp -N#!#out#!#bcp_source#!#sourceTable
bcp -N#!#in#!#bcp_source#!#destinationTable
Select * from sourceTable
Select * from destinationTable
drop table sourceTable
drop table destinationTable

# -r row terminator
Create table sourceTable(a int, b int not null)
Create table destinationTable(a int, b int not null)
Insert into sourceTable values (1, 1);
Insert into sourceTable values (NULL, 2);
bcp -r ','#!#out#!#bcp_source#!#sourceTable
bcp -r ','#!#in#!#bcp_source#!#destinationTable
Select * from sourceTable
Select * from destinationTable
drop table sourceTable
drop table destinationTable

# -t field terminator
Create table sourceTable(a int, b int not null)
Create table destinationTable(a int, b int not null)
Insert into sourceTable values (1, 1);
Insert into sourceTable values (NULL, 2);
bcp -t ','#!#out#!#bcp_source#!#sourceTable
bcp -t ','#!#in#!#bcp_source#!#destinationTable
Select * from sourceTable
Select * from destinationTable
drop table sourceTable
drop table destinationTable

# -h "bb " ROWS_PER_BATCH
Create table sourceTable(a bigint, b bigint not null)
Create table destinationTable(a bigint, b bigint not null)
Create table destinationTable2(a bigint, b bigint not null)
Insert into sourceTable values (1, 1);
Insert into sourceTable values (NULL, 2);
bcp -h "bb 24"#!#out#!#bcp_source#!#sourceTable
bcp #!#in#!#bcp_source#!#destinationTable
bcp -h "bb 24"#!#in#!#bcp_source#!#destinationTable2
Select * from sourceTable
Select * from destinationTable
Select * from destinationTable2
drop table sourceTable
drop table destinationTable
drop table destinationTable2

# -h "cc " KILOBYTES_PER_BATCH
Create table sourceTable(a bigint, b bigint not null)
Create table destinationTable(a bigint, b bigint not null)
Create table destinationTable2(a bigint, b bigint not null)
Insert into sourceTable values (1, 1);
Insert into sourceTable values (2, 2);
bcp -h "cc 24"#!#out#!#bcp_source#!#sourceTable
bcp #!#in#!#bcp_source#!#destinationTable
bcp -h "cc 24"#!#in#!#bcp_source#!#destinationTable2
Select * from sourceTable
Select * from destinationTable
Select * from destinationTable2
drop table sourceTable
drop table destinationTable
drop table destinationTable2

# -h "CHECK_CONSTRAINTS"
Create table sourceTable(a bigint, b bigint not null)
Create table destinationTable(a bigint, b bigint not null)
Create table destinationTable2(a bigint, b bigint not null)
Insert into sourceTable values (1, 1);
Insert into sourceTable values (2, 2);
bcp -h "CHECK_CONSTRAINTS"#!#out#!#bcp_source#!#sourceTable
bcp #!#in#!#bcp_source#!#destinationTable
bcp -h "CHECK_CONSTRAINTS"#!#in#!#bcp_source#!#destinationTable2
Select * from sourceTable
Select * from destinationTable
Select * from destinationTable2
drop table sourceTable
drop table destinationTable
drop table destinationTable2

# -h "FIRE_TRIGGERS"
Create table sourceTable(a bigint, b bigint not null)
Create table destinationTable(a bigint, b bigint not null)
Create table destinationTable2(a bigint, b bigint not null)
Insert into sourceTable values (1, 1);
Insert into sourceTable values (2, 2);
bcp -h "FIRE_TRIGGERS"#!#out#!#bcp_source#!#sourceTable
bcp #!#in#!#bcp_source#!#destinationTable
bcp -h "FIRE_TRIGGERS"#!#in#!#bcp_source#!#destinationTable2
Select * from sourceTable
Select * from destinationTable
Select * from destinationTable2
drop table sourceTable
drop table destinationTable
drop table destinationTable2

# -h "ORDER"
Create table sourceTable(a bigint, b bigint not null)
Create table destinationTable(a bigint, b bigint not null)
Create table destinationTable2(a bigint, b bigint not null)
Insert into sourceTable values (1, 1);
Insert into sourceTable values (2, 2);
bcp -h "ORDER(a DESC)"#!#out#!#bcp_source#!#sourceTable
bcp #!#in#!#bcp_source#!#destinationTable
bcp -h "ORDER(a DESC)"#!#in#!#bcp_source#!#destinationTable2
Select * from sourceTable
Select * from destinationTable
Select * from destinationTable2
drop table sourceTable
drop table destinationTable
drop table destinationTable2

# -h "TABLOCK"
Create table sourceTable(a bigint, b bigint not null)
Create table destinationTable(a bigint, b bigint not null)
Create table destinationTable2(a bigint, b bigint not null)
Insert into sourceTable values (1, 1);
Insert into sourceTable values (NULL, 2);
bcp -h "TABLOCK"#!#out#!#bcp_source#!#sourceTable
bcp #!#in#!#bcp_source#!#destinationTable
bcp -h "TABLOCK"#!#in#!#bcp_source#!#destinationTable2
Select * from sourceTable
Select * from destinationTable
Select * from destinationTable2
drop table sourceTable
drop table destinationTable
drop table destinationTable2

# -E 
Create table sourceTable(a bigint, b bigint not null)
Create table destinationTable(a bigint, b bigint not null)
Insert into sourceTable values (1, 1);
Insert into sourceTable values (NULL, 2);
bcp -E#!#out#!#bcp_source#!#sourceTable
bcp -E#!#in#!#bcp_source#!#destinationTable
Select * from sourceTable
Select * from destinationTable
drop table sourceTable
drop table destinationTable

# -R 
Create table sourceTable(a bigint, b bigint not null)
Create table destinationTable(a bigint, b bigint not null)
Insert into sourceTable values (1, 1);
Insert into sourceTable values (NULL, 2);
bcp -R#!#out#!#bcp_source#!#sourceTable
bcp -R#!#in#!#bcp_source#!#destinationTable
Select * from sourceTable
Select * from destinationTable
drop table sourceTable
drop table destinationTable

# -l login_timeout
Create table sourceTable(a bigint, b bigint not null)
Create table destinationTable(a bigint, b bigint not null)
Insert into sourceTable values (1, 1);
Insert into sourceTable values (NULL, 2);
bcp -l 100#!#out#!#bcp_source#!#sourceTable
bcp -l 100#!#in#!#bcp_source#!#destinationTable
Select * from sourceTable
Select * from destinationTable
drop table sourceTable
drop table destinationTable

# -w 
Create table sourceTable(a bigint, b bigint not null)
Create table destinationTable(a bigint, b bigint not null)
Insert into sourceTable values (1, 1);
Insert into sourceTable values (NULL, 2);
bcp -w#!#out#!#bcp_source#!#sourceTable
bcp -w#!#in#!#bcp_source#!#destinationTable
Select * from sourceTable
Select * from destinationTable
drop table sourceTable
drop table destinationTable

# -k keep_nulls
Create table sourceTable(a int, b int)
Create table destinationTable1(a int, b int default(4))
Create table destinationTable2(a int, b int default(4))
Insert into sourceTable values (1, 1);
Insert into sourceTable values (1, NULL);
Insert into sourceTable values (NULL, 1);
Insert into sourceTable values (NULL, NULL);
Insert into sourceTable(a) values (2);
bcp -k#!#out#!#bcp_source#!#sourceTable
bcp -k#!#in#!#bcp_source#!#destinationTable1
bcp#!#in#!#bcp_source#!#destinationTable2
Select * from sourceTable
Select * from destinationTable1
Select * from destinationTable2
drop table sourceTable
drop table destinationTable1
drop table destinationTable2

Create table sourceTable(a int, b int default(4))
Create table destinationTable1(a int, b int default(4))
Create table destinationTable2(a int, b int default(4))
Insert into sourceTable values (1, 1);
Insert into sourceTable values (1, NULL);
Insert into sourceTable values (NULL, 1);
Insert into sourceTable values (NULL, NULL);
Insert into sourceTable(a) values (2);
bcp -k#!#out#!#bcp_source#!#sourceTable
bcp -k#!#in#!#bcp_source#!#destinationTable1
bcp#!#in#!#bcp_source#!#destinationTable2
Select * from sourceTable
Select * from destinationTable1
Select * from destinationTable2
drop table sourceTable
drop table destinationTable1
drop table destinationTable2

#computed columns
Create table sourceTable(a int, b int,c as a * b)
Create table destinationTable(a int, b int,c as a * b)
Insert into sourceTable values (1, 1);
Insert into sourceTable values (2, 2);
Insert into sourceTable values (NULL, 2);
Insert into sourceTable values (2, NULL);
bcp#!#out#!#bcp_source#!#sourceTable
bcp#!#in#!#bcp_source#!#destinationTable
Select * from sourceTable
Select * from destinationTable
drop table sourceTable
drop table destinationTable

Create table sourceTable(a int, b int,c as a + b)
Create table destinationTable(a int, b int,c as a - b)
Insert into sourceTable values (1, 3);
Insert into sourceTable values (2, 6);
Insert into sourceTable values (NULL, 2);
Insert into sourceTable values (2, NULL);
bcp#!#out#!#bcp_source#!#sourceTable
bcp#!#in#!#bcp_source#!#destinationTable
Select * from sourceTable
Select * from destinationTable
drop table sourceTable
drop table destinationTable

Create table sourceTable(a int, b int,c as a + b)
Create table destinationTable(a int, b int,c as a - b)
Insert into sourceTable values (1, 3);
Insert into sourceTable values (2, 6);
Insert into sourceTable values (NULL, 2);
Insert into sourceTable values (2, NULL);
bcp -k#!#out#!#bcp_source#!#sourceTable
bcp -k#!#in#!#bcp_source#!#destinationTable
Select * from sourceTable
Select * from destinationTable
drop table sourceTable
drop table destinationTable

create table sourceTable(a date, b as DATEADD(year,60,a))
create table destinationTable(a date, b as DATEADD(year,60,a))
insert into sourceTable values ('01-01-2000')
bcp#!#out#!#bcp_source#!#sourceTable
bcp#!#in#!#bcp_source#!#destinationTable
Select * from sourceTable
Select * from destinationTable
drop table sourceTable
drop table destinationTable

# Testing Explicit Error Messages For Unsupported Options
Insert Bulk destinationTable ([a] bigint,[b] bigint) with(tablock);
Insert Bulk destinationTable ([a] bigint,[b] bigint) with(check_constraints);
Insert Bulk destinationTable ([a] bigint,[b] bigint) with(fire_triggers);
insert bulk dbo.ct_depreciacao_gerencial_valores ([r_e_c_n_o_] Int, [acumulado] Decimal(19,6), [centro_custo] VarChar(20) COLLATE SQL_Latin1_General_CP1_CI_AS, [data] VarChar(8) COLLATE SQL_Latin1_General_CP1_CI_AS, [diasdeprec] Decimal(19,6), [fator] Decimal(19,6), [grupo_bem] Int, [nlanc] Int, [percentual] Decimal(19,6), [recno_bem] Int, [taxa_grupo] Decimal(19,6), [valor] Decimal(19,6), [valorresidual] Decimal(19,6), [manual] VarChar(1) COLLATE SQL_Latin1_General_CP1_CI_AS, [credito_pis] Decimal(19,2), [credito_cofins] Decimal(19,2), [id] UniqueIdentifier) with (KEEP_NULLS, TABLOCK);
Insert Bulk destinationTable ([a] bigint,[b] bigint) with(hello);

# Testing Explicit Escape Hatch For Unsupported Options
SELECT current_setting('babelfishpg_tsql.escape_hatch_insert_bulk_options');
EXEC sp_babelfish_configure 'babelfishpg_tsql.escape_hatch_insert_bulk_options', 'strict';
Insert Bulk destinationTable ([a] bigint,[b] bigint) with(tablock);
Insert Bulk destinationTable ([a] bigint,[b] bigint) with(check_constraints);
Insert Bulk destinationTable ([a] bigint,[b] bigint) with(fire_triggers);
insert bulk dbo.ct_depreciacao_gerencial_valores ([r_e_c_n_o_] Int, [acumulado] Decimal(19,6), [centro_custo] VarChar(20) COLLATE SQL_Latin1_General_CP1_CI_AS, [data] VarChar(8) COLLATE SQL_Latin1_General_CP1_CI_AS, [diasdeprec] Decimal(19,6), [fator] Decimal(19,6), [grupo_bem] Int, [nlanc] Int, [percentual] Decimal(19,6), [recno_bem] Int, [taxa_grupo] Decimal(19,6), [valor] Decimal(19,6), [valorresidual] Decimal(19,6), [manual] VarChar(1) COLLATE SQL_Latin1_General_CP1_CI_AS, [credito_pis] Decimal(19,2), [credito_cofins] Decimal(19,2), [id] UniqueIdentifier) with (KEEP_NULLS, TABLOCK);
Insert Bulk destinationTable ([a] bigint,[b] bigint) with(hello);
EXEC sp_babelfish_configure 'babelfishpg_tsql.escape_hatch_insert_bulk_options', 'ignore';