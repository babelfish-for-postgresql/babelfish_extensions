CREATE TABLE babel_4794(ID INT);

# Doing tds BEGIN make python test framework into autocommit=false 
# mode & remains in autocommit mode untill a tds rollback/commit
# When autcommit mode is off pyodbc manages the user transaction
# for user. So on error it should implicitly start a new user txn

# begin tran -> error (should rollback txn) -> driver should implicitly spawn new txn -> rollback
txn#!#begin
SELECT @@trancount
INSERT INTO babel_4794 VALUES (1)
INSERT INTO babel_4794 VALUES ('a')
INSERT INTO babel_4794 VALUES (2)
INSERT INTO babel_4794 VALUES (3)
SELECT @@trancount
txn#!#rollback

SELECT @@trancount

SELECT * FROM babel_4794

# begin tran -> error (should rollback txn) -> driver should implicitly spawn new txn -> commit
txn#!#begin
SELECT @@trancount
INSERT INTO babel_4794 VALUES (1)
INSERT INTO babel_4794 VALUES ('a')
INSERT INTO babel_4794 VALUES (2)
INSERT INTO babel_4794 VALUES (3)
SELECT @@trancount
txn#!#commit

SELECT @@trancount

SELECT * FROM babel_4794

DROP TABLE babel_4794;

SELECT @@trancount
